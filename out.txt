--Get challenge
--Get challenge
--REGION: keccak table
--Annotation: keccak table all-zero row
def advice_6_0: Prop := c.Advice 6 0 = 0
--Annotation: keccak table all-zero row
def advice_7_0: Prop := c.Advice 7 0 = 0
--Annotation: keccak table all-zero row
def advice_8_0: Prop := c.Advice 8 0 = 0
--Annotation: keccak table all-zero row
def advice_9_0: Prop := c.Advice 9 0 = 0
--Annotation: keccak table all-zero row
def advice_10_0: Prop := c.Advice 10 0 = 0
--Annotation: keccak table row 1
def advice_6_1: Prop := c.Advice 6 1 = 1
--Annotation: keccak table row 1
--Annotation: keccak table row 1
def advice_8_1: Prop := c.Advice 8 1 = 4
--Annotation: keccak table row 1
def advice_9_1: Prop := c.Advice 9 1 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: keccak table row 1
def advice_10_1: Prop := c.Advice 10 1 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--EXITED REGION: keccak table
--REGION: push table
--Annotation: Push table assign byte 0
def fixed_0: Prop := c.Fixed 3 0 = 0
--Annotation: Push table assign push_size 0
def fixed_1: Prop := c.Fixed 4 0 = 0
--Annotation: Push table assign byte 1
def fixed_2: Prop := c.Fixed 3 1 = 1
--Annotation: Push table assign push_size 1
def fixed_3: Prop := c.Fixed 4 1 = 0
--Annotation: Push table assign byte 2
def fixed_4: Prop := c.Fixed 3 2 = 2
--Annotation: Push table assign push_size 2
def fixed_5: Prop := c.Fixed 4 2 = 0
--Annotation: Push table assign byte 3
def fixed_6: Prop := c.Fixed 3 3 = 3
--Annotation: Push table assign push_size 3
def fixed_7: Prop := c.Fixed 4 3 = 0
--Annotation: Push table assign byte 4
def fixed_8: Prop := c.Fixed 3 4 = 4
--Annotation: Push table assign push_size 4
def fixed_9: Prop := c.Fixed 4 4 = 0
--Annotation: Push table assign byte 5
def fixed_10: Prop := c.Fixed 3 5 = 5
--Annotation: Push table assign push_size 5
def fixed_11: Prop := c.Fixed 4 5 = 0
--Annotation: Push table assign byte 6
def fixed_12: Prop := c.Fixed 3 6 = 6
--Annotation: Push table assign push_size 6
def fixed_13: Prop := c.Fixed 4 6 = 0
--Annotation: Push table assign byte 7
def fixed_14: Prop := c.Fixed 3 7 = 7
--Annotation: Push table assign push_size 7
def fixed_15: Prop := c.Fixed 4 7 = 0
--Annotation: Push table assign byte 8
def fixed_16: Prop := c.Fixed 3 8 = 8
--Annotation: Push table assign push_size 8
def fixed_17: Prop := c.Fixed 4 8 = 0
--Annotation: Push table assign byte 9
def fixed_18: Prop := c.Fixed 3 9 = 9
--Annotation: Push table assign push_size 9
def fixed_19: Prop := c.Fixed 4 9 = 0
--Annotation: Push table assign byte 10
def fixed_20: Prop := c.Fixed 3 10 = 10
--Annotation: Push table assign push_size 10
def fixed_21: Prop := c.Fixed 4 10 = 0
--Annotation: Push table assign byte 11
def fixed_22: Prop := c.Fixed 3 11 = 11
--Annotation: Push table assign push_size 11
def fixed_23: Prop := c.Fixed 4 11 = 0
--Annotation: Push table assign byte 12
def fixed_24: Prop := c.Fixed 3 12 = 12
--Annotation: Push table assign push_size 12
def fixed_25: Prop := c.Fixed 4 12 = 0
--Annotation: Push table assign byte 13
def fixed_26: Prop := c.Fixed 3 13 = 13
--Annotation: Push table assign push_size 13
def fixed_27: Prop := c.Fixed 4 13 = 0
--Annotation: Push table assign byte 14
def fixed_28: Prop := c.Fixed 3 14 = 14
--Annotation: Push table assign push_size 14
def fixed_29: Prop := c.Fixed 4 14 = 0
--Annotation: Push table assign byte 15
def fixed_30: Prop := c.Fixed 3 15 = 15
--Annotation: Push table assign push_size 15
def fixed_31: Prop := c.Fixed 4 15 = 0
--Annotation: Push table assign byte 16
def fixed_32: Prop := c.Fixed 3 16 = 16
--Annotation: Push table assign push_size 16
def fixed_33: Prop := c.Fixed 4 16 = 0
--Annotation: Push table assign byte 17
def fixed_34: Prop := c.Fixed 3 17 = 17
--Annotation: Push table assign push_size 17
def fixed_35: Prop := c.Fixed 4 17 = 0
--Annotation: Push table assign byte 18
def fixed_36: Prop := c.Fixed 3 18 = 18
--Annotation: Push table assign push_size 18
def fixed_37: Prop := c.Fixed 4 18 = 0
--Annotation: Push table assign byte 19
def fixed_38: Prop := c.Fixed 3 19 = 19
--Annotation: Push table assign push_size 19
def fixed_39: Prop := c.Fixed 4 19 = 0
--Annotation: Push table assign byte 20
def fixed_40: Prop := c.Fixed 3 20 = 20
--Annotation: Push table assign push_size 20
def fixed_41: Prop := c.Fixed 4 20 = 0
--Annotation: Push table assign byte 21
def fixed_42: Prop := c.Fixed 3 21 = 21
--Annotation: Push table assign push_size 21
def fixed_43: Prop := c.Fixed 4 21 = 0
--Annotation: Push table assign byte 22
def fixed_44: Prop := c.Fixed 3 22 = 22
--Annotation: Push table assign push_size 22
def fixed_45: Prop := c.Fixed 4 22 = 0
--Annotation: Push table assign byte 23
def fixed_46: Prop := c.Fixed 3 23 = 23
--Annotation: Push table assign push_size 23
def fixed_47: Prop := c.Fixed 4 23 = 0
--Annotation: Push table assign byte 24
def fixed_48: Prop := c.Fixed 3 24 = 24
--Annotation: Push table assign push_size 24
def fixed_49: Prop := c.Fixed 4 24 = 0
--Annotation: Push table assign byte 25
def fixed_50: Prop := c.Fixed 3 25 = 25
--Annotation: Push table assign push_size 25
def fixed_51: Prop := c.Fixed 4 25 = 0
--Annotation: Push table assign byte 26
def fixed_52: Prop := c.Fixed 3 26 = 26
--Annotation: Push table assign push_size 26
def fixed_53: Prop := c.Fixed 4 26 = 0
--Annotation: Push table assign byte 27
def fixed_54: Prop := c.Fixed 3 27 = 27
--Annotation: Push table assign push_size 27
def fixed_55: Prop := c.Fixed 4 27 = 0
--Annotation: Push table assign byte 28
def fixed_56: Prop := c.Fixed 3 28 = 28
--Annotation: Push table assign push_size 28
def fixed_57: Prop := c.Fixed 4 28 = 0
--Annotation: Push table assign byte 29
def fixed_58: Prop := c.Fixed 3 29 = 29
--Annotation: Push table assign push_size 29
def fixed_59: Prop := c.Fixed 4 29 = 0
--Annotation: Push table assign byte 30
def fixed_60: Prop := c.Fixed 3 30 = 30
--Annotation: Push table assign push_size 30
def fixed_61: Prop := c.Fixed 4 30 = 0
--Annotation: Push table assign byte 31
def fixed_62: Prop := c.Fixed 3 31 = 31
--Annotation: Push table assign push_size 31
def fixed_63: Prop := c.Fixed 4 31 = 0
--Annotation: Push table assign byte 32
def fixed_64: Prop := c.Fixed 3 32 = 32
--Annotation: Push table assign push_size 32
def fixed_65: Prop := c.Fixed 4 32 = 0
--Annotation: Push table assign byte 33
def fixed_66: Prop := c.Fixed 3 33 = 33
--Annotation: Push table assign push_size 33
def fixed_67: Prop := c.Fixed 4 33 = 0
--Annotation: Push table assign byte 34
def fixed_68: Prop := c.Fixed 3 34 = 34
--Annotation: Push table assign push_size 34
def fixed_69: Prop := c.Fixed 4 34 = 0
--Annotation: Push table assign byte 35
def fixed_70: Prop := c.Fixed 3 35 = 35
--Annotation: Push table assign push_size 35
def fixed_71: Prop := c.Fixed 4 35 = 0
--Annotation: Push table assign byte 36
def fixed_72: Prop := c.Fixed 3 36 = 36
--Annotation: Push table assign push_size 36
def fixed_73: Prop := c.Fixed 4 36 = 0
--Annotation: Push table assign byte 37
def fixed_74: Prop := c.Fixed 3 37 = 37
--Annotation: Push table assign push_size 37
def fixed_75: Prop := c.Fixed 4 37 = 0
--Annotation: Push table assign byte 38
def fixed_76: Prop := c.Fixed 3 38 = 38
--Annotation: Push table assign push_size 38
def fixed_77: Prop := c.Fixed 4 38 = 0
--Annotation: Push table assign byte 39
def fixed_78: Prop := c.Fixed 3 39 = 39
--Annotation: Push table assign push_size 39
def fixed_79: Prop := c.Fixed 4 39 = 0
--Annotation: Push table assign byte 40
def fixed_80: Prop := c.Fixed 3 40 = 40
--Annotation: Push table assign push_size 40
def fixed_81: Prop := c.Fixed 4 40 = 0
--Annotation: Push table assign byte 41
def fixed_82: Prop := c.Fixed 3 41 = 41
--Annotation: Push table assign push_size 41
def fixed_83: Prop := c.Fixed 4 41 = 0
--Annotation: Push table assign byte 42
def fixed_84: Prop := c.Fixed 3 42 = 42
--Annotation: Push table assign push_size 42
def fixed_85: Prop := c.Fixed 4 42 = 0
--Annotation: Push table assign byte 43
def fixed_86: Prop := c.Fixed 3 43 = 43
--Annotation: Push table assign push_size 43
def fixed_87: Prop := c.Fixed 4 43 = 0
--Annotation: Push table assign byte 44
def fixed_88: Prop := c.Fixed 3 44 = 44
--Annotation: Push table assign push_size 44
def fixed_89: Prop := c.Fixed 4 44 = 0
--Annotation: Push table assign byte 45
def fixed_90: Prop := c.Fixed 3 45 = 45
--Annotation: Push table assign push_size 45
def fixed_91: Prop := c.Fixed 4 45 = 0
--Annotation: Push table assign byte 46
def fixed_92: Prop := c.Fixed 3 46 = 46
--Annotation: Push table assign push_size 46
def fixed_93: Prop := c.Fixed 4 46 = 0
--Annotation: Push table assign byte 47
def fixed_94: Prop := c.Fixed 3 47 = 47
--Annotation: Push table assign push_size 47
def fixed_95: Prop := c.Fixed 4 47 = 0
--Annotation: Push table assign byte 48
def fixed_96: Prop := c.Fixed 3 48 = 48
--Annotation: Push table assign push_size 48
def fixed_97: Prop := c.Fixed 4 48 = 0
--Annotation: Push table assign byte 49
def fixed_98: Prop := c.Fixed 3 49 = 49
--Annotation: Push table assign push_size 49
def fixed_99: Prop := c.Fixed 4 49 = 0
--Annotation: Push table assign byte 50
def fixed_100: Prop := c.Fixed 3 50 = 50
--Annotation: Push table assign push_size 50
def fixed_101: Prop := c.Fixed 4 50 = 0
--Annotation: Push table assign byte 51
def fixed_102: Prop := c.Fixed 3 51 = 51
--Annotation: Push table assign push_size 51
def fixed_103: Prop := c.Fixed 4 51 = 0
--Annotation: Push table assign byte 52
def fixed_104: Prop := c.Fixed 3 52 = 52
--Annotation: Push table assign push_size 52
def fixed_105: Prop := c.Fixed 4 52 = 0
--Annotation: Push table assign byte 53
def fixed_106: Prop := c.Fixed 3 53 = 53
--Annotation: Push table assign push_size 53
def fixed_107: Prop := c.Fixed 4 53 = 0
--Annotation: Push table assign byte 54
def fixed_108: Prop := c.Fixed 3 54 = 54
--Annotation: Push table assign push_size 54
def fixed_109: Prop := c.Fixed 4 54 = 0
--Annotation: Push table assign byte 55
def fixed_110: Prop := c.Fixed 3 55 = 55
--Annotation: Push table assign push_size 55
def fixed_111: Prop := c.Fixed 4 55 = 0
--Annotation: Push table assign byte 56
def fixed_112: Prop := c.Fixed 3 56 = 56
--Annotation: Push table assign push_size 56
def fixed_113: Prop := c.Fixed 4 56 = 0
--Annotation: Push table assign byte 57
def fixed_114: Prop := c.Fixed 3 57 = 57
--Annotation: Push table assign push_size 57
def fixed_115: Prop := c.Fixed 4 57 = 0
--Annotation: Push table assign byte 58
def fixed_116: Prop := c.Fixed 3 58 = 58
--Annotation: Push table assign push_size 58
def fixed_117: Prop := c.Fixed 4 58 = 0
--Annotation: Push table assign byte 59
def fixed_118: Prop := c.Fixed 3 59 = 59
--Annotation: Push table assign push_size 59
def fixed_119: Prop := c.Fixed 4 59 = 0
--Annotation: Push table assign byte 60
def fixed_120: Prop := c.Fixed 3 60 = 60
--Annotation: Push table assign push_size 60
def fixed_121: Prop := c.Fixed 4 60 = 0
--Annotation: Push table assign byte 61
def fixed_122: Prop := c.Fixed 3 61 = 61
--Annotation: Push table assign push_size 61
def fixed_123: Prop := c.Fixed 4 61 = 0
--Annotation: Push table assign byte 62
def fixed_124: Prop := c.Fixed 3 62 = 62
--Annotation: Push table assign push_size 62
def fixed_125: Prop := c.Fixed 4 62 = 0
--Annotation: Push table assign byte 63
def fixed_126: Prop := c.Fixed 3 63 = 63
--Annotation: Push table assign push_size 63
def fixed_127: Prop := c.Fixed 4 63 = 0
--Annotation: Push table assign byte 64
def fixed_128: Prop := c.Fixed 3 64 = 64
--Annotation: Push table assign push_size 64
def fixed_129: Prop := c.Fixed 4 64 = 0
--Annotation: Push table assign byte 65
def fixed_130: Prop := c.Fixed 3 65 = 65
--Annotation: Push table assign push_size 65
def fixed_131: Prop := c.Fixed 4 65 = 0
--Annotation: Push table assign byte 66
def fixed_132: Prop := c.Fixed 3 66 = 66
--Annotation: Push table assign push_size 66
def fixed_133: Prop := c.Fixed 4 66 = 0
--Annotation: Push table assign byte 67
def fixed_134: Prop := c.Fixed 3 67 = 67
--Annotation: Push table assign push_size 67
def fixed_135: Prop := c.Fixed 4 67 = 0
--Annotation: Push table assign byte 68
def fixed_136: Prop := c.Fixed 3 68 = 68
--Annotation: Push table assign push_size 68
def fixed_137: Prop := c.Fixed 4 68 = 0
--Annotation: Push table assign byte 69
def fixed_138: Prop := c.Fixed 3 69 = 69
--Annotation: Push table assign push_size 69
def fixed_139: Prop := c.Fixed 4 69 = 0
--Annotation: Push table assign byte 70
def fixed_140: Prop := c.Fixed 3 70 = 70
--Annotation: Push table assign push_size 70
def fixed_141: Prop := c.Fixed 4 70 = 0
--Annotation: Push table assign byte 71
def fixed_142: Prop := c.Fixed 3 71 = 71
--Annotation: Push table assign push_size 71
def fixed_143: Prop := c.Fixed 4 71 = 0
--Annotation: Push table assign byte 72
def fixed_144: Prop := c.Fixed 3 72 = 72
--Annotation: Push table assign push_size 72
def fixed_145: Prop := c.Fixed 4 72 = 0
--Annotation: Push table assign byte 73
def fixed_146: Prop := c.Fixed 3 73 = 73
--Annotation: Push table assign push_size 73
def fixed_147: Prop := c.Fixed 4 73 = 0
--Annotation: Push table assign byte 74
def fixed_148: Prop := c.Fixed 3 74 = 74
--Annotation: Push table assign push_size 74
def fixed_149: Prop := c.Fixed 4 74 = 0
--Annotation: Push table assign byte 75
def fixed_150: Prop := c.Fixed 3 75 = 75
--Annotation: Push table assign push_size 75
def fixed_151: Prop := c.Fixed 4 75 = 0
--Annotation: Push table assign byte 76
def fixed_152: Prop := c.Fixed 3 76 = 76
--Annotation: Push table assign push_size 76
def fixed_153: Prop := c.Fixed 4 76 = 0
--Annotation: Push table assign byte 77
def fixed_154: Prop := c.Fixed 3 77 = 77
--Annotation: Push table assign push_size 77
def fixed_155: Prop := c.Fixed 4 77 = 0
--Annotation: Push table assign byte 78
def fixed_156: Prop := c.Fixed 3 78 = 78
--Annotation: Push table assign push_size 78
def fixed_157: Prop := c.Fixed 4 78 = 0
--Annotation: Push table assign byte 79
def fixed_158: Prop := c.Fixed 3 79 = 79
--Annotation: Push table assign push_size 79
def fixed_159: Prop := c.Fixed 4 79 = 0
--Annotation: Push table assign byte 80
def fixed_160: Prop := c.Fixed 3 80 = 80
--Annotation: Push table assign push_size 80
def fixed_161: Prop := c.Fixed 4 80 = 0
--Annotation: Push table assign byte 81
def fixed_162: Prop := c.Fixed 3 81 = 81
--Annotation: Push table assign push_size 81
def fixed_163: Prop := c.Fixed 4 81 = 0
--Annotation: Push table assign byte 82
def fixed_164: Prop := c.Fixed 3 82 = 82
--Annotation: Push table assign push_size 82
def fixed_165: Prop := c.Fixed 4 82 = 0
--Annotation: Push table assign byte 83
def fixed_166: Prop := c.Fixed 3 83 = 83
--Annotation: Push table assign push_size 83
def fixed_167: Prop := c.Fixed 4 83 = 0
--Annotation: Push table assign byte 84
def fixed_168: Prop := c.Fixed 3 84 = 84
--Annotation: Push table assign push_size 84
def fixed_169: Prop := c.Fixed 4 84 = 0
--Annotation: Push table assign byte 85
def fixed_170: Prop := c.Fixed 3 85 = 85
--Annotation: Push table assign push_size 85
def fixed_171: Prop := c.Fixed 4 85 = 0
--Annotation: Push table assign byte 86
def fixed_172: Prop := c.Fixed 3 86 = 86
--Annotation: Push table assign push_size 86
def fixed_173: Prop := c.Fixed 4 86 = 0
--Annotation: Push table assign byte 87
def fixed_174: Prop := c.Fixed 3 87 = 87
--Annotation: Push table assign push_size 87
def fixed_175: Prop := c.Fixed 4 87 = 0
--Annotation: Push table assign byte 88
def fixed_176: Prop := c.Fixed 3 88 = 88
--Annotation: Push table assign push_size 88
def fixed_177: Prop := c.Fixed 4 88 = 0
--Annotation: Push table assign byte 89
def fixed_178: Prop := c.Fixed 3 89 = 89
--Annotation: Push table assign push_size 89
def fixed_179: Prop := c.Fixed 4 89 = 0
--Annotation: Push table assign byte 90
def fixed_180: Prop := c.Fixed 3 90 = 90
--Annotation: Push table assign push_size 90
def fixed_181: Prop := c.Fixed 4 90 = 0
--Annotation: Push table assign byte 91
def fixed_182: Prop := c.Fixed 3 91 = 91
--Annotation: Push table assign push_size 91
def fixed_183: Prop := c.Fixed 4 91 = 0
--Annotation: Push table assign byte 92
def fixed_184: Prop := c.Fixed 3 92 = 92
--Annotation: Push table assign push_size 92
def fixed_185: Prop := c.Fixed 4 92 = 0
--Annotation: Push table assign byte 93
def fixed_186: Prop := c.Fixed 3 93 = 93
--Annotation: Push table assign push_size 93
def fixed_187: Prop := c.Fixed 4 93 = 0
--Annotation: Push table assign byte 94
def fixed_188: Prop := c.Fixed 3 94 = 94
--Annotation: Push table assign push_size 94
def fixed_189: Prop := c.Fixed 4 94 = 0
--Annotation: Push table assign byte 95
def fixed_190: Prop := c.Fixed 3 95 = 95
--Annotation: Push table assign push_size 95
def fixed_191: Prop := c.Fixed 4 95 = 0
--Annotation: Push table assign byte 96
def fixed_192: Prop := c.Fixed 3 96 = 96
--Annotation: Push table assign push_size 96
def fixed_193: Prop := c.Fixed 4 96 = 1
--Annotation: Push table assign byte 97
def fixed_194: Prop := c.Fixed 3 97 = 97
--Annotation: Push table assign push_size 97
def fixed_195: Prop := c.Fixed 4 97 = 2
--Annotation: Push table assign byte 98
def fixed_196: Prop := c.Fixed 3 98 = 98
--Annotation: Push table assign push_size 98
def fixed_197: Prop := c.Fixed 4 98 = 3
--Annotation: Push table assign byte 99
def fixed_198: Prop := c.Fixed 3 99 = 99
--Annotation: Push table assign push_size 99
def fixed_199: Prop := c.Fixed 4 99 = 4
--Annotation: Push table assign byte 100
def fixed_200: Prop := c.Fixed 3 100 = 100
--Annotation: Push table assign push_size 100
def fixed_201: Prop := c.Fixed 4 100 = 5
--Annotation: Push table assign byte 101
def fixed_202: Prop := c.Fixed 3 101 = 101
--Annotation: Push table assign push_size 101
def fixed_203: Prop := c.Fixed 4 101 = 6
--Annotation: Push table assign byte 102
def fixed_204: Prop := c.Fixed 3 102 = 102
--Annotation: Push table assign push_size 102
def fixed_205: Prop := c.Fixed 4 102 = 7
--Annotation: Push table assign byte 103
def fixed_206: Prop := c.Fixed 3 103 = 103
--Annotation: Push table assign push_size 103
def fixed_207: Prop := c.Fixed 4 103 = 8
--Annotation: Push table assign byte 104
def fixed_208: Prop := c.Fixed 3 104 = 104
--Annotation: Push table assign push_size 104
def fixed_209: Prop := c.Fixed 4 104 = 9
--Annotation: Push table assign byte 105
def fixed_210: Prop := c.Fixed 3 105 = 105
--Annotation: Push table assign push_size 105
def fixed_211: Prop := c.Fixed 4 105 = 10
--Annotation: Push table assign byte 106
def fixed_212: Prop := c.Fixed 3 106 = 106
--Annotation: Push table assign push_size 106
def fixed_213: Prop := c.Fixed 4 106 = 11
--Annotation: Push table assign byte 107
def fixed_214: Prop := c.Fixed 3 107 = 107
--Annotation: Push table assign push_size 107
def fixed_215: Prop := c.Fixed 4 107 = 12
--Annotation: Push table assign byte 108
def fixed_216: Prop := c.Fixed 3 108 = 108
--Annotation: Push table assign push_size 108
def fixed_217: Prop := c.Fixed 4 108 = 13
--Annotation: Push table assign byte 109
def fixed_218: Prop := c.Fixed 3 109 = 109
--Annotation: Push table assign push_size 109
def fixed_219: Prop := c.Fixed 4 109 = 14
--Annotation: Push table assign byte 110
def fixed_220: Prop := c.Fixed 3 110 = 110
--Annotation: Push table assign push_size 110
def fixed_221: Prop := c.Fixed 4 110 = 15
--Annotation: Push table assign byte 111
def fixed_222: Prop := c.Fixed 3 111 = 111
--Annotation: Push table assign push_size 111
def fixed_223: Prop := c.Fixed 4 111 = 16
--Annotation: Push table assign byte 112
def fixed_224: Prop := c.Fixed 3 112 = 112
--Annotation: Push table assign push_size 112
def fixed_225: Prop := c.Fixed 4 112 = 17
--Annotation: Push table assign byte 113
def fixed_226: Prop := c.Fixed 3 113 = 113
--Annotation: Push table assign push_size 113
def fixed_227: Prop := c.Fixed 4 113 = 18
--Annotation: Push table assign byte 114
def fixed_228: Prop := c.Fixed 3 114 = 114
--Annotation: Push table assign push_size 114
def fixed_229: Prop := c.Fixed 4 114 = 19
--Annotation: Push table assign byte 115
def fixed_230: Prop := c.Fixed 3 115 = 115
--Annotation: Push table assign push_size 115
def fixed_231: Prop := c.Fixed 4 115 = 20
--Annotation: Push table assign byte 116
def fixed_232: Prop := c.Fixed 3 116 = 116
--Annotation: Push table assign push_size 116
def fixed_233: Prop := c.Fixed 4 116 = 21
--Annotation: Push table assign byte 117
def fixed_234: Prop := c.Fixed 3 117 = 117
--Annotation: Push table assign push_size 117
def fixed_235: Prop := c.Fixed 4 117 = 22
--Annotation: Push table assign byte 118
def fixed_236: Prop := c.Fixed 3 118 = 118
--Annotation: Push table assign push_size 118
def fixed_237: Prop := c.Fixed 4 118 = 23
--Annotation: Push table assign byte 119
def fixed_238: Prop := c.Fixed 3 119 = 119
--Annotation: Push table assign push_size 119
def fixed_239: Prop := c.Fixed 4 119 = 24
--Annotation: Push table assign byte 120
def fixed_240: Prop := c.Fixed 3 120 = 120
--Annotation: Push table assign push_size 120
def fixed_241: Prop := c.Fixed 4 120 = 25
--Annotation: Push table assign byte 121
def fixed_242: Prop := c.Fixed 3 121 = 121
--Annotation: Push table assign push_size 121
def fixed_243: Prop := c.Fixed 4 121 = 26
--Annotation: Push table assign byte 122
def fixed_244: Prop := c.Fixed 3 122 = 122
--Annotation: Push table assign push_size 122
def fixed_245: Prop := c.Fixed 4 122 = 27
--Annotation: Push table assign byte 123
def fixed_246: Prop := c.Fixed 3 123 = 123
--Annotation: Push table assign push_size 123
def fixed_247: Prop := c.Fixed 4 123 = 28
--Annotation: Push table assign byte 124
def fixed_248: Prop := c.Fixed 3 124 = 124
--Annotation: Push table assign push_size 124
def fixed_249: Prop := c.Fixed 4 124 = 29
--Annotation: Push table assign byte 125
def fixed_250: Prop := c.Fixed 3 125 = 125
--Annotation: Push table assign push_size 125
def fixed_251: Prop := c.Fixed 4 125 = 30
--Annotation: Push table assign byte 126
def fixed_252: Prop := c.Fixed 3 126 = 126
--Annotation: Push table assign push_size 126
def fixed_253: Prop := c.Fixed 4 126 = 31
--Annotation: Push table assign byte 127
def fixed_254: Prop := c.Fixed 3 127 = 127
--Annotation: Push table assign push_size 127
def fixed_255: Prop := c.Fixed 4 127 = 32
--Annotation: Push table assign byte 128
def fixed_256: Prop := c.Fixed 3 128 = 128
--Annotation: Push table assign push_size 128
def fixed_257: Prop := c.Fixed 4 128 = 0
--Annotation: Push table assign byte 129
def fixed_258: Prop := c.Fixed 3 129 = 129
--Annotation: Push table assign push_size 129
def fixed_259: Prop := c.Fixed 4 129 = 0
--Annotation: Push table assign byte 130
def fixed_260: Prop := c.Fixed 3 130 = 130
--Annotation: Push table assign push_size 130
def fixed_261: Prop := c.Fixed 4 130 = 0
--Annotation: Push table assign byte 131
def fixed_262: Prop := c.Fixed 3 131 = 131
--Annotation: Push table assign push_size 131
def fixed_263: Prop := c.Fixed 4 131 = 0
--Annotation: Push table assign byte 132
def fixed_264: Prop := c.Fixed 3 132 = 132
--Annotation: Push table assign push_size 132
def fixed_265: Prop := c.Fixed 4 132 = 0
--Annotation: Push table assign byte 133
def fixed_266: Prop := c.Fixed 3 133 = 133
--Annotation: Push table assign push_size 133
def fixed_267: Prop := c.Fixed 4 133 = 0
--Annotation: Push table assign byte 134
def fixed_268: Prop := c.Fixed 3 134 = 134
--Annotation: Push table assign push_size 134
def fixed_269: Prop := c.Fixed 4 134 = 0
--Annotation: Push table assign byte 135
def fixed_270: Prop := c.Fixed 3 135 = 135
--Annotation: Push table assign push_size 135
def fixed_271: Prop := c.Fixed 4 135 = 0
--Annotation: Push table assign byte 136
def fixed_272: Prop := c.Fixed 3 136 = 136
--Annotation: Push table assign push_size 136
def fixed_273: Prop := c.Fixed 4 136 = 0
--Annotation: Push table assign byte 137
def fixed_274: Prop := c.Fixed 3 137 = 137
--Annotation: Push table assign push_size 137
def fixed_275: Prop := c.Fixed 4 137 = 0
--Annotation: Push table assign byte 138
def fixed_276: Prop := c.Fixed 3 138 = 138
--Annotation: Push table assign push_size 138
def fixed_277: Prop := c.Fixed 4 138 = 0
--Annotation: Push table assign byte 139
def fixed_278: Prop := c.Fixed 3 139 = 139
--Annotation: Push table assign push_size 139
def fixed_279: Prop := c.Fixed 4 139 = 0
--Annotation: Push table assign byte 140
def fixed_280: Prop := c.Fixed 3 140 = 140
--Annotation: Push table assign push_size 140
def fixed_281: Prop := c.Fixed 4 140 = 0
--Annotation: Push table assign byte 141
def fixed_282: Prop := c.Fixed 3 141 = 141
--Annotation: Push table assign push_size 141
def fixed_283: Prop := c.Fixed 4 141 = 0
--Annotation: Push table assign byte 142
def fixed_284: Prop := c.Fixed 3 142 = 142
--Annotation: Push table assign push_size 142
def fixed_285: Prop := c.Fixed 4 142 = 0
--Annotation: Push table assign byte 143
def fixed_286: Prop := c.Fixed 3 143 = 143
--Annotation: Push table assign push_size 143
def fixed_287: Prop := c.Fixed 4 143 = 0
--Annotation: Push table assign byte 144
def fixed_288: Prop := c.Fixed 3 144 = 144
--Annotation: Push table assign push_size 144
def fixed_289: Prop := c.Fixed 4 144 = 0
--Annotation: Push table assign byte 145
def fixed_290: Prop := c.Fixed 3 145 = 145
--Annotation: Push table assign push_size 145
def fixed_291: Prop := c.Fixed 4 145 = 0
--Annotation: Push table assign byte 146
def fixed_292: Prop := c.Fixed 3 146 = 146
--Annotation: Push table assign push_size 146
def fixed_293: Prop := c.Fixed 4 146 = 0
--Annotation: Push table assign byte 147
def fixed_294: Prop := c.Fixed 3 147 = 147
--Annotation: Push table assign push_size 147
def fixed_295: Prop := c.Fixed 4 147 = 0
--Annotation: Push table assign byte 148
def fixed_296: Prop := c.Fixed 3 148 = 148
--Annotation: Push table assign push_size 148
def fixed_297: Prop := c.Fixed 4 148 = 0
--Annotation: Push table assign byte 149
def fixed_298: Prop := c.Fixed 3 149 = 149
--Annotation: Push table assign push_size 149
def fixed_299: Prop := c.Fixed 4 149 = 0
--Annotation: Push table assign byte 150
def fixed_300: Prop := c.Fixed 3 150 = 150
--Annotation: Push table assign push_size 150
def fixed_301: Prop := c.Fixed 4 150 = 0
--Annotation: Push table assign byte 151
def fixed_302: Prop := c.Fixed 3 151 = 151
--Annotation: Push table assign push_size 151
def fixed_303: Prop := c.Fixed 4 151 = 0
--Annotation: Push table assign byte 152
def fixed_304: Prop := c.Fixed 3 152 = 152
--Annotation: Push table assign push_size 152
def fixed_305: Prop := c.Fixed 4 152 = 0
--Annotation: Push table assign byte 153
def fixed_306: Prop := c.Fixed 3 153 = 153
--Annotation: Push table assign push_size 153
def fixed_307: Prop := c.Fixed 4 153 = 0
--Annotation: Push table assign byte 154
def fixed_308: Prop := c.Fixed 3 154 = 154
--Annotation: Push table assign push_size 154
def fixed_309: Prop := c.Fixed 4 154 = 0
--Annotation: Push table assign byte 155
def fixed_310: Prop := c.Fixed 3 155 = 155
--Annotation: Push table assign push_size 155
def fixed_311: Prop := c.Fixed 4 155 = 0
--Annotation: Push table assign byte 156
def fixed_312: Prop := c.Fixed 3 156 = 156
--Annotation: Push table assign push_size 156
def fixed_313: Prop := c.Fixed 4 156 = 0
--Annotation: Push table assign byte 157
def fixed_314: Prop := c.Fixed 3 157 = 157
--Annotation: Push table assign push_size 157
def fixed_315: Prop := c.Fixed 4 157 = 0
--Annotation: Push table assign byte 158
def fixed_316: Prop := c.Fixed 3 158 = 158
--Annotation: Push table assign push_size 158
def fixed_317: Prop := c.Fixed 4 158 = 0
--Annotation: Push table assign byte 159
def fixed_318: Prop := c.Fixed 3 159 = 159
--Annotation: Push table assign push_size 159
def fixed_319: Prop := c.Fixed 4 159 = 0
--Annotation: Push table assign byte 160
def fixed_320: Prop := c.Fixed 3 160 = 160
--Annotation: Push table assign push_size 160
def fixed_321: Prop := c.Fixed 4 160 = 0
--Annotation: Push table assign byte 161
def fixed_322: Prop := c.Fixed 3 161 = 161
--Annotation: Push table assign push_size 161
def fixed_323: Prop := c.Fixed 4 161 = 0
--Annotation: Push table assign byte 162
def fixed_324: Prop := c.Fixed 3 162 = 162
--Annotation: Push table assign push_size 162
def fixed_325: Prop := c.Fixed 4 162 = 0
--Annotation: Push table assign byte 163
def fixed_326: Prop := c.Fixed 3 163 = 163
--Annotation: Push table assign push_size 163
def fixed_327: Prop := c.Fixed 4 163 = 0
--Annotation: Push table assign byte 164
def fixed_328: Prop := c.Fixed 3 164 = 164
--Annotation: Push table assign push_size 164
def fixed_329: Prop := c.Fixed 4 164 = 0
--Annotation: Push table assign byte 165
def fixed_330: Prop := c.Fixed 3 165 = 165
--Annotation: Push table assign push_size 165
def fixed_331: Prop := c.Fixed 4 165 = 0
--Annotation: Push table assign byte 166
def fixed_332: Prop := c.Fixed 3 166 = 166
--Annotation: Push table assign push_size 166
def fixed_333: Prop := c.Fixed 4 166 = 0
--Annotation: Push table assign byte 167
def fixed_334: Prop := c.Fixed 3 167 = 167
--Annotation: Push table assign push_size 167
def fixed_335: Prop := c.Fixed 4 167 = 0
--Annotation: Push table assign byte 168
def fixed_336: Prop := c.Fixed 3 168 = 168
--Annotation: Push table assign push_size 168
def fixed_337: Prop := c.Fixed 4 168 = 0
--Annotation: Push table assign byte 169
def fixed_338: Prop := c.Fixed 3 169 = 169
--Annotation: Push table assign push_size 169
def fixed_339: Prop := c.Fixed 4 169 = 0
--Annotation: Push table assign byte 170
def fixed_340: Prop := c.Fixed 3 170 = 170
--Annotation: Push table assign push_size 170
def fixed_341: Prop := c.Fixed 4 170 = 0
--Annotation: Push table assign byte 171
def fixed_342: Prop := c.Fixed 3 171 = 171
--Annotation: Push table assign push_size 171
def fixed_343: Prop := c.Fixed 4 171 = 0
--Annotation: Push table assign byte 172
def fixed_344: Prop := c.Fixed 3 172 = 172
--Annotation: Push table assign push_size 172
def fixed_345: Prop := c.Fixed 4 172 = 0
--Annotation: Push table assign byte 173
def fixed_346: Prop := c.Fixed 3 173 = 173
--Annotation: Push table assign push_size 173
def fixed_347: Prop := c.Fixed 4 173 = 0
--Annotation: Push table assign byte 174
def fixed_348: Prop := c.Fixed 3 174 = 174
--Annotation: Push table assign push_size 174
def fixed_349: Prop := c.Fixed 4 174 = 0
--Annotation: Push table assign byte 175
def fixed_350: Prop := c.Fixed 3 175 = 175
--Annotation: Push table assign push_size 175
def fixed_351: Prop := c.Fixed 4 175 = 0
--Annotation: Push table assign byte 176
def fixed_352: Prop := c.Fixed 3 176 = 176
--Annotation: Push table assign push_size 176
def fixed_353: Prop := c.Fixed 4 176 = 0
--Annotation: Push table assign byte 177
def fixed_354: Prop := c.Fixed 3 177 = 177
--Annotation: Push table assign push_size 177
def fixed_355: Prop := c.Fixed 4 177 = 0
--Annotation: Push table assign byte 178
def fixed_356: Prop := c.Fixed 3 178 = 178
--Annotation: Push table assign push_size 178
def fixed_357: Prop := c.Fixed 4 178 = 0
--Annotation: Push table assign byte 179
def fixed_358: Prop := c.Fixed 3 179 = 179
--Annotation: Push table assign push_size 179
def fixed_359: Prop := c.Fixed 4 179 = 0
--Annotation: Push table assign byte 180
def fixed_360: Prop := c.Fixed 3 180 = 180
--Annotation: Push table assign push_size 180
def fixed_361: Prop := c.Fixed 4 180 = 0
--Annotation: Push table assign byte 181
def fixed_362: Prop := c.Fixed 3 181 = 181
--Annotation: Push table assign push_size 181
def fixed_363: Prop := c.Fixed 4 181 = 0
--Annotation: Push table assign byte 182
def fixed_364: Prop := c.Fixed 3 182 = 182
--Annotation: Push table assign push_size 182
def fixed_365: Prop := c.Fixed 4 182 = 0
--Annotation: Push table assign byte 183
def fixed_366: Prop := c.Fixed 3 183 = 183
--Annotation: Push table assign push_size 183
def fixed_367: Prop := c.Fixed 4 183 = 0
--Annotation: Push table assign byte 184
def fixed_368: Prop := c.Fixed 3 184 = 184
--Annotation: Push table assign push_size 184
def fixed_369: Prop := c.Fixed 4 184 = 0
--Annotation: Push table assign byte 185
def fixed_370: Prop := c.Fixed 3 185 = 185
--Annotation: Push table assign push_size 185
def fixed_371: Prop := c.Fixed 4 185 = 0
--Annotation: Push table assign byte 186
def fixed_372: Prop := c.Fixed 3 186 = 186
--Annotation: Push table assign push_size 186
def fixed_373: Prop := c.Fixed 4 186 = 0
--Annotation: Push table assign byte 187
def fixed_374: Prop := c.Fixed 3 187 = 187
--Annotation: Push table assign push_size 187
def fixed_375: Prop := c.Fixed 4 187 = 0
--Annotation: Push table assign byte 188
def fixed_376: Prop := c.Fixed 3 188 = 188
--Annotation: Push table assign push_size 188
def fixed_377: Prop := c.Fixed 4 188 = 0
--Annotation: Push table assign byte 189
def fixed_378: Prop := c.Fixed 3 189 = 189
--Annotation: Push table assign push_size 189
def fixed_379: Prop := c.Fixed 4 189 = 0
--Annotation: Push table assign byte 190
def fixed_380: Prop := c.Fixed 3 190 = 190
--Annotation: Push table assign push_size 190
def fixed_381: Prop := c.Fixed 4 190 = 0
--Annotation: Push table assign byte 191
def fixed_382: Prop := c.Fixed 3 191 = 191
--Annotation: Push table assign push_size 191
def fixed_383: Prop := c.Fixed 4 191 = 0
--Annotation: Push table assign byte 192
def fixed_384: Prop := c.Fixed 3 192 = 192
--Annotation: Push table assign push_size 192
def fixed_385: Prop := c.Fixed 4 192 = 0
--Annotation: Push table assign byte 193
def fixed_386: Prop := c.Fixed 3 193 = 193
--Annotation: Push table assign push_size 193
def fixed_387: Prop := c.Fixed 4 193 = 0
--Annotation: Push table assign byte 194
def fixed_388: Prop := c.Fixed 3 194 = 194
--Annotation: Push table assign push_size 194
def fixed_389: Prop := c.Fixed 4 194 = 0
--Annotation: Push table assign byte 195
def fixed_390: Prop := c.Fixed 3 195 = 195
--Annotation: Push table assign push_size 195
def fixed_391: Prop := c.Fixed 4 195 = 0
--Annotation: Push table assign byte 196
def fixed_392: Prop := c.Fixed 3 196 = 196
--Annotation: Push table assign push_size 196
def fixed_393: Prop := c.Fixed 4 196 = 0
--Annotation: Push table assign byte 197
def fixed_394: Prop := c.Fixed 3 197 = 197
--Annotation: Push table assign push_size 197
def fixed_395: Prop := c.Fixed 4 197 = 0
--Annotation: Push table assign byte 198
def fixed_396: Prop := c.Fixed 3 198 = 198
--Annotation: Push table assign push_size 198
def fixed_397: Prop := c.Fixed 4 198 = 0
--Annotation: Push table assign byte 199
def fixed_398: Prop := c.Fixed 3 199 = 199
--Annotation: Push table assign push_size 199
def fixed_399: Prop := c.Fixed 4 199 = 0
--Annotation: Push table assign byte 200
def fixed_400: Prop := c.Fixed 3 200 = 200
--Annotation: Push table assign push_size 200
def fixed_401: Prop := c.Fixed 4 200 = 0
--Annotation: Push table assign byte 201
def fixed_402: Prop := c.Fixed 3 201 = 201
--Annotation: Push table assign push_size 201
def fixed_403: Prop := c.Fixed 4 201 = 0
--Annotation: Push table assign byte 202
def fixed_404: Prop := c.Fixed 3 202 = 202
--Annotation: Push table assign push_size 202
def fixed_405: Prop := c.Fixed 4 202 = 0
--Annotation: Push table assign byte 203
def fixed_406: Prop := c.Fixed 3 203 = 203
--Annotation: Push table assign push_size 203
def fixed_407: Prop := c.Fixed 4 203 = 0
--Annotation: Push table assign byte 204
def fixed_408: Prop := c.Fixed 3 204 = 204
--Annotation: Push table assign push_size 204
def fixed_409: Prop := c.Fixed 4 204 = 0
--Annotation: Push table assign byte 205
def fixed_410: Prop := c.Fixed 3 205 = 205
--Annotation: Push table assign push_size 205
def fixed_411: Prop := c.Fixed 4 205 = 0
--Annotation: Push table assign byte 206
def fixed_412: Prop := c.Fixed 3 206 = 206
--Annotation: Push table assign push_size 206
def fixed_413: Prop := c.Fixed 4 206 = 0
--Annotation: Push table assign byte 207
def fixed_414: Prop := c.Fixed 3 207 = 207
--Annotation: Push table assign push_size 207
def fixed_415: Prop := c.Fixed 4 207 = 0
--Annotation: Push table assign byte 208
def fixed_416: Prop := c.Fixed 3 208 = 208
--Annotation: Push table assign push_size 208
def fixed_417: Prop := c.Fixed 4 208 = 0
--Annotation: Push table assign byte 209
def fixed_418: Prop := c.Fixed 3 209 = 209
--Annotation: Push table assign push_size 209
def fixed_419: Prop := c.Fixed 4 209 = 0
--Annotation: Push table assign byte 210
def fixed_420: Prop := c.Fixed 3 210 = 210
--Annotation: Push table assign push_size 210
def fixed_421: Prop := c.Fixed 4 210 = 0
--Annotation: Push table assign byte 211
def fixed_422: Prop := c.Fixed 3 211 = 211
--Annotation: Push table assign push_size 211
def fixed_423: Prop := c.Fixed 4 211 = 0
--Annotation: Push table assign byte 212
def fixed_424: Prop := c.Fixed 3 212 = 212
--Annotation: Push table assign push_size 212
def fixed_425: Prop := c.Fixed 4 212 = 0
--Annotation: Push table assign byte 213
def fixed_426: Prop := c.Fixed 3 213 = 213
--Annotation: Push table assign push_size 213
def fixed_427: Prop := c.Fixed 4 213 = 0
--Annotation: Push table assign byte 214
def fixed_428: Prop := c.Fixed 3 214 = 214
--Annotation: Push table assign push_size 214
def fixed_429: Prop := c.Fixed 4 214 = 0
--Annotation: Push table assign byte 215
def fixed_430: Prop := c.Fixed 3 215 = 215
--Annotation: Push table assign push_size 215
def fixed_431: Prop := c.Fixed 4 215 = 0
--Annotation: Push table assign byte 216
def fixed_432: Prop := c.Fixed 3 216 = 216
--Annotation: Push table assign push_size 216
def fixed_433: Prop := c.Fixed 4 216 = 0
--Annotation: Push table assign byte 217
def fixed_434: Prop := c.Fixed 3 217 = 217
--Annotation: Push table assign push_size 217
def fixed_435: Prop := c.Fixed 4 217 = 0
--Annotation: Push table assign byte 218
def fixed_436: Prop := c.Fixed 3 218 = 218
--Annotation: Push table assign push_size 218
def fixed_437: Prop := c.Fixed 4 218 = 0
--Annotation: Push table assign byte 219
def fixed_438: Prop := c.Fixed 3 219 = 219
--Annotation: Push table assign push_size 219
def fixed_439: Prop := c.Fixed 4 219 = 0
--Annotation: Push table assign byte 220
def fixed_440: Prop := c.Fixed 3 220 = 220
--Annotation: Push table assign push_size 220
def fixed_441: Prop := c.Fixed 4 220 = 0
--Annotation: Push table assign byte 221
def fixed_442: Prop := c.Fixed 3 221 = 221
--Annotation: Push table assign push_size 221
def fixed_443: Prop := c.Fixed 4 221 = 0
--Annotation: Push table assign byte 222
def fixed_444: Prop := c.Fixed 3 222 = 222
--Annotation: Push table assign push_size 222
def fixed_445: Prop := c.Fixed 4 222 = 0
--Annotation: Push table assign byte 223
def fixed_446: Prop := c.Fixed 3 223 = 223
--Annotation: Push table assign push_size 223
def fixed_447: Prop := c.Fixed 4 223 = 0
--Annotation: Push table assign byte 224
def fixed_448: Prop := c.Fixed 3 224 = 224
--Annotation: Push table assign push_size 224
def fixed_449: Prop := c.Fixed 4 224 = 0
--Annotation: Push table assign byte 225
def fixed_450: Prop := c.Fixed 3 225 = 225
--Annotation: Push table assign push_size 225
def fixed_451: Prop := c.Fixed 4 225 = 0
--Annotation: Push table assign byte 226
def fixed_452: Prop := c.Fixed 3 226 = 226
--Annotation: Push table assign push_size 226
def fixed_453: Prop := c.Fixed 4 226 = 0
--Annotation: Push table assign byte 227
def fixed_454: Prop := c.Fixed 3 227 = 227
--Annotation: Push table assign push_size 227
def fixed_455: Prop := c.Fixed 4 227 = 0
--Annotation: Push table assign byte 228
def fixed_456: Prop := c.Fixed 3 228 = 228
--Annotation: Push table assign push_size 228
def fixed_457: Prop := c.Fixed 4 228 = 0
--Annotation: Push table assign byte 229
def fixed_458: Prop := c.Fixed 3 229 = 229
--Annotation: Push table assign push_size 229
def fixed_459: Prop := c.Fixed 4 229 = 0
--Annotation: Push table assign byte 230
def fixed_460: Prop := c.Fixed 3 230 = 230
--Annotation: Push table assign push_size 230
def fixed_461: Prop := c.Fixed 4 230 = 0
--Annotation: Push table assign byte 231
def fixed_462: Prop := c.Fixed 3 231 = 231
--Annotation: Push table assign push_size 231
def fixed_463: Prop := c.Fixed 4 231 = 0
--Annotation: Push table assign byte 232
def fixed_464: Prop := c.Fixed 3 232 = 232
--Annotation: Push table assign push_size 232
def fixed_465: Prop := c.Fixed 4 232 = 0
--Annotation: Push table assign byte 233
def fixed_466: Prop := c.Fixed 3 233 = 233
--Annotation: Push table assign push_size 233
def fixed_467: Prop := c.Fixed 4 233 = 0
--Annotation: Push table assign byte 234
def fixed_468: Prop := c.Fixed 3 234 = 234
--Annotation: Push table assign push_size 234
def fixed_469: Prop := c.Fixed 4 234 = 0
--Annotation: Push table assign byte 235
def fixed_470: Prop := c.Fixed 3 235 = 235
--Annotation: Push table assign push_size 235
def fixed_471: Prop := c.Fixed 4 235 = 0
--Annotation: Push table assign byte 236
def fixed_472: Prop := c.Fixed 3 236 = 236
--Annotation: Push table assign push_size 236
def fixed_473: Prop := c.Fixed 4 236 = 0
--Annotation: Push table assign byte 237
def fixed_474: Prop := c.Fixed 3 237 = 237
--Annotation: Push table assign push_size 237
def fixed_475: Prop := c.Fixed 4 237 = 0
--Annotation: Push table assign byte 238
def fixed_476: Prop := c.Fixed 3 238 = 238
--Annotation: Push table assign push_size 238
def fixed_477: Prop := c.Fixed 4 238 = 0
--Annotation: Push table assign byte 239
def fixed_478: Prop := c.Fixed 3 239 = 239
--Annotation: Push table assign push_size 239
def fixed_479: Prop := c.Fixed 4 239 = 0
--Annotation: Push table assign byte 240
def fixed_480: Prop := c.Fixed 3 240 = 240
--Annotation: Push table assign push_size 240
def fixed_481: Prop := c.Fixed 4 240 = 0
--Annotation: Push table assign byte 241
def fixed_482: Prop := c.Fixed 3 241 = 241
--Annotation: Push table assign push_size 241
def fixed_483: Prop := c.Fixed 4 241 = 0
--Annotation: Push table assign byte 242
def fixed_484: Prop := c.Fixed 3 242 = 242
--Annotation: Push table assign push_size 242
def fixed_485: Prop := c.Fixed 4 242 = 0
--Annotation: Push table assign byte 243
def fixed_486: Prop := c.Fixed 3 243 = 243
--Annotation: Push table assign push_size 243
def fixed_487: Prop := c.Fixed 4 243 = 0
--Annotation: Push table assign byte 244
def fixed_488: Prop := c.Fixed 3 244 = 244
--Annotation: Push table assign push_size 244
def fixed_489: Prop := c.Fixed 4 244 = 0
--Annotation: Push table assign byte 245
def fixed_490: Prop := c.Fixed 3 245 = 245
--Annotation: Push table assign push_size 245
def fixed_491: Prop := c.Fixed 4 245 = 0
--Annotation: Push table assign byte 246
def fixed_492: Prop := c.Fixed 3 246 = 246
--Annotation: Push table assign push_size 246
def fixed_493: Prop := c.Fixed 4 246 = 0
--Annotation: Push table assign byte 247
def fixed_494: Prop := c.Fixed 3 247 = 247
--Annotation: Push table assign push_size 247
def fixed_495: Prop := c.Fixed 4 247 = 0
--Annotation: Push table assign byte 248
def fixed_496: Prop := c.Fixed 3 248 = 248
--Annotation: Push table assign push_size 248
def fixed_497: Prop := c.Fixed 4 248 = 0
--Annotation: Push table assign byte 249
def fixed_498: Prop := c.Fixed 3 249 = 249
--Annotation: Push table assign push_size 249
def fixed_499: Prop := c.Fixed 4 249 = 0
--Annotation: Push table assign byte 250
def fixed_500: Prop := c.Fixed 3 250 = 250
--Annotation: Push table assign push_size 250
def fixed_501: Prop := c.Fixed 4 250 = 0
--Annotation: Push table assign byte 251
def fixed_502: Prop := c.Fixed 3 251 = 251
--Annotation: Push table assign push_size 251
def fixed_503: Prop := c.Fixed 4 251 = 0
--Annotation: Push table assign byte 252
def fixed_504: Prop := c.Fixed 3 252 = 252
--Annotation: Push table assign push_size 252
def fixed_505: Prop := c.Fixed 4 252 = 0
--Annotation: Push table assign byte 253
def fixed_506: Prop := c.Fixed 3 253 = 253
--Annotation: Push table assign push_size 253
def fixed_507: Prop := c.Fixed 4 253 = 0
--Annotation: Push table assign byte 254
def fixed_508: Prop := c.Fixed 3 254 = 254
--Annotation: Push table assign push_size 254
def fixed_509: Prop := c.Fixed 4 254 = 0
--Annotation: Push table assign byte 255
def fixed_510: Prop := c.Fixed 3 255 = 255
--Annotation: Push table assign push_size 255
def fixed_511: Prop := c.Fixed 4 255 = 0
--EXITED REGION: push table
--REGION: assign bytecode
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotate column
--Annotation: assign q_enable 0
def fixed_512: Prop := c.Fixed 0 0 = 1
--Annotation: assign q_first 0
def fixed_513: Prop := c.Fixed 1 0 = 1
--Annotation: assign q_last 0
def fixed_514: Prop := c.Fixed 2 0 = 0
--Annotation: assign tag 0
def advice_0_0: Prop := c.Advice 0 0 = 0
--Annotation: assign index 0
def advice_1_0: Prop := c.Advice 1 0 = 0
--Annotation: assign is_code 0
def advice_2_0: Prop := c.Advice 2 0 = 0
--Annotation: assign value 0
def advice_3_0: Prop := c.Advice 3 0 = 4
--Annotation: assign push_data_left 0
def advice_13_0: Prop := c.Advice 13 0 = 0
--Annotation: assign length 0
def advice_15_0: Prop := c.Advice 15 0 = 4
--Annotation: assign push_data_size 0
def advice_16_0: Prop := c.Advice 16 0 = 0
--Annotation: assign value_rlc 0
def advice_14_0: Prop := c.Advice 14 0 = 0
--Annotation: assign code_hash 0
def advice_4_0: Prop := c.Advice 4 0 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 0
def advice_5_0: Prop := c.Advice 5 0 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_0: Prop := c.Advice 17 0 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_0: Prop := c.Advice 18 0 = (1) - (4)^(-1)
--Annotation: assign q_enable 1
def fixed_515: Prop := c.Fixed 0 1 = 1
--Annotation: assign q_first 1
def fixed_516: Prop := c.Fixed 1 1 = 0
--Annotation: assign q_last 1
def fixed_517: Prop := c.Fixed 2 1 = 0
--Annotation: assign tag 1
def advice_0_1: Prop := c.Advice 0 1 = 1
--Annotation: assign index 1
def advice_1_1: Prop := c.Advice 1 1 = 0
--Annotation: assign is_code 1
def advice_2_1: Prop := c.Advice 2 1 = 1
--Annotation: assign value 1
def advice_3_1: Prop := c.Advice 3 1 = 1
--Annotation: assign push_data_left 1
def advice_13_1: Prop := c.Advice 13 1 = 0
--Annotation: assign length 1
def advice_15_1: Prop := c.Advice 15 1 = 4
--Annotation: assign push_data_size 1
def advice_16_1: Prop := c.Advice 16 1 = 0
--Annotation: assign value_rlc 1
def advice_14_1: Prop := c.Advice 14 1 = 0
--Annotation: assign code_hash 1
def advice_4_1: Prop := c.Advice 4 1 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 1
def advice_5_1: Prop := c.Advice 5 1 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_1: Prop := c.Advice 17 1 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_1: Prop := c.Advice 18 1 = (1) - (4)^(-1)
--Annotation: assign q_enable 2
def fixed_518: Prop := c.Fixed 0 2 = 1
--Annotation: assign q_first 2
def fixed_519: Prop := c.Fixed 1 2 = 0
--Annotation: assign q_last 2
def fixed_520: Prop := c.Fixed 2 2 = 0
--Annotation: assign tag 2
def advice_0_2: Prop := c.Advice 0 2 = 1
--Annotation: assign index 2
def advice_1_2: Prop := c.Advice 1 2 = 1
--Annotation: assign is_code 2
def advice_2_2: Prop := c.Advice 2 2 = 1
--Annotation: assign value 2
def advice_3_2: Prop := c.Advice 3 2 = 2
--Annotation: assign push_data_left 2
def advice_13_2: Prop := c.Advice 13 2 = 0
--Annotation: assign length 2
def advice_15_2: Prop := c.Advice 15 2 = 4
--Annotation: assign push_data_size 2
def advice_16_2: Prop := c.Advice 16 2 = 0
--Annotation: assign value_rlc 2
def advice_14_2: Prop := c.Advice 14 2 = 0
--Annotation: assign code_hash 2
def advice_4_2: Prop := c.Advice 4 2 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 2
def advice_5_2: Prop := c.Advice 5 2 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_2: Prop := c.Advice 17 2 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_2: Prop := c.Advice 18 2 = ((1) + (1)) - (4)^(-1)
--Annotation: assign q_enable 3
def fixed_521: Prop := c.Fixed 0 3 = 1
--Annotation: assign q_first 3
def fixed_522: Prop := c.Fixed 1 3 = 0
--Annotation: assign q_last 3
def fixed_523: Prop := c.Fixed 2 3 = 0
--Annotation: assign tag 3
def advice_0_3: Prop := c.Advice 0 3 = 1
--Annotation: assign index 3
def advice_1_3: Prop := c.Advice 1 3 = 2
--Annotation: assign is_code 3
def advice_2_3: Prop := c.Advice 2 3 = 1
--Annotation: assign value 3
def advice_3_3: Prop := c.Advice 3 3 = 3
--Annotation: assign push_data_left 3
def advice_13_3: Prop := c.Advice 13 3 = 0
--Annotation: assign length 3
def advice_15_3: Prop := c.Advice 15 3 = 4
--Annotation: assign push_data_size 3
def advice_16_3: Prop := c.Advice 16 3 = 0
--Annotation: assign value_rlc 3
def advice_14_3: Prop := c.Advice 14 3 = 0
--Annotation: assign code_hash 3
def advice_4_3: Prop := c.Advice 4 3 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 3
def advice_5_3: Prop := c.Advice 5 3 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_3: Prop := c.Advice 17 3 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_3: Prop := c.Advice 18 3 = ((2) + (1)) - (4)^(-1)
--Annotation: assign q_enable 4
def fixed_524: Prop := c.Fixed 0 4 = 1
--Annotation: assign q_first 4
def fixed_525: Prop := c.Fixed 1 4 = 0
--Annotation: assign q_last 4
def fixed_526: Prop := c.Fixed 2 4 = 0
--Annotation: assign tag 4
def advice_0_4: Prop := c.Advice 0 4 = 1
--Annotation: assign index 4
def advice_1_4: Prop := c.Advice 1 4 = 3
--Annotation: assign is_code 4
def advice_2_4: Prop := c.Advice 2 4 = 1
--Annotation: assign value 4
def advice_3_4: Prop := c.Advice 3 4 = 4
--Annotation: assign push_data_left 4
def advice_13_4: Prop := c.Advice 13 4 = 0
--Annotation: assign length 4
def advice_15_4: Prop := c.Advice 15 4 = 4
--Annotation: assign push_data_size 4
def advice_16_4: Prop := c.Advice 16 4 = 0
--Annotation: assign value_rlc 4
def advice_14_4: Prop := c.Advice 14 4 = 0
--Annotation: assign code_hash 4
def advice_4_4: Prop := c.Advice 4 4 = (((((((((((((((59) + ((210) * (256))) + ((136) * ((256) * (256)))) + ((21) * (((256) * (256)) * (256)))) + ((123) * ((((256) * (256)) * (256)) * (256)))) + ((246) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((2) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((169) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((251) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((80) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((186) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((226) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((244) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((34) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((104) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((127) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 4
def advice_5_4: Prop := c.Advice 5 4 = (((((((((((((((106) + ((196) * (256))) + ((74) * ((256) * (256)))) + ((88) * (((256) * (256)) * (256)))) + ((143) * ((((256) * (256)) * (256)) * (256)))) + ((74) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((142) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((46) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((45) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((112) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((49) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((55) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((91) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((136) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((166) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_4: Prop := c.Advice 17 4 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_4: Prop := c.Advice 18 4 = ((3) + (1)) - (4)^(-1)
--Annotation: assign q_enable 5
def fixed_527: Prop := c.Fixed 0 5 = 1
--Annotation: assign q_first 5
def fixed_528: Prop := c.Fixed 1 5 = 0
--Annotation: assign q_last 5
def fixed_529: Prop := c.Fixed 2 5 = 0
--Annotation: assign tag 5
def advice_0_5: Prop := c.Advice 0 5 = 0
--Annotation: assign index 5
def advice_1_5: Prop := c.Advice 1 5 = 0
--Annotation: assign is_code 5
def advice_2_5: Prop := c.Advice 2 5 = 0
--Annotation: assign value 5
def advice_3_5: Prop := c.Advice 3 5 = 0
--Annotation: assign push_data_left 5
def advice_13_5: Prop := c.Advice 13 5 = 0
--Annotation: assign length 5
def advice_15_5: Prop := c.Advice 15 5 = 0
--Annotation: assign push_data_size 5
def advice_16_5: Prop := c.Advice 16 5 = 0
--Annotation: assign value_rlc 5
def advice_14_5: Prop := c.Advice 14 5 = 0
--Annotation: assign code_hash 5
def advice_4_5: Prop := c.Advice 4 5 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 5
def advice_5_5: Prop := c.Advice 5 5 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_5: Prop := c.Advice 17 5 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_5: Prop := c.Advice 18 5 = 1^(-1)
--Annotation: assign q_enable 6
def fixed_530: Prop := c.Fixed 0 6 = 1
--Annotation: assign q_first 6
def fixed_531: Prop := c.Fixed 1 6 = 0
--Annotation: assign q_last 6
def fixed_532: Prop := c.Fixed 2 6 = 0
--Annotation: assign tag 6
def advice_0_6: Prop := c.Advice 0 6 = 0
--Annotation: assign index 6
def advice_1_6: Prop := c.Advice 1 6 = 0
--Annotation: assign is_code 6
def advice_2_6: Prop := c.Advice 2 6 = 0
--Annotation: assign value 6
def advice_3_6: Prop := c.Advice 3 6 = 0
--Annotation: assign push_data_left 6
def advice_13_6: Prop := c.Advice 13 6 = 0
--Annotation: assign length 6
def advice_15_6: Prop := c.Advice 15 6 = 0
--Annotation: assign push_data_size 6
def advice_16_6: Prop := c.Advice 16 6 = 0
--Annotation: assign value_rlc 6
def advice_14_6: Prop := c.Advice 14 6 = 0
--Annotation: assign code_hash 6
def advice_4_6: Prop := c.Advice 4 6 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 6
def advice_5_6: Prop := c.Advice 5 6 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_6: Prop := c.Advice 17 6 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_6: Prop := c.Advice 18 6 = 1^(-1)
--Annotation: assign q_enable 7
def fixed_533: Prop := c.Fixed 0 7 = 1
--Annotation: assign q_first 7
def fixed_534: Prop := c.Fixed 1 7 = 0
--Annotation: assign q_last 7
def fixed_535: Prop := c.Fixed 2 7 = 0
--Annotation: assign tag 7
def advice_0_7: Prop := c.Advice 0 7 = 0
--Annotation: assign index 7
def advice_1_7: Prop := c.Advice 1 7 = 0
--Annotation: assign is_code 7
def advice_2_7: Prop := c.Advice 2 7 = 0
--Annotation: assign value 7
def advice_3_7: Prop := c.Advice 3 7 = 0
--Annotation: assign push_data_left 7
def advice_13_7: Prop := c.Advice 13 7 = 0
--Annotation: assign length 7
def advice_15_7: Prop := c.Advice 15 7 = 0
--Annotation: assign push_data_size 7
def advice_16_7: Prop := c.Advice 16 7 = 0
--Annotation: assign value_rlc 7
def advice_14_7: Prop := c.Advice 14 7 = 0
--Annotation: assign code_hash 7
def advice_4_7: Prop := c.Advice 4 7 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 7
def advice_5_7: Prop := c.Advice 5 7 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_7: Prop := c.Advice 17 7 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_7: Prop := c.Advice 18 7 = 1^(-1)
--Annotation: assign q_enable 8
def fixed_536: Prop := c.Fixed 0 8 = 1
--Annotation: assign q_first 8
def fixed_537: Prop := c.Fixed 1 8 = 0
--Annotation: assign q_last 8
def fixed_538: Prop := c.Fixed 2 8 = 0
--Annotation: assign tag 8
def advice_0_8: Prop := c.Advice 0 8 = 0
--Annotation: assign index 8
def advice_1_8: Prop := c.Advice 1 8 = 0
--Annotation: assign is_code 8
def advice_2_8: Prop := c.Advice 2 8 = 0
--Annotation: assign value 8
def advice_3_8: Prop := c.Advice 3 8 = 0
--Annotation: assign push_data_left 8
def advice_13_8: Prop := c.Advice 13 8 = 0
--Annotation: assign length 8
def advice_15_8: Prop := c.Advice 15 8 = 0
--Annotation: assign push_data_size 8
def advice_16_8: Prop := c.Advice 16 8 = 0
--Annotation: assign value_rlc 8
def advice_14_8: Prop := c.Advice 14 8 = 0
--Annotation: assign code_hash 8
def advice_4_8: Prop := c.Advice 4 8 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 8
def advice_5_8: Prop := c.Advice 5 8 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_8: Prop := c.Advice 17 8 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_8: Prop := c.Advice 18 8 = 1^(-1)
--Annotation: assign q_enable 9
def fixed_539: Prop := c.Fixed 0 9 = 1
--Annotation: assign q_first 9
def fixed_540: Prop := c.Fixed 1 9 = 0
--Annotation: assign q_last 9
def fixed_541: Prop := c.Fixed 2 9 = 0
--Annotation: assign tag 9
def advice_0_9: Prop := c.Advice 0 9 = 0
--Annotation: assign index 9
def advice_1_9: Prop := c.Advice 1 9 = 0
--Annotation: assign is_code 9
def advice_2_9: Prop := c.Advice 2 9 = 0
--Annotation: assign value 9
def advice_3_9: Prop := c.Advice 3 9 = 0
--Annotation: assign push_data_left 9
def advice_13_9: Prop := c.Advice 13 9 = 0
--Annotation: assign length 9
def advice_15_9: Prop := c.Advice 15 9 = 0
--Annotation: assign push_data_size 9
def advice_16_9: Prop := c.Advice 16 9 = 0
--Annotation: assign value_rlc 9
def advice_14_9: Prop := c.Advice 14 9 = 0
--Annotation: assign code_hash 9
def advice_4_9: Prop := c.Advice 4 9 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 9
def advice_5_9: Prop := c.Advice 5 9 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_9: Prop := c.Advice 17 9 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_9: Prop := c.Advice 18 9 = 1^(-1)
--Annotation: assign q_enable 10
def fixed_542: Prop := c.Fixed 0 10 = 1
--Annotation: assign q_first 10
def fixed_543: Prop := c.Fixed 1 10 = 0
--Annotation: assign q_last 10
def fixed_544: Prop := c.Fixed 2 10 = 0
--Annotation: assign tag 10
def advice_0_10: Prop := c.Advice 0 10 = 0
--Annotation: assign index 10
def advice_1_10: Prop := c.Advice 1 10 = 0
--Annotation: assign is_code 10
def advice_2_10: Prop := c.Advice 2 10 = 0
--Annotation: assign value 10
def advice_3_10: Prop := c.Advice 3 10 = 0
--Annotation: assign push_data_left 10
def advice_13_10: Prop := c.Advice 13 10 = 0
--Annotation: assign length 10
def advice_15_10: Prop := c.Advice 15 10 = 0
--Annotation: assign push_data_size 10
def advice_16_10: Prop := c.Advice 16 10 = 0
--Annotation: assign value_rlc 10
def advice_14_10: Prop := c.Advice 14 10 = 0
--Annotation: assign code_hash 10
def advice_4_10: Prop := c.Advice 4 10 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 10
def advice_5_10: Prop := c.Advice 5 10 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_10: Prop := c.Advice 17 10 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_10: Prop := c.Advice 18 10 = 1^(-1)
--Annotation: assign q_enable 11
def fixed_545: Prop := c.Fixed 0 11 = 1
--Annotation: assign q_first 11
def fixed_546: Prop := c.Fixed 1 11 = 0
--Annotation: assign q_last 11
def fixed_547: Prop := c.Fixed 2 11 = 0
--Annotation: assign tag 11
def advice_0_11: Prop := c.Advice 0 11 = 0
--Annotation: assign index 11
def advice_1_11: Prop := c.Advice 1 11 = 0
--Annotation: assign is_code 11
def advice_2_11: Prop := c.Advice 2 11 = 0
--Annotation: assign value 11
def advice_3_11: Prop := c.Advice 3 11 = 0
--Annotation: assign push_data_left 11
def advice_13_11: Prop := c.Advice 13 11 = 0
--Annotation: assign length 11
def advice_15_11: Prop := c.Advice 15 11 = 0
--Annotation: assign push_data_size 11
def advice_16_11: Prop := c.Advice 16 11 = 0
--Annotation: assign value_rlc 11
def advice_14_11: Prop := c.Advice 14 11 = 0
--Annotation: assign code_hash 11
def advice_4_11: Prop := c.Advice 4 11 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 11
def advice_5_11: Prop := c.Advice 5 11 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_11: Prop := c.Advice 17 11 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_11: Prop := c.Advice 18 11 = 1^(-1)
--Annotation: assign q_enable 12
def fixed_548: Prop := c.Fixed 0 12 = 1
--Annotation: assign q_first 12
def fixed_549: Prop := c.Fixed 1 12 = 0
--Annotation: assign q_last 12
def fixed_550: Prop := c.Fixed 2 12 = 0
--Annotation: assign tag 12
def advice_0_12: Prop := c.Advice 0 12 = 0
--Annotation: assign index 12
def advice_1_12: Prop := c.Advice 1 12 = 0
--Annotation: assign is_code 12
def advice_2_12: Prop := c.Advice 2 12 = 0
--Annotation: assign value 12
def advice_3_12: Prop := c.Advice 3 12 = 0
--Annotation: assign push_data_left 12
def advice_13_12: Prop := c.Advice 13 12 = 0
--Annotation: assign length 12
def advice_15_12: Prop := c.Advice 15 12 = 0
--Annotation: assign push_data_size 12
def advice_16_12: Prop := c.Advice 16 12 = 0
--Annotation: assign value_rlc 12
def advice_14_12: Prop := c.Advice 14 12 = 0
--Annotation: assign code_hash 12
def advice_4_12: Prop := c.Advice 4 12 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 12
def advice_5_12: Prop := c.Advice 5 12 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_12: Prop := c.Advice 17 12 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_12: Prop := c.Advice 18 12 = 1^(-1)
--Annotation: assign q_enable 13
def fixed_551: Prop := c.Fixed 0 13 = 1
--Annotation: assign q_first 13
def fixed_552: Prop := c.Fixed 1 13 = 0
--Annotation: assign q_last 13
def fixed_553: Prop := c.Fixed 2 13 = 0
--Annotation: assign tag 13
def advice_0_13: Prop := c.Advice 0 13 = 0
--Annotation: assign index 13
def advice_1_13: Prop := c.Advice 1 13 = 0
--Annotation: assign is_code 13
def advice_2_13: Prop := c.Advice 2 13 = 0
--Annotation: assign value 13
def advice_3_13: Prop := c.Advice 3 13 = 0
--Annotation: assign push_data_left 13
def advice_13_13: Prop := c.Advice 13 13 = 0
--Annotation: assign length 13
def advice_15_13: Prop := c.Advice 15 13 = 0
--Annotation: assign push_data_size 13
def advice_16_13: Prop := c.Advice 16 13 = 0
--Annotation: assign value_rlc 13
def advice_14_13: Prop := c.Advice 14 13 = 0
--Annotation: assign code_hash 13
def advice_4_13: Prop := c.Advice 4 13 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 13
def advice_5_13: Prop := c.Advice 5 13 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_13: Prop := c.Advice 17 13 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_13: Prop := c.Advice 18 13 = 1^(-1)
--Annotation: assign q_enable 14
def fixed_554: Prop := c.Fixed 0 14 = 1
--Annotation: assign q_first 14
def fixed_555: Prop := c.Fixed 1 14 = 0
--Annotation: assign q_last 14
def fixed_556: Prop := c.Fixed 2 14 = 0
--Annotation: assign tag 14
def advice_0_14: Prop := c.Advice 0 14 = 0
--Annotation: assign index 14
def advice_1_14: Prop := c.Advice 1 14 = 0
--Annotation: assign is_code 14
def advice_2_14: Prop := c.Advice 2 14 = 0
--Annotation: assign value 14
def advice_3_14: Prop := c.Advice 3 14 = 0
--Annotation: assign push_data_left 14
def advice_13_14: Prop := c.Advice 13 14 = 0
--Annotation: assign length 14
def advice_15_14: Prop := c.Advice 15 14 = 0
--Annotation: assign push_data_size 14
def advice_16_14: Prop := c.Advice 16 14 = 0
--Annotation: assign value_rlc 14
def advice_14_14: Prop := c.Advice 14 14 = 0
--Annotation: assign code_hash 14
def advice_4_14: Prop := c.Advice 4 14 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 14
def advice_5_14: Prop := c.Advice 5 14 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_14: Prop := c.Advice 17 14 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_14: Prop := c.Advice 18 14 = 1^(-1)
--Annotation: assign q_enable 15
def fixed_557: Prop := c.Fixed 0 15 = 1
--Annotation: assign q_first 15
def fixed_558: Prop := c.Fixed 1 15 = 0
--Annotation: assign q_last 15
def fixed_559: Prop := c.Fixed 2 15 = 0
--Annotation: assign tag 15
def advice_0_15: Prop := c.Advice 0 15 = 0
--Annotation: assign index 15
def advice_1_15: Prop := c.Advice 1 15 = 0
--Annotation: assign is_code 15
def advice_2_15: Prop := c.Advice 2 15 = 0
--Annotation: assign value 15
def advice_3_15: Prop := c.Advice 3 15 = 0
--Annotation: assign push_data_left 15
def advice_13_15: Prop := c.Advice 13 15 = 0
--Annotation: assign length 15
def advice_15_15: Prop := c.Advice 15 15 = 0
--Annotation: assign push_data_size 15
def advice_16_15: Prop := c.Advice 16 15 = 0
--Annotation: assign value_rlc 15
def advice_14_15: Prop := c.Advice 14 15 = 0
--Annotation: assign code_hash 15
def advice_4_15: Prop := c.Advice 4 15 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 15
def advice_5_15: Prop := c.Advice 5 15 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_15: Prop := c.Advice 17 15 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_15: Prop := c.Advice 18 15 = 1^(-1)
--Annotation: assign q_enable 16
def fixed_560: Prop := c.Fixed 0 16 = 1
--Annotation: assign q_first 16
def fixed_561: Prop := c.Fixed 1 16 = 0
--Annotation: assign q_last 16
def fixed_562: Prop := c.Fixed 2 16 = 0
--Annotation: assign tag 16
def advice_0_16: Prop := c.Advice 0 16 = 0
--Annotation: assign index 16
def advice_1_16: Prop := c.Advice 1 16 = 0
--Annotation: assign is_code 16
def advice_2_16: Prop := c.Advice 2 16 = 0
--Annotation: assign value 16
def advice_3_16: Prop := c.Advice 3 16 = 0
--Annotation: assign push_data_left 16
def advice_13_16: Prop := c.Advice 13 16 = 0
--Annotation: assign length 16
def advice_15_16: Prop := c.Advice 15 16 = 0
--Annotation: assign push_data_size 16
def advice_16_16: Prop := c.Advice 16 16 = 0
--Annotation: assign value_rlc 16
def advice_14_16: Prop := c.Advice 14 16 = 0
--Annotation: assign code_hash 16
def advice_4_16: Prop := c.Advice 4 16 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 16
def advice_5_16: Prop := c.Advice 5 16 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_16: Prop := c.Advice 17 16 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_16: Prop := c.Advice 18 16 = 1^(-1)
--Annotation: assign q_enable 17
def fixed_563: Prop := c.Fixed 0 17 = 1
--Annotation: assign q_first 17
def fixed_564: Prop := c.Fixed 1 17 = 0
--Annotation: assign q_last 17
def fixed_565: Prop := c.Fixed 2 17 = 0
--Annotation: assign tag 17
def advice_0_17: Prop := c.Advice 0 17 = 0
--Annotation: assign index 17
def advice_1_17: Prop := c.Advice 1 17 = 0
--Annotation: assign is_code 17
def advice_2_17: Prop := c.Advice 2 17 = 0
--Annotation: assign value 17
def advice_3_17: Prop := c.Advice 3 17 = 0
--Annotation: assign push_data_left 17
def advice_13_17: Prop := c.Advice 13 17 = 0
--Annotation: assign length 17
def advice_15_17: Prop := c.Advice 15 17 = 0
--Annotation: assign push_data_size 17
def advice_16_17: Prop := c.Advice 16 17 = 0
--Annotation: assign value_rlc 17
def advice_14_17: Prop := c.Advice 14 17 = 0
--Annotation: assign code_hash 17
def advice_4_17: Prop := c.Advice 4 17 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 17
def advice_5_17: Prop := c.Advice 5 17 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_17: Prop := c.Advice 17 17 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_17: Prop := c.Advice 18 17 = 1^(-1)
--Annotation: assign q_enable 18
def fixed_566: Prop := c.Fixed 0 18 = 1
--Annotation: assign q_first 18
def fixed_567: Prop := c.Fixed 1 18 = 0
--Annotation: assign q_last 18
def fixed_568: Prop := c.Fixed 2 18 = 0
--Annotation: assign tag 18
def advice_0_18: Prop := c.Advice 0 18 = 0
--Annotation: assign index 18
def advice_1_18: Prop := c.Advice 1 18 = 0
--Annotation: assign is_code 18
def advice_2_18: Prop := c.Advice 2 18 = 0
--Annotation: assign value 18
def advice_3_18: Prop := c.Advice 3 18 = 0
--Annotation: assign push_data_left 18
def advice_13_18: Prop := c.Advice 13 18 = 0
--Annotation: assign length 18
def advice_15_18: Prop := c.Advice 15 18 = 0
--Annotation: assign push_data_size 18
def advice_16_18: Prop := c.Advice 16 18 = 0
--Annotation: assign value_rlc 18
def advice_14_18: Prop := c.Advice 14 18 = 0
--Annotation: assign code_hash 18
def advice_4_18: Prop := c.Advice 4 18 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 18
def advice_5_18: Prop := c.Advice 5 18 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_18: Prop := c.Advice 17 18 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_18: Prop := c.Advice 18 18 = 1^(-1)
--Annotation: assign q_enable 19
def fixed_569: Prop := c.Fixed 0 19 = 1
--Annotation: assign q_first 19
def fixed_570: Prop := c.Fixed 1 19 = 0
--Annotation: assign q_last 19
def fixed_571: Prop := c.Fixed 2 19 = 0
--Annotation: assign tag 19
def advice_0_19: Prop := c.Advice 0 19 = 0
--Annotation: assign index 19
def advice_1_19: Prop := c.Advice 1 19 = 0
--Annotation: assign is_code 19
def advice_2_19: Prop := c.Advice 2 19 = 0
--Annotation: assign value 19
def advice_3_19: Prop := c.Advice 3 19 = 0
--Annotation: assign push_data_left 19
def advice_13_19: Prop := c.Advice 13 19 = 0
--Annotation: assign length 19
def advice_15_19: Prop := c.Advice 15 19 = 0
--Annotation: assign push_data_size 19
def advice_16_19: Prop := c.Advice 16 19 = 0
--Annotation: assign value_rlc 19
def advice_14_19: Prop := c.Advice 14 19 = 0
--Annotation: assign code_hash 19
def advice_4_19: Prop := c.Advice 4 19 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 19
def advice_5_19: Prop := c.Advice 5 19 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_19: Prop := c.Advice 17 19 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_19: Prop := c.Advice 18 19 = 1^(-1)
--Annotation: assign q_enable 20
def fixed_572: Prop := c.Fixed 0 20 = 1
--Annotation: assign q_first 20
def fixed_573: Prop := c.Fixed 1 20 = 0
--Annotation: assign q_last 20
def fixed_574: Prop := c.Fixed 2 20 = 0
--Annotation: assign tag 20
def advice_0_20: Prop := c.Advice 0 20 = 0
--Annotation: assign index 20
def advice_1_20: Prop := c.Advice 1 20 = 0
--Annotation: assign is_code 20
def advice_2_20: Prop := c.Advice 2 20 = 0
--Annotation: assign value 20
def advice_3_20: Prop := c.Advice 3 20 = 0
--Annotation: assign push_data_left 20
def advice_13_20: Prop := c.Advice 13 20 = 0
--Annotation: assign length 20
def advice_15_20: Prop := c.Advice 15 20 = 0
--Annotation: assign push_data_size 20
def advice_16_20: Prop := c.Advice 16 20 = 0
--Annotation: assign value_rlc 20
def advice_14_20: Prop := c.Advice 14 20 = 0
--Annotation: assign code_hash 20
def advice_4_20: Prop := c.Advice 4 20 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 20
def advice_5_20: Prop := c.Advice 5 20 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_20: Prop := c.Advice 17 20 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_20: Prop := c.Advice 18 20 = 1^(-1)
--Annotation: assign q_enable 21
def fixed_575: Prop := c.Fixed 0 21 = 1
--Annotation: assign q_first 21
def fixed_576: Prop := c.Fixed 1 21 = 0
--Annotation: assign q_last 21
def fixed_577: Prop := c.Fixed 2 21 = 0
--Annotation: assign tag 21
def advice_0_21: Prop := c.Advice 0 21 = 0
--Annotation: assign index 21
def advice_1_21: Prop := c.Advice 1 21 = 0
--Annotation: assign is_code 21
def advice_2_21: Prop := c.Advice 2 21 = 0
--Annotation: assign value 21
def advice_3_21: Prop := c.Advice 3 21 = 0
--Annotation: assign push_data_left 21
def advice_13_21: Prop := c.Advice 13 21 = 0
--Annotation: assign length 21
def advice_15_21: Prop := c.Advice 15 21 = 0
--Annotation: assign push_data_size 21
def advice_16_21: Prop := c.Advice 16 21 = 0
--Annotation: assign value_rlc 21
def advice_14_21: Prop := c.Advice 14 21 = 0
--Annotation: assign code_hash 21
def advice_4_21: Prop := c.Advice 4 21 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 21
def advice_5_21: Prop := c.Advice 5 21 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_21: Prop := c.Advice 17 21 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_21: Prop := c.Advice 18 21 = 1^(-1)
--Annotation: assign q_enable 22
def fixed_578: Prop := c.Fixed 0 22 = 1
--Annotation: assign q_first 22
def fixed_579: Prop := c.Fixed 1 22 = 0
--Annotation: assign q_last 22
def fixed_580: Prop := c.Fixed 2 22 = 0
--Annotation: assign tag 22
def advice_0_22: Prop := c.Advice 0 22 = 0
--Annotation: assign index 22
def advice_1_22: Prop := c.Advice 1 22 = 0
--Annotation: assign is_code 22
def advice_2_22: Prop := c.Advice 2 22 = 0
--Annotation: assign value 22
def advice_3_22: Prop := c.Advice 3 22 = 0
--Annotation: assign push_data_left 22
def advice_13_22: Prop := c.Advice 13 22 = 0
--Annotation: assign length 22
def advice_15_22: Prop := c.Advice 15 22 = 0
--Annotation: assign push_data_size 22
def advice_16_22: Prop := c.Advice 16 22 = 0
--Annotation: assign value_rlc 22
def advice_14_22: Prop := c.Advice 14 22 = 0
--Annotation: assign code_hash 22
def advice_4_22: Prop := c.Advice 4 22 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 22
def advice_5_22: Prop := c.Advice 5 22 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_22: Prop := c.Advice 17 22 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_22: Prop := c.Advice 18 22 = 1^(-1)
--Annotation: assign q_enable 23
def fixed_581: Prop := c.Fixed 0 23 = 1
--Annotation: assign q_first 23
def fixed_582: Prop := c.Fixed 1 23 = 0
--Annotation: assign q_last 23
def fixed_583: Prop := c.Fixed 2 23 = 0
--Annotation: assign tag 23
def advice_0_23: Prop := c.Advice 0 23 = 0
--Annotation: assign index 23
def advice_1_23: Prop := c.Advice 1 23 = 0
--Annotation: assign is_code 23
def advice_2_23: Prop := c.Advice 2 23 = 0
--Annotation: assign value 23
def advice_3_23: Prop := c.Advice 3 23 = 0
--Annotation: assign push_data_left 23
def advice_13_23: Prop := c.Advice 13 23 = 0
--Annotation: assign length 23
def advice_15_23: Prop := c.Advice 15 23 = 0
--Annotation: assign push_data_size 23
def advice_16_23: Prop := c.Advice 16 23 = 0
--Annotation: assign value_rlc 23
def advice_14_23: Prop := c.Advice 14 23 = 0
--Annotation: assign code_hash 23
def advice_4_23: Prop := c.Advice 4 23 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 23
def advice_5_23: Prop := c.Advice 5 23 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_23: Prop := c.Advice 17 23 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_23: Prop := c.Advice 18 23 = 1^(-1)
--Annotation: assign q_enable 24
def fixed_584: Prop := c.Fixed 0 24 = 1
--Annotation: assign q_first 24
def fixed_585: Prop := c.Fixed 1 24 = 0
--Annotation: assign q_last 24
def fixed_586: Prop := c.Fixed 2 24 = 0
--Annotation: assign tag 24
def advice_0_24: Prop := c.Advice 0 24 = 0
--Annotation: assign index 24
def advice_1_24: Prop := c.Advice 1 24 = 0
--Annotation: assign is_code 24
def advice_2_24: Prop := c.Advice 2 24 = 0
--Annotation: assign value 24
def advice_3_24: Prop := c.Advice 3 24 = 0
--Annotation: assign push_data_left 24
def advice_13_24: Prop := c.Advice 13 24 = 0
--Annotation: assign length 24
def advice_15_24: Prop := c.Advice 15 24 = 0
--Annotation: assign push_data_size 24
def advice_16_24: Prop := c.Advice 16 24 = 0
--Annotation: assign value_rlc 24
def advice_14_24: Prop := c.Advice 14 24 = 0
--Annotation: assign code_hash 24
def advice_4_24: Prop := c.Advice 4 24 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 24
def advice_5_24: Prop := c.Advice 5 24 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_24: Prop := c.Advice 17 24 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_24: Prop := c.Advice 18 24 = 1^(-1)
--Annotation: assign q_enable 25
def fixed_587: Prop := c.Fixed 0 25 = 1
--Annotation: assign q_first 25
def fixed_588: Prop := c.Fixed 1 25 = 0
--Annotation: assign q_last 25
def fixed_589: Prop := c.Fixed 2 25 = 0
--Annotation: assign tag 25
def advice_0_25: Prop := c.Advice 0 25 = 0
--Annotation: assign index 25
def advice_1_25: Prop := c.Advice 1 25 = 0
--Annotation: assign is_code 25
def advice_2_25: Prop := c.Advice 2 25 = 0
--Annotation: assign value 25
def advice_3_25: Prop := c.Advice 3 25 = 0
--Annotation: assign push_data_left 25
def advice_13_25: Prop := c.Advice 13 25 = 0
--Annotation: assign length 25
def advice_15_25: Prop := c.Advice 15 25 = 0
--Annotation: assign push_data_size 25
def advice_16_25: Prop := c.Advice 16 25 = 0
--Annotation: assign value_rlc 25
def advice_14_25: Prop := c.Advice 14 25 = 0
--Annotation: assign code_hash 25
def advice_4_25: Prop := c.Advice 4 25 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 25
def advice_5_25: Prop := c.Advice 5 25 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_25: Prop := c.Advice 17 25 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_25: Prop := c.Advice 18 25 = 1^(-1)
--Annotation: assign q_enable 26
def fixed_590: Prop := c.Fixed 0 26 = 1
--Annotation: assign q_first 26
def fixed_591: Prop := c.Fixed 1 26 = 0
--Annotation: assign q_last 26
def fixed_592: Prop := c.Fixed 2 26 = 0
--Annotation: assign tag 26
def advice_0_26: Prop := c.Advice 0 26 = 0
--Annotation: assign index 26
def advice_1_26: Prop := c.Advice 1 26 = 0
--Annotation: assign is_code 26
def advice_2_26: Prop := c.Advice 2 26 = 0
--Annotation: assign value 26
def advice_3_26: Prop := c.Advice 3 26 = 0
--Annotation: assign push_data_left 26
def advice_13_26: Prop := c.Advice 13 26 = 0
--Annotation: assign length 26
def advice_15_26: Prop := c.Advice 15 26 = 0
--Annotation: assign push_data_size 26
def advice_16_26: Prop := c.Advice 16 26 = 0
--Annotation: assign value_rlc 26
def advice_14_26: Prop := c.Advice 14 26 = 0
--Annotation: assign code_hash 26
def advice_4_26: Prop := c.Advice 4 26 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 26
def advice_5_26: Prop := c.Advice 5 26 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_26: Prop := c.Advice 17 26 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_26: Prop := c.Advice 18 26 = 1^(-1)
--Annotation: assign q_enable 27
def fixed_593: Prop := c.Fixed 0 27 = 1
--Annotation: assign q_first 27
def fixed_594: Prop := c.Fixed 1 27 = 0
--Annotation: assign q_last 27
def fixed_595: Prop := c.Fixed 2 27 = 0
--Annotation: assign tag 27
def advice_0_27: Prop := c.Advice 0 27 = 0
--Annotation: assign index 27
def advice_1_27: Prop := c.Advice 1 27 = 0
--Annotation: assign is_code 27
def advice_2_27: Prop := c.Advice 2 27 = 0
--Annotation: assign value 27
def advice_3_27: Prop := c.Advice 3 27 = 0
--Annotation: assign push_data_left 27
def advice_13_27: Prop := c.Advice 13 27 = 0
--Annotation: assign length 27
def advice_15_27: Prop := c.Advice 15 27 = 0
--Annotation: assign push_data_size 27
def advice_16_27: Prop := c.Advice 16 27 = 0
--Annotation: assign value_rlc 27
def advice_14_27: Prop := c.Advice 14 27 = 0
--Annotation: assign code_hash 27
def advice_4_27: Prop := c.Advice 4 27 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 27
def advice_5_27: Prop := c.Advice 5 27 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_27: Prop := c.Advice 17 27 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_27: Prop := c.Advice 18 27 = 1^(-1)
--Annotation: assign q_enable 28
def fixed_596: Prop := c.Fixed 0 28 = 1
--Annotation: assign q_first 28
def fixed_597: Prop := c.Fixed 1 28 = 0
--Annotation: assign q_last 28
def fixed_598: Prop := c.Fixed 2 28 = 0
--Annotation: assign tag 28
def advice_0_28: Prop := c.Advice 0 28 = 0
--Annotation: assign index 28
def advice_1_28: Prop := c.Advice 1 28 = 0
--Annotation: assign is_code 28
def advice_2_28: Prop := c.Advice 2 28 = 0
--Annotation: assign value 28
def advice_3_28: Prop := c.Advice 3 28 = 0
--Annotation: assign push_data_left 28
def advice_13_28: Prop := c.Advice 13 28 = 0
--Annotation: assign length 28
def advice_15_28: Prop := c.Advice 15 28 = 0
--Annotation: assign push_data_size 28
def advice_16_28: Prop := c.Advice 16 28 = 0
--Annotation: assign value_rlc 28
def advice_14_28: Prop := c.Advice 14 28 = 0
--Annotation: assign code_hash 28
def advice_4_28: Prop := c.Advice 4 28 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 28
def advice_5_28: Prop := c.Advice 5 28 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_28: Prop := c.Advice 17 28 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_28: Prop := c.Advice 18 28 = 1^(-1)
--Annotation: assign q_enable 29
def fixed_599: Prop := c.Fixed 0 29 = 1
--Annotation: assign q_first 29
def fixed_600: Prop := c.Fixed 1 29 = 0
--Annotation: assign q_last 29
def fixed_601: Prop := c.Fixed 2 29 = 0
--Annotation: assign tag 29
def advice_0_29: Prop := c.Advice 0 29 = 0
--Annotation: assign index 29
def advice_1_29: Prop := c.Advice 1 29 = 0
--Annotation: assign is_code 29
def advice_2_29: Prop := c.Advice 2 29 = 0
--Annotation: assign value 29
def advice_3_29: Prop := c.Advice 3 29 = 0
--Annotation: assign push_data_left 29
def advice_13_29: Prop := c.Advice 13 29 = 0
--Annotation: assign length 29
def advice_15_29: Prop := c.Advice 15 29 = 0
--Annotation: assign push_data_size 29
def advice_16_29: Prop := c.Advice 16 29 = 0
--Annotation: assign value_rlc 29
def advice_14_29: Prop := c.Advice 14 29 = 0
--Annotation: assign code_hash 29
def advice_4_29: Prop := c.Advice 4 29 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 29
def advice_5_29: Prop := c.Advice 5 29 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_29: Prop := c.Advice 17 29 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_29: Prop := c.Advice 18 29 = 1^(-1)
--Annotation: assign q_enable 30
def fixed_602: Prop := c.Fixed 0 30 = 1
--Annotation: assign q_first 30
def fixed_603: Prop := c.Fixed 1 30 = 0
--Annotation: assign q_last 30
def fixed_604: Prop := c.Fixed 2 30 = 0
--Annotation: assign tag 30
def advice_0_30: Prop := c.Advice 0 30 = 0
--Annotation: assign index 30
def advice_1_30: Prop := c.Advice 1 30 = 0
--Annotation: assign is_code 30
def advice_2_30: Prop := c.Advice 2 30 = 0
--Annotation: assign value 30
def advice_3_30: Prop := c.Advice 3 30 = 0
--Annotation: assign push_data_left 30
def advice_13_30: Prop := c.Advice 13 30 = 0
--Annotation: assign length 30
def advice_15_30: Prop := c.Advice 15 30 = 0
--Annotation: assign push_data_size 30
def advice_16_30: Prop := c.Advice 16 30 = 0
--Annotation: assign value_rlc 30
def advice_14_30: Prop := c.Advice 14 30 = 0
--Annotation: assign code_hash 30
def advice_4_30: Prop := c.Advice 4 30 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 30
def advice_5_30: Prop := c.Advice 5 30 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_30: Prop := c.Advice 17 30 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_30: Prop := c.Advice 18 30 = 1^(-1)
--Annotation: assign q_enable 31
def fixed_605: Prop := c.Fixed 0 31 = 1
--Annotation: assign q_first 31
def fixed_606: Prop := c.Fixed 1 31 = 0
--Annotation: assign q_last 31
def fixed_607: Prop := c.Fixed 2 31 = 0
--Annotation: assign tag 31
def advice_0_31: Prop := c.Advice 0 31 = 0
--Annotation: assign index 31
def advice_1_31: Prop := c.Advice 1 31 = 0
--Annotation: assign is_code 31
def advice_2_31: Prop := c.Advice 2 31 = 0
--Annotation: assign value 31
def advice_3_31: Prop := c.Advice 3 31 = 0
--Annotation: assign push_data_left 31
def advice_13_31: Prop := c.Advice 13 31 = 0
--Annotation: assign length 31
def advice_15_31: Prop := c.Advice 15 31 = 0
--Annotation: assign push_data_size 31
def advice_16_31: Prop := c.Advice 16 31 = 0
--Annotation: assign value_rlc 31
def advice_14_31: Prop := c.Advice 14 31 = 0
--Annotation: assign code_hash 31
def advice_4_31: Prop := c.Advice 4 31 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 31
def advice_5_31: Prop := c.Advice 5 31 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_31: Prop := c.Advice 17 31 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_31: Prop := c.Advice 18 31 = 1^(-1)
--Annotation: assign q_enable 32
def fixed_608: Prop := c.Fixed 0 32 = 1
--Annotation: assign q_first 32
def fixed_609: Prop := c.Fixed 1 32 = 0
--Annotation: assign q_last 32
def fixed_610: Prop := c.Fixed 2 32 = 0
--Annotation: assign tag 32
def advice_0_32: Prop := c.Advice 0 32 = 0
--Annotation: assign index 32
def advice_1_32: Prop := c.Advice 1 32 = 0
--Annotation: assign is_code 32
def advice_2_32: Prop := c.Advice 2 32 = 0
--Annotation: assign value 32
def advice_3_32: Prop := c.Advice 3 32 = 0
--Annotation: assign push_data_left 32
def advice_13_32: Prop := c.Advice 13 32 = 0
--Annotation: assign length 32
def advice_15_32: Prop := c.Advice 15 32 = 0
--Annotation: assign push_data_size 32
def advice_16_32: Prop := c.Advice 16 32 = 0
--Annotation: assign value_rlc 32
def advice_14_32: Prop := c.Advice 14 32 = 0
--Annotation: assign code_hash 32
def advice_4_32: Prop := c.Advice 4 32 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 32
def advice_5_32: Prop := c.Advice 5 32 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_32: Prop := c.Advice 17 32 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_32: Prop := c.Advice 18 32 = 1^(-1)
--Annotation: assign q_enable 33
def fixed_611: Prop := c.Fixed 0 33 = 1
--Annotation: assign q_first 33
def fixed_612: Prop := c.Fixed 1 33 = 0
--Annotation: assign q_last 33
def fixed_613: Prop := c.Fixed 2 33 = 0
--Annotation: assign tag 33
def advice_0_33: Prop := c.Advice 0 33 = 0
--Annotation: assign index 33
def advice_1_33: Prop := c.Advice 1 33 = 0
--Annotation: assign is_code 33
def advice_2_33: Prop := c.Advice 2 33 = 0
--Annotation: assign value 33
def advice_3_33: Prop := c.Advice 3 33 = 0
--Annotation: assign push_data_left 33
def advice_13_33: Prop := c.Advice 13 33 = 0
--Annotation: assign length 33
def advice_15_33: Prop := c.Advice 15 33 = 0
--Annotation: assign push_data_size 33
def advice_16_33: Prop := c.Advice 16 33 = 0
--Annotation: assign value_rlc 33
def advice_14_33: Prop := c.Advice 14 33 = 0
--Annotation: assign code_hash 33
def advice_4_33: Prop := c.Advice 4 33 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 33
def advice_5_33: Prop := c.Advice 5 33 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_33: Prop := c.Advice 17 33 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_33: Prop := c.Advice 18 33 = 1^(-1)
--Annotation: assign q_enable 34
def fixed_614: Prop := c.Fixed 0 34 = 1
--Annotation: assign q_first 34
def fixed_615: Prop := c.Fixed 1 34 = 0
--Annotation: assign q_last 34
def fixed_616: Prop := c.Fixed 2 34 = 0
--Annotation: assign tag 34
def advice_0_34: Prop := c.Advice 0 34 = 0
--Annotation: assign index 34
def advice_1_34: Prop := c.Advice 1 34 = 0
--Annotation: assign is_code 34
def advice_2_34: Prop := c.Advice 2 34 = 0
--Annotation: assign value 34
def advice_3_34: Prop := c.Advice 3 34 = 0
--Annotation: assign push_data_left 34
def advice_13_34: Prop := c.Advice 13 34 = 0
--Annotation: assign length 34
def advice_15_34: Prop := c.Advice 15 34 = 0
--Annotation: assign push_data_size 34
def advice_16_34: Prop := c.Advice 16 34 = 0
--Annotation: assign value_rlc 34
def advice_14_34: Prop := c.Advice 14 34 = 0
--Annotation: assign code_hash 34
def advice_4_34: Prop := c.Advice 4 34 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 34
def advice_5_34: Prop := c.Advice 5 34 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_34: Prop := c.Advice 17 34 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_34: Prop := c.Advice 18 34 = 1^(-1)
--Annotation: assign q_enable 35
def fixed_617: Prop := c.Fixed 0 35 = 1
--Annotation: assign q_first 35
def fixed_618: Prop := c.Fixed 1 35 = 0
--Annotation: assign q_last 35
def fixed_619: Prop := c.Fixed 2 35 = 0
--Annotation: assign tag 35
def advice_0_35: Prop := c.Advice 0 35 = 0
--Annotation: assign index 35
def advice_1_35: Prop := c.Advice 1 35 = 0
--Annotation: assign is_code 35
def advice_2_35: Prop := c.Advice 2 35 = 0
--Annotation: assign value 35
def advice_3_35: Prop := c.Advice 3 35 = 0
--Annotation: assign push_data_left 35
def advice_13_35: Prop := c.Advice 13 35 = 0
--Annotation: assign length 35
def advice_15_35: Prop := c.Advice 15 35 = 0
--Annotation: assign push_data_size 35
def advice_16_35: Prop := c.Advice 16 35 = 0
--Annotation: assign value_rlc 35
def advice_14_35: Prop := c.Advice 14 35 = 0
--Annotation: assign code_hash 35
def advice_4_35: Prop := c.Advice 4 35 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 35
def advice_5_35: Prop := c.Advice 5 35 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_35: Prop := c.Advice 17 35 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_35: Prop := c.Advice 18 35 = 1^(-1)
--Annotation: assign q_enable 36
def fixed_620: Prop := c.Fixed 0 36 = 1
--Annotation: assign q_first 36
def fixed_621: Prop := c.Fixed 1 36 = 0
--Annotation: assign q_last 36
def fixed_622: Prop := c.Fixed 2 36 = 0
--Annotation: assign tag 36
def advice_0_36: Prop := c.Advice 0 36 = 0
--Annotation: assign index 36
def advice_1_36: Prop := c.Advice 1 36 = 0
--Annotation: assign is_code 36
def advice_2_36: Prop := c.Advice 2 36 = 0
--Annotation: assign value 36
def advice_3_36: Prop := c.Advice 3 36 = 0
--Annotation: assign push_data_left 36
def advice_13_36: Prop := c.Advice 13 36 = 0
--Annotation: assign length 36
def advice_15_36: Prop := c.Advice 15 36 = 0
--Annotation: assign push_data_size 36
def advice_16_36: Prop := c.Advice 16 36 = 0
--Annotation: assign value_rlc 36
def advice_14_36: Prop := c.Advice 14 36 = 0
--Annotation: assign code_hash 36
def advice_4_36: Prop := c.Advice 4 36 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 36
def advice_5_36: Prop := c.Advice 5 36 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_36: Prop := c.Advice 17 36 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_36: Prop := c.Advice 18 36 = 1^(-1)
--Annotation: assign q_enable 37
def fixed_623: Prop := c.Fixed 0 37 = 1
--Annotation: assign q_first 37
def fixed_624: Prop := c.Fixed 1 37 = 0
--Annotation: assign q_last 37
def fixed_625: Prop := c.Fixed 2 37 = 0
--Annotation: assign tag 37
def advice_0_37: Prop := c.Advice 0 37 = 0
--Annotation: assign index 37
def advice_1_37: Prop := c.Advice 1 37 = 0
--Annotation: assign is_code 37
def advice_2_37: Prop := c.Advice 2 37 = 0
--Annotation: assign value 37
def advice_3_37: Prop := c.Advice 3 37 = 0
--Annotation: assign push_data_left 37
def advice_13_37: Prop := c.Advice 13 37 = 0
--Annotation: assign length 37
def advice_15_37: Prop := c.Advice 15 37 = 0
--Annotation: assign push_data_size 37
def advice_16_37: Prop := c.Advice 16 37 = 0
--Annotation: assign value_rlc 37
def advice_14_37: Prop := c.Advice 14 37 = 0
--Annotation: assign code_hash 37
def advice_4_37: Prop := c.Advice 4 37 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 37
def advice_5_37: Prop := c.Advice 5 37 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_37: Prop := c.Advice 17 37 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_37: Prop := c.Advice 18 37 = 1^(-1)
--Annotation: assign q_enable 38
def fixed_626: Prop := c.Fixed 0 38 = 1
--Annotation: assign q_first 38
def fixed_627: Prop := c.Fixed 1 38 = 0
--Annotation: assign q_last 38
def fixed_628: Prop := c.Fixed 2 38 = 0
--Annotation: assign tag 38
def advice_0_38: Prop := c.Advice 0 38 = 0
--Annotation: assign index 38
def advice_1_38: Prop := c.Advice 1 38 = 0
--Annotation: assign is_code 38
def advice_2_38: Prop := c.Advice 2 38 = 0
--Annotation: assign value 38
def advice_3_38: Prop := c.Advice 3 38 = 0
--Annotation: assign push_data_left 38
def advice_13_38: Prop := c.Advice 13 38 = 0
--Annotation: assign length 38
def advice_15_38: Prop := c.Advice 15 38 = 0
--Annotation: assign push_data_size 38
def advice_16_38: Prop := c.Advice 16 38 = 0
--Annotation: assign value_rlc 38
def advice_14_38: Prop := c.Advice 14 38 = 0
--Annotation: assign code_hash 38
def advice_4_38: Prop := c.Advice 4 38 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 38
def advice_5_38: Prop := c.Advice 5 38 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_38: Prop := c.Advice 17 38 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_38: Prop := c.Advice 18 38 = 1^(-1)
--Annotation: assign q_enable 39
def fixed_629: Prop := c.Fixed 0 39 = 1
--Annotation: assign q_first 39
def fixed_630: Prop := c.Fixed 1 39 = 0
--Annotation: assign q_last 39
def fixed_631: Prop := c.Fixed 2 39 = 0
--Annotation: assign tag 39
def advice_0_39: Prop := c.Advice 0 39 = 0
--Annotation: assign index 39
def advice_1_39: Prop := c.Advice 1 39 = 0
--Annotation: assign is_code 39
def advice_2_39: Prop := c.Advice 2 39 = 0
--Annotation: assign value 39
def advice_3_39: Prop := c.Advice 3 39 = 0
--Annotation: assign push_data_left 39
def advice_13_39: Prop := c.Advice 13 39 = 0
--Annotation: assign length 39
def advice_15_39: Prop := c.Advice 15 39 = 0
--Annotation: assign push_data_size 39
def advice_16_39: Prop := c.Advice 16 39 = 0
--Annotation: assign value_rlc 39
def advice_14_39: Prop := c.Advice 14 39 = 0
--Annotation: assign code_hash 39
def advice_4_39: Prop := c.Advice 4 39 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 39
def advice_5_39: Prop := c.Advice 5 39 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_39: Prop := c.Advice 17 39 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_39: Prop := c.Advice 18 39 = 1^(-1)
--Annotation: assign q_enable 40
def fixed_632: Prop := c.Fixed 0 40 = 1
--Annotation: assign q_first 40
def fixed_633: Prop := c.Fixed 1 40 = 0
--Annotation: assign q_last 40
def fixed_634: Prop := c.Fixed 2 40 = 0
--Annotation: assign tag 40
def advice_0_40: Prop := c.Advice 0 40 = 0
--Annotation: assign index 40
def advice_1_40: Prop := c.Advice 1 40 = 0
--Annotation: assign is_code 40
def advice_2_40: Prop := c.Advice 2 40 = 0
--Annotation: assign value 40
def advice_3_40: Prop := c.Advice 3 40 = 0
--Annotation: assign push_data_left 40
def advice_13_40: Prop := c.Advice 13 40 = 0
--Annotation: assign length 40
def advice_15_40: Prop := c.Advice 15 40 = 0
--Annotation: assign push_data_size 40
def advice_16_40: Prop := c.Advice 16 40 = 0
--Annotation: assign value_rlc 40
def advice_14_40: Prop := c.Advice 14 40 = 0
--Annotation: assign code_hash 40
def advice_4_40: Prop := c.Advice 4 40 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 40
def advice_5_40: Prop := c.Advice 5 40 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_40: Prop := c.Advice 17 40 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_40: Prop := c.Advice 18 40 = 1^(-1)
--Annotation: assign q_enable 41
def fixed_635: Prop := c.Fixed 0 41 = 1
--Annotation: assign q_first 41
def fixed_636: Prop := c.Fixed 1 41 = 0
--Annotation: assign q_last 41
def fixed_637: Prop := c.Fixed 2 41 = 0
--Annotation: assign tag 41
def advice_0_41: Prop := c.Advice 0 41 = 0
--Annotation: assign index 41
def advice_1_41: Prop := c.Advice 1 41 = 0
--Annotation: assign is_code 41
def advice_2_41: Prop := c.Advice 2 41 = 0
--Annotation: assign value 41
def advice_3_41: Prop := c.Advice 3 41 = 0
--Annotation: assign push_data_left 41
def advice_13_41: Prop := c.Advice 13 41 = 0
--Annotation: assign length 41
def advice_15_41: Prop := c.Advice 15 41 = 0
--Annotation: assign push_data_size 41
def advice_16_41: Prop := c.Advice 16 41 = 0
--Annotation: assign value_rlc 41
def advice_14_41: Prop := c.Advice 14 41 = 0
--Annotation: assign code_hash 41
def advice_4_41: Prop := c.Advice 4 41 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 41
def advice_5_41: Prop := c.Advice 5 41 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_41: Prop := c.Advice 17 41 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_41: Prop := c.Advice 18 41 = 1^(-1)
--Annotation: assign q_enable 42
def fixed_638: Prop := c.Fixed 0 42 = 1
--Annotation: assign q_first 42
def fixed_639: Prop := c.Fixed 1 42 = 0
--Annotation: assign q_last 42
def fixed_640: Prop := c.Fixed 2 42 = 0
--Annotation: assign tag 42
def advice_0_42: Prop := c.Advice 0 42 = 0
--Annotation: assign index 42
def advice_1_42: Prop := c.Advice 1 42 = 0
--Annotation: assign is_code 42
def advice_2_42: Prop := c.Advice 2 42 = 0
--Annotation: assign value 42
def advice_3_42: Prop := c.Advice 3 42 = 0
--Annotation: assign push_data_left 42
def advice_13_42: Prop := c.Advice 13 42 = 0
--Annotation: assign length 42
def advice_15_42: Prop := c.Advice 15 42 = 0
--Annotation: assign push_data_size 42
def advice_16_42: Prop := c.Advice 16 42 = 0
--Annotation: assign value_rlc 42
def advice_14_42: Prop := c.Advice 14 42 = 0
--Annotation: assign code_hash 42
def advice_4_42: Prop := c.Advice 4 42 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 42
def advice_5_42: Prop := c.Advice 5 42 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_42: Prop := c.Advice 17 42 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_42: Prop := c.Advice 18 42 = 1^(-1)
--Annotation: assign q_enable 43
def fixed_641: Prop := c.Fixed 0 43 = 1
--Annotation: assign q_first 43
def fixed_642: Prop := c.Fixed 1 43 = 0
--Annotation: assign q_last 43
def fixed_643: Prop := c.Fixed 2 43 = 0
--Annotation: assign tag 43
def advice_0_43: Prop := c.Advice 0 43 = 0
--Annotation: assign index 43
def advice_1_43: Prop := c.Advice 1 43 = 0
--Annotation: assign is_code 43
def advice_2_43: Prop := c.Advice 2 43 = 0
--Annotation: assign value 43
def advice_3_43: Prop := c.Advice 3 43 = 0
--Annotation: assign push_data_left 43
def advice_13_43: Prop := c.Advice 13 43 = 0
--Annotation: assign length 43
def advice_15_43: Prop := c.Advice 15 43 = 0
--Annotation: assign push_data_size 43
def advice_16_43: Prop := c.Advice 16 43 = 0
--Annotation: assign value_rlc 43
def advice_14_43: Prop := c.Advice 14 43 = 0
--Annotation: assign code_hash 43
def advice_4_43: Prop := c.Advice 4 43 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 43
def advice_5_43: Prop := c.Advice 5 43 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_43: Prop := c.Advice 17 43 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_43: Prop := c.Advice 18 43 = 1^(-1)
--Annotation: assign q_enable 44
def fixed_644: Prop := c.Fixed 0 44 = 1
--Annotation: assign q_first 44
def fixed_645: Prop := c.Fixed 1 44 = 0
--Annotation: assign q_last 44
def fixed_646: Prop := c.Fixed 2 44 = 0
--Annotation: assign tag 44
def advice_0_44: Prop := c.Advice 0 44 = 0
--Annotation: assign index 44
def advice_1_44: Prop := c.Advice 1 44 = 0
--Annotation: assign is_code 44
def advice_2_44: Prop := c.Advice 2 44 = 0
--Annotation: assign value 44
def advice_3_44: Prop := c.Advice 3 44 = 0
--Annotation: assign push_data_left 44
def advice_13_44: Prop := c.Advice 13 44 = 0
--Annotation: assign length 44
def advice_15_44: Prop := c.Advice 15 44 = 0
--Annotation: assign push_data_size 44
def advice_16_44: Prop := c.Advice 16 44 = 0
--Annotation: assign value_rlc 44
def advice_14_44: Prop := c.Advice 14 44 = 0
--Annotation: assign code_hash 44
def advice_4_44: Prop := c.Advice 4 44 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 44
def advice_5_44: Prop := c.Advice 5 44 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_44: Prop := c.Advice 17 44 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_44: Prop := c.Advice 18 44 = 1^(-1)
--Annotation: assign q_enable 45
def fixed_647: Prop := c.Fixed 0 45 = 1
--Annotation: assign q_first 45
def fixed_648: Prop := c.Fixed 1 45 = 0
--Annotation: assign q_last 45
def fixed_649: Prop := c.Fixed 2 45 = 0
--Annotation: assign tag 45
def advice_0_45: Prop := c.Advice 0 45 = 0
--Annotation: assign index 45
def advice_1_45: Prop := c.Advice 1 45 = 0
--Annotation: assign is_code 45
def advice_2_45: Prop := c.Advice 2 45 = 0
--Annotation: assign value 45
def advice_3_45: Prop := c.Advice 3 45 = 0
--Annotation: assign push_data_left 45
def advice_13_45: Prop := c.Advice 13 45 = 0
--Annotation: assign length 45
def advice_15_45: Prop := c.Advice 15 45 = 0
--Annotation: assign push_data_size 45
def advice_16_45: Prop := c.Advice 16 45 = 0
--Annotation: assign value_rlc 45
def advice_14_45: Prop := c.Advice 14 45 = 0
--Annotation: assign code_hash 45
def advice_4_45: Prop := c.Advice 4 45 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 45
def advice_5_45: Prop := c.Advice 5 45 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_45: Prop := c.Advice 17 45 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_45: Prop := c.Advice 18 45 = 1^(-1)
--Annotation: assign q_enable 46
def fixed_650: Prop := c.Fixed 0 46 = 1
--Annotation: assign q_first 46
def fixed_651: Prop := c.Fixed 1 46 = 0
--Annotation: assign q_last 46
def fixed_652: Prop := c.Fixed 2 46 = 0
--Annotation: assign tag 46
def advice_0_46: Prop := c.Advice 0 46 = 0
--Annotation: assign index 46
def advice_1_46: Prop := c.Advice 1 46 = 0
--Annotation: assign is_code 46
def advice_2_46: Prop := c.Advice 2 46 = 0
--Annotation: assign value 46
def advice_3_46: Prop := c.Advice 3 46 = 0
--Annotation: assign push_data_left 46
def advice_13_46: Prop := c.Advice 13 46 = 0
--Annotation: assign length 46
def advice_15_46: Prop := c.Advice 15 46 = 0
--Annotation: assign push_data_size 46
def advice_16_46: Prop := c.Advice 16 46 = 0
--Annotation: assign value_rlc 46
def advice_14_46: Prop := c.Advice 14 46 = 0
--Annotation: assign code_hash 46
def advice_4_46: Prop := c.Advice 4 46 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 46
def advice_5_46: Prop := c.Advice 5 46 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_46: Prop := c.Advice 17 46 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_46: Prop := c.Advice 18 46 = 1^(-1)
--Annotation: assign q_enable 47
def fixed_653: Prop := c.Fixed 0 47 = 1
--Annotation: assign q_first 47
def fixed_654: Prop := c.Fixed 1 47 = 0
--Annotation: assign q_last 47
def fixed_655: Prop := c.Fixed 2 47 = 0
--Annotation: assign tag 47
def advice_0_47: Prop := c.Advice 0 47 = 0
--Annotation: assign index 47
def advice_1_47: Prop := c.Advice 1 47 = 0
--Annotation: assign is_code 47
def advice_2_47: Prop := c.Advice 2 47 = 0
--Annotation: assign value 47
def advice_3_47: Prop := c.Advice 3 47 = 0
--Annotation: assign push_data_left 47
def advice_13_47: Prop := c.Advice 13 47 = 0
--Annotation: assign length 47
def advice_15_47: Prop := c.Advice 15 47 = 0
--Annotation: assign push_data_size 47
def advice_16_47: Prop := c.Advice 16 47 = 0
--Annotation: assign value_rlc 47
def advice_14_47: Prop := c.Advice 14 47 = 0
--Annotation: assign code_hash 47
def advice_4_47: Prop := c.Advice 4 47 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 47
def advice_5_47: Prop := c.Advice 5 47 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_47: Prop := c.Advice 17 47 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_47: Prop := c.Advice 18 47 = 1^(-1)
--Annotation: assign q_enable 48
def fixed_656: Prop := c.Fixed 0 48 = 1
--Annotation: assign q_first 48
def fixed_657: Prop := c.Fixed 1 48 = 0
--Annotation: assign q_last 48
def fixed_658: Prop := c.Fixed 2 48 = 0
--Annotation: assign tag 48
def advice_0_48: Prop := c.Advice 0 48 = 0
--Annotation: assign index 48
def advice_1_48: Prop := c.Advice 1 48 = 0
--Annotation: assign is_code 48
def advice_2_48: Prop := c.Advice 2 48 = 0
--Annotation: assign value 48
def advice_3_48: Prop := c.Advice 3 48 = 0
--Annotation: assign push_data_left 48
def advice_13_48: Prop := c.Advice 13 48 = 0
--Annotation: assign length 48
def advice_15_48: Prop := c.Advice 15 48 = 0
--Annotation: assign push_data_size 48
def advice_16_48: Prop := c.Advice 16 48 = 0
--Annotation: assign value_rlc 48
def advice_14_48: Prop := c.Advice 14 48 = 0
--Annotation: assign code_hash 48
def advice_4_48: Prop := c.Advice 4 48 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 48
def advice_5_48: Prop := c.Advice 5 48 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_48: Prop := c.Advice 17 48 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_48: Prop := c.Advice 18 48 = 1^(-1)
--Annotation: assign q_enable 49
def fixed_659: Prop := c.Fixed 0 49 = 1
--Annotation: assign q_first 49
def fixed_660: Prop := c.Fixed 1 49 = 0
--Annotation: assign q_last 49
def fixed_661: Prop := c.Fixed 2 49 = 0
--Annotation: assign tag 49
def advice_0_49: Prop := c.Advice 0 49 = 0
--Annotation: assign index 49
def advice_1_49: Prop := c.Advice 1 49 = 0
--Annotation: assign is_code 49
def advice_2_49: Prop := c.Advice 2 49 = 0
--Annotation: assign value 49
def advice_3_49: Prop := c.Advice 3 49 = 0
--Annotation: assign push_data_left 49
def advice_13_49: Prop := c.Advice 13 49 = 0
--Annotation: assign length 49
def advice_15_49: Prop := c.Advice 15 49 = 0
--Annotation: assign push_data_size 49
def advice_16_49: Prop := c.Advice 16 49 = 0
--Annotation: assign value_rlc 49
def advice_14_49: Prop := c.Advice 14 49 = 0
--Annotation: assign code_hash 49
def advice_4_49: Prop := c.Advice 4 49 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 49
def advice_5_49: Prop := c.Advice 5 49 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_49: Prop := c.Advice 17 49 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_49: Prop := c.Advice 18 49 = 1^(-1)
--Annotation: assign q_enable 50
def fixed_662: Prop := c.Fixed 0 50 = 1
--Annotation: assign q_first 50
def fixed_663: Prop := c.Fixed 1 50 = 0
--Annotation: assign q_last 50
def fixed_664: Prop := c.Fixed 2 50 = 0
--Annotation: assign tag 50
def advice_0_50: Prop := c.Advice 0 50 = 0
--Annotation: assign index 50
def advice_1_50: Prop := c.Advice 1 50 = 0
--Annotation: assign is_code 50
def advice_2_50: Prop := c.Advice 2 50 = 0
--Annotation: assign value 50
def advice_3_50: Prop := c.Advice 3 50 = 0
--Annotation: assign push_data_left 50
def advice_13_50: Prop := c.Advice 13 50 = 0
--Annotation: assign length 50
def advice_15_50: Prop := c.Advice 15 50 = 0
--Annotation: assign push_data_size 50
def advice_16_50: Prop := c.Advice 16 50 = 0
--Annotation: assign value_rlc 50
def advice_14_50: Prop := c.Advice 14 50 = 0
--Annotation: assign code_hash 50
def advice_4_50: Prop := c.Advice 4 50 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 50
def advice_5_50: Prop := c.Advice 5 50 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_50: Prop := c.Advice 17 50 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_50: Prop := c.Advice 18 50 = 1^(-1)
--Annotation: assign q_enable 51
def fixed_665: Prop := c.Fixed 0 51 = 1
--Annotation: assign q_first 51
def fixed_666: Prop := c.Fixed 1 51 = 0
--Annotation: assign q_last 51
def fixed_667: Prop := c.Fixed 2 51 = 0
--Annotation: assign tag 51
def advice_0_51: Prop := c.Advice 0 51 = 0
--Annotation: assign index 51
def advice_1_51: Prop := c.Advice 1 51 = 0
--Annotation: assign is_code 51
def advice_2_51: Prop := c.Advice 2 51 = 0
--Annotation: assign value 51
def advice_3_51: Prop := c.Advice 3 51 = 0
--Annotation: assign push_data_left 51
def advice_13_51: Prop := c.Advice 13 51 = 0
--Annotation: assign length 51
def advice_15_51: Prop := c.Advice 15 51 = 0
--Annotation: assign push_data_size 51
def advice_16_51: Prop := c.Advice 16 51 = 0
--Annotation: assign value_rlc 51
def advice_14_51: Prop := c.Advice 14 51 = 0
--Annotation: assign code_hash 51
def advice_4_51: Prop := c.Advice 4 51 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 51
def advice_5_51: Prop := c.Advice 5 51 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_51: Prop := c.Advice 17 51 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_51: Prop := c.Advice 18 51 = 1^(-1)
--Annotation: assign q_enable 52
def fixed_668: Prop := c.Fixed 0 52 = 1
--Annotation: assign q_first 52
def fixed_669: Prop := c.Fixed 1 52 = 0
--Annotation: assign q_last 52
def fixed_670: Prop := c.Fixed 2 52 = 0
--Annotation: assign tag 52
def advice_0_52: Prop := c.Advice 0 52 = 0
--Annotation: assign index 52
def advice_1_52: Prop := c.Advice 1 52 = 0
--Annotation: assign is_code 52
def advice_2_52: Prop := c.Advice 2 52 = 0
--Annotation: assign value 52
def advice_3_52: Prop := c.Advice 3 52 = 0
--Annotation: assign push_data_left 52
def advice_13_52: Prop := c.Advice 13 52 = 0
--Annotation: assign length 52
def advice_15_52: Prop := c.Advice 15 52 = 0
--Annotation: assign push_data_size 52
def advice_16_52: Prop := c.Advice 16 52 = 0
--Annotation: assign value_rlc 52
def advice_14_52: Prop := c.Advice 14 52 = 0
--Annotation: assign code_hash 52
def advice_4_52: Prop := c.Advice 4 52 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 52
def advice_5_52: Prop := c.Advice 5 52 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_52: Prop := c.Advice 17 52 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_52: Prop := c.Advice 18 52 = 1^(-1)
--Annotation: assign q_enable 53
def fixed_671: Prop := c.Fixed 0 53 = 1
--Annotation: assign q_first 53
def fixed_672: Prop := c.Fixed 1 53 = 0
--Annotation: assign q_last 53
def fixed_673: Prop := c.Fixed 2 53 = 0
--Annotation: assign tag 53
def advice_0_53: Prop := c.Advice 0 53 = 0
--Annotation: assign index 53
def advice_1_53: Prop := c.Advice 1 53 = 0
--Annotation: assign is_code 53
def advice_2_53: Prop := c.Advice 2 53 = 0
--Annotation: assign value 53
def advice_3_53: Prop := c.Advice 3 53 = 0
--Annotation: assign push_data_left 53
def advice_13_53: Prop := c.Advice 13 53 = 0
--Annotation: assign length 53
def advice_15_53: Prop := c.Advice 15 53 = 0
--Annotation: assign push_data_size 53
def advice_16_53: Prop := c.Advice 16 53 = 0
--Annotation: assign value_rlc 53
def advice_14_53: Prop := c.Advice 14 53 = 0
--Annotation: assign code_hash 53
def advice_4_53: Prop := c.Advice 4 53 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 53
def advice_5_53: Prop := c.Advice 5 53 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_53: Prop := c.Advice 17 53 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_53: Prop := c.Advice 18 53 = 1^(-1)
--Annotation: assign q_enable 54
def fixed_674: Prop := c.Fixed 0 54 = 1
--Annotation: assign q_first 54
def fixed_675: Prop := c.Fixed 1 54 = 0
--Annotation: assign q_last 54
def fixed_676: Prop := c.Fixed 2 54 = 0
--Annotation: assign tag 54
def advice_0_54: Prop := c.Advice 0 54 = 0
--Annotation: assign index 54
def advice_1_54: Prop := c.Advice 1 54 = 0
--Annotation: assign is_code 54
def advice_2_54: Prop := c.Advice 2 54 = 0
--Annotation: assign value 54
def advice_3_54: Prop := c.Advice 3 54 = 0
--Annotation: assign push_data_left 54
def advice_13_54: Prop := c.Advice 13 54 = 0
--Annotation: assign length 54
def advice_15_54: Prop := c.Advice 15 54 = 0
--Annotation: assign push_data_size 54
def advice_16_54: Prop := c.Advice 16 54 = 0
--Annotation: assign value_rlc 54
def advice_14_54: Prop := c.Advice 14 54 = 0
--Annotation: assign code_hash 54
def advice_4_54: Prop := c.Advice 4 54 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 54
def advice_5_54: Prop := c.Advice 5 54 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_54: Prop := c.Advice 17 54 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_54: Prop := c.Advice 18 54 = 1^(-1)
--Annotation: assign q_enable 55
def fixed_677: Prop := c.Fixed 0 55 = 1
--Annotation: assign q_first 55
def fixed_678: Prop := c.Fixed 1 55 = 0
--Annotation: assign q_last 55
def fixed_679: Prop := c.Fixed 2 55 = 0
--Annotation: assign tag 55
def advice_0_55: Prop := c.Advice 0 55 = 0
--Annotation: assign index 55
def advice_1_55: Prop := c.Advice 1 55 = 0
--Annotation: assign is_code 55
def advice_2_55: Prop := c.Advice 2 55 = 0
--Annotation: assign value 55
def advice_3_55: Prop := c.Advice 3 55 = 0
--Annotation: assign push_data_left 55
def advice_13_55: Prop := c.Advice 13 55 = 0
--Annotation: assign length 55
def advice_15_55: Prop := c.Advice 15 55 = 0
--Annotation: assign push_data_size 55
def advice_16_55: Prop := c.Advice 16 55 = 0
--Annotation: assign value_rlc 55
def advice_14_55: Prop := c.Advice 14 55 = 0
--Annotation: assign code_hash 55
def advice_4_55: Prop := c.Advice 4 55 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 55
def advice_5_55: Prop := c.Advice 5 55 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_55: Prop := c.Advice 17 55 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_55: Prop := c.Advice 18 55 = 1^(-1)
--Annotation: assign q_enable 56
def fixed_680: Prop := c.Fixed 0 56 = 1
--Annotation: assign q_first 56
def fixed_681: Prop := c.Fixed 1 56 = 0
--Annotation: assign q_last 56
def fixed_682: Prop := c.Fixed 2 56 = 0
--Annotation: assign tag 56
def advice_0_56: Prop := c.Advice 0 56 = 0
--Annotation: assign index 56
def advice_1_56: Prop := c.Advice 1 56 = 0
--Annotation: assign is_code 56
def advice_2_56: Prop := c.Advice 2 56 = 0
--Annotation: assign value 56
def advice_3_56: Prop := c.Advice 3 56 = 0
--Annotation: assign push_data_left 56
def advice_13_56: Prop := c.Advice 13 56 = 0
--Annotation: assign length 56
def advice_15_56: Prop := c.Advice 15 56 = 0
--Annotation: assign push_data_size 56
def advice_16_56: Prop := c.Advice 16 56 = 0
--Annotation: assign value_rlc 56
def advice_14_56: Prop := c.Advice 14 56 = 0
--Annotation: assign code_hash 56
def advice_4_56: Prop := c.Advice 4 56 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 56
def advice_5_56: Prop := c.Advice 5 56 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_56: Prop := c.Advice 17 56 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_56: Prop := c.Advice 18 56 = 1^(-1)
--Annotation: assign q_enable 57
def fixed_683: Prop := c.Fixed 0 57 = 1
--Annotation: assign q_first 57
def fixed_684: Prop := c.Fixed 1 57 = 0
--Annotation: assign q_last 57
def fixed_685: Prop := c.Fixed 2 57 = 0
--Annotation: assign tag 57
def advice_0_57: Prop := c.Advice 0 57 = 0
--Annotation: assign index 57
def advice_1_57: Prop := c.Advice 1 57 = 0
--Annotation: assign is_code 57
def advice_2_57: Prop := c.Advice 2 57 = 0
--Annotation: assign value 57
def advice_3_57: Prop := c.Advice 3 57 = 0
--Annotation: assign push_data_left 57
def advice_13_57: Prop := c.Advice 13 57 = 0
--Annotation: assign length 57
def advice_15_57: Prop := c.Advice 15 57 = 0
--Annotation: assign push_data_size 57
def advice_16_57: Prop := c.Advice 16 57 = 0
--Annotation: assign value_rlc 57
def advice_14_57: Prop := c.Advice 14 57 = 0
--Annotation: assign code_hash 57
def advice_4_57: Prop := c.Advice 4 57 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 57
def advice_5_57: Prop := c.Advice 5 57 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_57: Prop := c.Advice 17 57 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_57: Prop := c.Advice 18 57 = 1^(-1)
--Annotation: assign q_enable 58
def fixed_686: Prop := c.Fixed 0 58 = 1
--Annotation: assign q_first 58
def fixed_687: Prop := c.Fixed 1 58 = 0
--Annotation: assign q_last 58
def fixed_688: Prop := c.Fixed 2 58 = 0
--Annotation: assign tag 58
def advice_0_58: Prop := c.Advice 0 58 = 0
--Annotation: assign index 58
def advice_1_58: Prop := c.Advice 1 58 = 0
--Annotation: assign is_code 58
def advice_2_58: Prop := c.Advice 2 58 = 0
--Annotation: assign value 58
def advice_3_58: Prop := c.Advice 3 58 = 0
--Annotation: assign push_data_left 58
def advice_13_58: Prop := c.Advice 13 58 = 0
--Annotation: assign length 58
def advice_15_58: Prop := c.Advice 15 58 = 0
--Annotation: assign push_data_size 58
def advice_16_58: Prop := c.Advice 16 58 = 0
--Annotation: assign value_rlc 58
def advice_14_58: Prop := c.Advice 14 58 = 0
--Annotation: assign code_hash 58
def advice_4_58: Prop := c.Advice 4 58 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 58
def advice_5_58: Prop := c.Advice 5 58 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_58: Prop := c.Advice 17 58 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_58: Prop := c.Advice 18 58 = 1^(-1)
--Annotation: assign q_enable 59
def fixed_689: Prop := c.Fixed 0 59 = 1
--Annotation: assign q_first 59
def fixed_690: Prop := c.Fixed 1 59 = 0
--Annotation: assign q_last 59
def fixed_691: Prop := c.Fixed 2 59 = 0
--Annotation: assign tag 59
def advice_0_59: Prop := c.Advice 0 59 = 0
--Annotation: assign index 59
def advice_1_59: Prop := c.Advice 1 59 = 0
--Annotation: assign is_code 59
def advice_2_59: Prop := c.Advice 2 59 = 0
--Annotation: assign value 59
def advice_3_59: Prop := c.Advice 3 59 = 0
--Annotation: assign push_data_left 59
def advice_13_59: Prop := c.Advice 13 59 = 0
--Annotation: assign length 59
def advice_15_59: Prop := c.Advice 15 59 = 0
--Annotation: assign push_data_size 59
def advice_16_59: Prop := c.Advice 16 59 = 0
--Annotation: assign value_rlc 59
def advice_14_59: Prop := c.Advice 14 59 = 0
--Annotation: assign code_hash 59
def advice_4_59: Prop := c.Advice 4 59 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 59
def advice_5_59: Prop := c.Advice 5 59 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_59: Prop := c.Advice 17 59 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_59: Prop := c.Advice 18 59 = 1^(-1)
--Annotation: assign q_enable 60
def fixed_692: Prop := c.Fixed 0 60 = 1
--Annotation: assign q_first 60
def fixed_693: Prop := c.Fixed 1 60 = 0
--Annotation: assign q_last 60
def fixed_694: Prop := c.Fixed 2 60 = 0
--Annotation: assign tag 60
def advice_0_60: Prop := c.Advice 0 60 = 0
--Annotation: assign index 60
def advice_1_60: Prop := c.Advice 1 60 = 0
--Annotation: assign is_code 60
def advice_2_60: Prop := c.Advice 2 60 = 0
--Annotation: assign value 60
def advice_3_60: Prop := c.Advice 3 60 = 0
--Annotation: assign push_data_left 60
def advice_13_60: Prop := c.Advice 13 60 = 0
--Annotation: assign length 60
def advice_15_60: Prop := c.Advice 15 60 = 0
--Annotation: assign push_data_size 60
def advice_16_60: Prop := c.Advice 16 60 = 0
--Annotation: assign value_rlc 60
def advice_14_60: Prop := c.Advice 14 60 = 0
--Annotation: assign code_hash 60
def advice_4_60: Prop := c.Advice 4 60 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 60
def advice_5_60: Prop := c.Advice 5 60 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_60: Prop := c.Advice 17 60 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_60: Prop := c.Advice 18 60 = 1^(-1)
--Annotation: assign q_enable 61
def fixed_695: Prop := c.Fixed 0 61 = 1
--Annotation: assign q_first 61
def fixed_696: Prop := c.Fixed 1 61 = 0
--Annotation: assign q_last 61
def fixed_697: Prop := c.Fixed 2 61 = 0
--Annotation: assign tag 61
def advice_0_61: Prop := c.Advice 0 61 = 0
--Annotation: assign index 61
def advice_1_61: Prop := c.Advice 1 61 = 0
--Annotation: assign is_code 61
def advice_2_61: Prop := c.Advice 2 61 = 0
--Annotation: assign value 61
def advice_3_61: Prop := c.Advice 3 61 = 0
--Annotation: assign push_data_left 61
def advice_13_61: Prop := c.Advice 13 61 = 0
--Annotation: assign length 61
def advice_15_61: Prop := c.Advice 15 61 = 0
--Annotation: assign push_data_size 61
def advice_16_61: Prop := c.Advice 16 61 = 0
--Annotation: assign value_rlc 61
def advice_14_61: Prop := c.Advice 14 61 = 0
--Annotation: assign code_hash 61
def advice_4_61: Prop := c.Advice 4 61 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 61
def advice_5_61: Prop := c.Advice 5 61 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_61: Prop := c.Advice 17 61 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_61: Prop := c.Advice 18 61 = 1^(-1)
--Annotation: assign q_enable 62
def fixed_698: Prop := c.Fixed 0 62 = 1
--Annotation: assign q_first 62
def fixed_699: Prop := c.Fixed 1 62 = 0
--Annotation: assign q_last 62
def fixed_700: Prop := c.Fixed 2 62 = 0
--Annotation: assign tag 62
def advice_0_62: Prop := c.Advice 0 62 = 0
--Annotation: assign index 62
def advice_1_62: Prop := c.Advice 1 62 = 0
--Annotation: assign is_code 62
def advice_2_62: Prop := c.Advice 2 62 = 0
--Annotation: assign value 62
def advice_3_62: Prop := c.Advice 3 62 = 0
--Annotation: assign push_data_left 62
def advice_13_62: Prop := c.Advice 13 62 = 0
--Annotation: assign length 62
def advice_15_62: Prop := c.Advice 15 62 = 0
--Annotation: assign push_data_size 62
def advice_16_62: Prop := c.Advice 16 62 = 0
--Annotation: assign value_rlc 62
def advice_14_62: Prop := c.Advice 14 62 = 0
--Annotation: assign code_hash 62
def advice_4_62: Prop := c.Advice 4 62 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 62
def advice_5_62: Prop := c.Advice 5 62 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_62: Prop := c.Advice 17 62 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_62: Prop := c.Advice 18 62 = 1^(-1)
--Annotation: assign q_enable 63
def fixed_701: Prop := c.Fixed 0 63 = 1
--Annotation: assign q_first 63
def fixed_702: Prop := c.Fixed 1 63 = 0
--Annotation: assign q_last 63
def fixed_703: Prop := c.Fixed 2 63 = 0
--Annotation: assign tag 63
def advice_0_63: Prop := c.Advice 0 63 = 0
--Annotation: assign index 63
def advice_1_63: Prop := c.Advice 1 63 = 0
--Annotation: assign is_code 63
def advice_2_63: Prop := c.Advice 2 63 = 0
--Annotation: assign value 63
def advice_3_63: Prop := c.Advice 3 63 = 0
--Annotation: assign push_data_left 63
def advice_13_63: Prop := c.Advice 13 63 = 0
--Annotation: assign length 63
def advice_15_63: Prop := c.Advice 15 63 = 0
--Annotation: assign push_data_size 63
def advice_16_63: Prop := c.Advice 16 63 = 0
--Annotation: assign value_rlc 63
def advice_14_63: Prop := c.Advice 14 63 = 0
--Annotation: assign code_hash 63
def advice_4_63: Prop := c.Advice 4 63 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 63
def advice_5_63: Prop := c.Advice 5 63 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_63: Prop := c.Advice 17 63 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_63: Prop := c.Advice 18 63 = 1^(-1)
--Annotation: assign q_enable 64
def fixed_704: Prop := c.Fixed 0 64 = 1
--Annotation: assign q_first 64
def fixed_705: Prop := c.Fixed 1 64 = 0
--Annotation: assign q_last 64
def fixed_706: Prop := c.Fixed 2 64 = 0
--Annotation: assign tag 64
def advice_0_64: Prop := c.Advice 0 64 = 0
--Annotation: assign index 64
def advice_1_64: Prop := c.Advice 1 64 = 0
--Annotation: assign is_code 64
def advice_2_64: Prop := c.Advice 2 64 = 0
--Annotation: assign value 64
def advice_3_64: Prop := c.Advice 3 64 = 0
--Annotation: assign push_data_left 64
def advice_13_64: Prop := c.Advice 13 64 = 0
--Annotation: assign length 64
def advice_15_64: Prop := c.Advice 15 64 = 0
--Annotation: assign push_data_size 64
def advice_16_64: Prop := c.Advice 16 64 = 0
--Annotation: assign value_rlc 64
def advice_14_64: Prop := c.Advice 14 64 = 0
--Annotation: assign code_hash 64
def advice_4_64: Prop := c.Advice 4 64 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 64
def advice_5_64: Prop := c.Advice 5 64 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_64: Prop := c.Advice 17 64 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_64: Prop := c.Advice 18 64 = 1^(-1)
--Annotation: assign q_enable 65
def fixed_707: Prop := c.Fixed 0 65 = 1
--Annotation: assign q_first 65
def fixed_708: Prop := c.Fixed 1 65 = 0
--Annotation: assign q_last 65
def fixed_709: Prop := c.Fixed 2 65 = 0
--Annotation: assign tag 65
def advice_0_65: Prop := c.Advice 0 65 = 0
--Annotation: assign index 65
def advice_1_65: Prop := c.Advice 1 65 = 0
--Annotation: assign is_code 65
def advice_2_65: Prop := c.Advice 2 65 = 0
--Annotation: assign value 65
def advice_3_65: Prop := c.Advice 3 65 = 0
--Annotation: assign push_data_left 65
def advice_13_65: Prop := c.Advice 13 65 = 0
--Annotation: assign length 65
def advice_15_65: Prop := c.Advice 15 65 = 0
--Annotation: assign push_data_size 65
def advice_16_65: Prop := c.Advice 16 65 = 0
--Annotation: assign value_rlc 65
def advice_14_65: Prop := c.Advice 14 65 = 0
--Annotation: assign code_hash 65
def advice_4_65: Prop := c.Advice 4 65 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 65
def advice_5_65: Prop := c.Advice 5 65 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_65: Prop := c.Advice 17 65 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_65: Prop := c.Advice 18 65 = 1^(-1)
--Annotation: assign q_enable 66
def fixed_710: Prop := c.Fixed 0 66 = 1
--Annotation: assign q_first 66
def fixed_711: Prop := c.Fixed 1 66 = 0
--Annotation: assign q_last 66
def fixed_712: Prop := c.Fixed 2 66 = 0
--Annotation: assign tag 66
def advice_0_66: Prop := c.Advice 0 66 = 0
--Annotation: assign index 66
def advice_1_66: Prop := c.Advice 1 66 = 0
--Annotation: assign is_code 66
def advice_2_66: Prop := c.Advice 2 66 = 0
--Annotation: assign value 66
def advice_3_66: Prop := c.Advice 3 66 = 0
--Annotation: assign push_data_left 66
def advice_13_66: Prop := c.Advice 13 66 = 0
--Annotation: assign length 66
def advice_15_66: Prop := c.Advice 15 66 = 0
--Annotation: assign push_data_size 66
def advice_16_66: Prop := c.Advice 16 66 = 0
--Annotation: assign value_rlc 66
def advice_14_66: Prop := c.Advice 14 66 = 0
--Annotation: assign code_hash 66
def advice_4_66: Prop := c.Advice 4 66 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 66
def advice_5_66: Prop := c.Advice 5 66 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_66: Prop := c.Advice 17 66 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_66: Prop := c.Advice 18 66 = 1^(-1)
--Annotation: assign q_enable 67
def fixed_713: Prop := c.Fixed 0 67 = 1
--Annotation: assign q_first 67
def fixed_714: Prop := c.Fixed 1 67 = 0
--Annotation: assign q_last 67
def fixed_715: Prop := c.Fixed 2 67 = 0
--Annotation: assign tag 67
def advice_0_67: Prop := c.Advice 0 67 = 0
--Annotation: assign index 67
def advice_1_67: Prop := c.Advice 1 67 = 0
--Annotation: assign is_code 67
def advice_2_67: Prop := c.Advice 2 67 = 0
--Annotation: assign value 67
def advice_3_67: Prop := c.Advice 3 67 = 0
--Annotation: assign push_data_left 67
def advice_13_67: Prop := c.Advice 13 67 = 0
--Annotation: assign length 67
def advice_15_67: Prop := c.Advice 15 67 = 0
--Annotation: assign push_data_size 67
def advice_16_67: Prop := c.Advice 16 67 = 0
--Annotation: assign value_rlc 67
def advice_14_67: Prop := c.Advice 14 67 = 0
--Annotation: assign code_hash 67
def advice_4_67: Prop := c.Advice 4 67 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 67
def advice_5_67: Prop := c.Advice 5 67 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_67: Prop := c.Advice 17 67 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_67: Prop := c.Advice 18 67 = 1^(-1)
--Annotation: assign q_enable 68
def fixed_716: Prop := c.Fixed 0 68 = 1
--Annotation: assign q_first 68
def fixed_717: Prop := c.Fixed 1 68 = 0
--Annotation: assign q_last 68
def fixed_718: Prop := c.Fixed 2 68 = 0
--Annotation: assign tag 68
def advice_0_68: Prop := c.Advice 0 68 = 0
--Annotation: assign index 68
def advice_1_68: Prop := c.Advice 1 68 = 0
--Annotation: assign is_code 68
def advice_2_68: Prop := c.Advice 2 68 = 0
--Annotation: assign value 68
def advice_3_68: Prop := c.Advice 3 68 = 0
--Annotation: assign push_data_left 68
def advice_13_68: Prop := c.Advice 13 68 = 0
--Annotation: assign length 68
def advice_15_68: Prop := c.Advice 15 68 = 0
--Annotation: assign push_data_size 68
def advice_16_68: Prop := c.Advice 16 68 = 0
--Annotation: assign value_rlc 68
def advice_14_68: Prop := c.Advice 14 68 = 0
--Annotation: assign code_hash 68
def advice_4_68: Prop := c.Advice 4 68 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 68
def advice_5_68: Prop := c.Advice 5 68 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_68: Prop := c.Advice 17 68 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_68: Prop := c.Advice 18 68 = 1^(-1)
--Annotation: assign q_enable 69
def fixed_719: Prop := c.Fixed 0 69 = 1
--Annotation: assign q_first 69
def fixed_720: Prop := c.Fixed 1 69 = 0
--Annotation: assign q_last 69
def fixed_721: Prop := c.Fixed 2 69 = 0
--Annotation: assign tag 69
def advice_0_69: Prop := c.Advice 0 69 = 0
--Annotation: assign index 69
def advice_1_69: Prop := c.Advice 1 69 = 0
--Annotation: assign is_code 69
def advice_2_69: Prop := c.Advice 2 69 = 0
--Annotation: assign value 69
def advice_3_69: Prop := c.Advice 3 69 = 0
--Annotation: assign push_data_left 69
def advice_13_69: Prop := c.Advice 13 69 = 0
--Annotation: assign length 69
def advice_15_69: Prop := c.Advice 15 69 = 0
--Annotation: assign push_data_size 69
def advice_16_69: Prop := c.Advice 16 69 = 0
--Annotation: assign value_rlc 69
def advice_14_69: Prop := c.Advice 14 69 = 0
--Annotation: assign code_hash 69
def advice_4_69: Prop := c.Advice 4 69 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 69
def advice_5_69: Prop := c.Advice 5 69 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_69: Prop := c.Advice 17 69 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_69: Prop := c.Advice 18 69 = 1^(-1)
--Annotation: assign q_enable 70
def fixed_722: Prop := c.Fixed 0 70 = 1
--Annotation: assign q_first 70
def fixed_723: Prop := c.Fixed 1 70 = 0
--Annotation: assign q_last 70
def fixed_724: Prop := c.Fixed 2 70 = 0
--Annotation: assign tag 70
def advice_0_70: Prop := c.Advice 0 70 = 0
--Annotation: assign index 70
def advice_1_70: Prop := c.Advice 1 70 = 0
--Annotation: assign is_code 70
def advice_2_70: Prop := c.Advice 2 70 = 0
--Annotation: assign value 70
def advice_3_70: Prop := c.Advice 3 70 = 0
--Annotation: assign push_data_left 70
def advice_13_70: Prop := c.Advice 13 70 = 0
--Annotation: assign length 70
def advice_15_70: Prop := c.Advice 15 70 = 0
--Annotation: assign push_data_size 70
def advice_16_70: Prop := c.Advice 16 70 = 0
--Annotation: assign value_rlc 70
def advice_14_70: Prop := c.Advice 14 70 = 0
--Annotation: assign code_hash 70
def advice_4_70: Prop := c.Advice 4 70 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 70
def advice_5_70: Prop := c.Advice 5 70 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_70: Prop := c.Advice 17 70 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_70: Prop := c.Advice 18 70 = 1^(-1)
--Annotation: assign q_enable 71
def fixed_725: Prop := c.Fixed 0 71 = 1
--Annotation: assign q_first 71
def fixed_726: Prop := c.Fixed 1 71 = 0
--Annotation: assign q_last 71
def fixed_727: Prop := c.Fixed 2 71 = 0
--Annotation: assign tag 71
def advice_0_71: Prop := c.Advice 0 71 = 0
--Annotation: assign index 71
def advice_1_71: Prop := c.Advice 1 71 = 0
--Annotation: assign is_code 71
def advice_2_71: Prop := c.Advice 2 71 = 0
--Annotation: assign value 71
def advice_3_71: Prop := c.Advice 3 71 = 0
--Annotation: assign push_data_left 71
def advice_13_71: Prop := c.Advice 13 71 = 0
--Annotation: assign length 71
def advice_15_71: Prop := c.Advice 15 71 = 0
--Annotation: assign push_data_size 71
def advice_16_71: Prop := c.Advice 16 71 = 0
--Annotation: assign value_rlc 71
def advice_14_71: Prop := c.Advice 14 71 = 0
--Annotation: assign code_hash 71
def advice_4_71: Prop := c.Advice 4 71 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 71
def advice_5_71: Prop := c.Advice 5 71 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_71: Prop := c.Advice 17 71 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_71: Prop := c.Advice 18 71 = 1^(-1)
--Annotation: assign q_enable 72
def fixed_728: Prop := c.Fixed 0 72 = 1
--Annotation: assign q_first 72
def fixed_729: Prop := c.Fixed 1 72 = 0
--Annotation: assign q_last 72
def fixed_730: Prop := c.Fixed 2 72 = 0
--Annotation: assign tag 72
def advice_0_72: Prop := c.Advice 0 72 = 0
--Annotation: assign index 72
def advice_1_72: Prop := c.Advice 1 72 = 0
--Annotation: assign is_code 72
def advice_2_72: Prop := c.Advice 2 72 = 0
--Annotation: assign value 72
def advice_3_72: Prop := c.Advice 3 72 = 0
--Annotation: assign push_data_left 72
def advice_13_72: Prop := c.Advice 13 72 = 0
--Annotation: assign length 72
def advice_15_72: Prop := c.Advice 15 72 = 0
--Annotation: assign push_data_size 72
def advice_16_72: Prop := c.Advice 16 72 = 0
--Annotation: assign value_rlc 72
def advice_14_72: Prop := c.Advice 14 72 = 0
--Annotation: assign code_hash 72
def advice_4_72: Prop := c.Advice 4 72 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 72
def advice_5_72: Prop := c.Advice 5 72 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_72: Prop := c.Advice 17 72 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_72: Prop := c.Advice 18 72 = 1^(-1)
--Annotation: assign q_enable 73
def fixed_731: Prop := c.Fixed 0 73 = 1
--Annotation: assign q_first 73
def fixed_732: Prop := c.Fixed 1 73 = 0
--Annotation: assign q_last 73
def fixed_733: Prop := c.Fixed 2 73 = 0
--Annotation: assign tag 73
def advice_0_73: Prop := c.Advice 0 73 = 0
--Annotation: assign index 73
def advice_1_73: Prop := c.Advice 1 73 = 0
--Annotation: assign is_code 73
def advice_2_73: Prop := c.Advice 2 73 = 0
--Annotation: assign value 73
def advice_3_73: Prop := c.Advice 3 73 = 0
--Annotation: assign push_data_left 73
def advice_13_73: Prop := c.Advice 13 73 = 0
--Annotation: assign length 73
def advice_15_73: Prop := c.Advice 15 73 = 0
--Annotation: assign push_data_size 73
def advice_16_73: Prop := c.Advice 16 73 = 0
--Annotation: assign value_rlc 73
def advice_14_73: Prop := c.Advice 14 73 = 0
--Annotation: assign code_hash 73
def advice_4_73: Prop := c.Advice 4 73 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 73
def advice_5_73: Prop := c.Advice 5 73 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_73: Prop := c.Advice 17 73 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_73: Prop := c.Advice 18 73 = 1^(-1)
--Annotation: assign q_enable 74
def fixed_734: Prop := c.Fixed 0 74 = 1
--Annotation: assign q_first 74
def fixed_735: Prop := c.Fixed 1 74 = 0
--Annotation: assign q_last 74
def fixed_736: Prop := c.Fixed 2 74 = 0
--Annotation: assign tag 74
def advice_0_74: Prop := c.Advice 0 74 = 0
--Annotation: assign index 74
def advice_1_74: Prop := c.Advice 1 74 = 0
--Annotation: assign is_code 74
def advice_2_74: Prop := c.Advice 2 74 = 0
--Annotation: assign value 74
def advice_3_74: Prop := c.Advice 3 74 = 0
--Annotation: assign push_data_left 74
def advice_13_74: Prop := c.Advice 13 74 = 0
--Annotation: assign length 74
def advice_15_74: Prop := c.Advice 15 74 = 0
--Annotation: assign push_data_size 74
def advice_16_74: Prop := c.Advice 16 74 = 0
--Annotation: assign value_rlc 74
def advice_14_74: Prop := c.Advice 14 74 = 0
--Annotation: assign code_hash 74
def advice_4_74: Prop := c.Advice 4 74 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 74
def advice_5_74: Prop := c.Advice 5 74 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_74: Prop := c.Advice 17 74 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_74: Prop := c.Advice 18 74 = 1^(-1)
--Annotation: assign q_enable 75
def fixed_737: Prop := c.Fixed 0 75 = 1
--Annotation: assign q_first 75
def fixed_738: Prop := c.Fixed 1 75 = 0
--Annotation: assign q_last 75
def fixed_739: Prop := c.Fixed 2 75 = 0
--Annotation: assign tag 75
def advice_0_75: Prop := c.Advice 0 75 = 0
--Annotation: assign index 75
def advice_1_75: Prop := c.Advice 1 75 = 0
--Annotation: assign is_code 75
def advice_2_75: Prop := c.Advice 2 75 = 0
--Annotation: assign value 75
def advice_3_75: Prop := c.Advice 3 75 = 0
--Annotation: assign push_data_left 75
def advice_13_75: Prop := c.Advice 13 75 = 0
--Annotation: assign length 75
def advice_15_75: Prop := c.Advice 15 75 = 0
--Annotation: assign push_data_size 75
def advice_16_75: Prop := c.Advice 16 75 = 0
--Annotation: assign value_rlc 75
def advice_14_75: Prop := c.Advice 14 75 = 0
--Annotation: assign code_hash 75
def advice_4_75: Prop := c.Advice 4 75 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 75
def advice_5_75: Prop := c.Advice 5 75 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_75: Prop := c.Advice 17 75 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_75: Prop := c.Advice 18 75 = 1^(-1)
--Annotation: assign q_enable 76
def fixed_740: Prop := c.Fixed 0 76 = 1
--Annotation: assign q_first 76
def fixed_741: Prop := c.Fixed 1 76 = 0
--Annotation: assign q_last 76
def fixed_742: Prop := c.Fixed 2 76 = 0
--Annotation: assign tag 76
def advice_0_76: Prop := c.Advice 0 76 = 0
--Annotation: assign index 76
def advice_1_76: Prop := c.Advice 1 76 = 0
--Annotation: assign is_code 76
def advice_2_76: Prop := c.Advice 2 76 = 0
--Annotation: assign value 76
def advice_3_76: Prop := c.Advice 3 76 = 0
--Annotation: assign push_data_left 76
def advice_13_76: Prop := c.Advice 13 76 = 0
--Annotation: assign length 76
def advice_15_76: Prop := c.Advice 15 76 = 0
--Annotation: assign push_data_size 76
def advice_16_76: Prop := c.Advice 16 76 = 0
--Annotation: assign value_rlc 76
def advice_14_76: Prop := c.Advice 14 76 = 0
--Annotation: assign code_hash 76
def advice_4_76: Prop := c.Advice 4 76 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 76
def advice_5_76: Prop := c.Advice 5 76 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_76: Prop := c.Advice 17 76 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_76: Prop := c.Advice 18 76 = 1^(-1)
--Annotation: assign q_enable 77
def fixed_743: Prop := c.Fixed 0 77 = 1
--Annotation: assign q_first 77
def fixed_744: Prop := c.Fixed 1 77 = 0
--Annotation: assign q_last 77
def fixed_745: Prop := c.Fixed 2 77 = 0
--Annotation: assign tag 77
def advice_0_77: Prop := c.Advice 0 77 = 0
--Annotation: assign index 77
def advice_1_77: Prop := c.Advice 1 77 = 0
--Annotation: assign is_code 77
def advice_2_77: Prop := c.Advice 2 77 = 0
--Annotation: assign value 77
def advice_3_77: Prop := c.Advice 3 77 = 0
--Annotation: assign push_data_left 77
def advice_13_77: Prop := c.Advice 13 77 = 0
--Annotation: assign length 77
def advice_15_77: Prop := c.Advice 15 77 = 0
--Annotation: assign push_data_size 77
def advice_16_77: Prop := c.Advice 16 77 = 0
--Annotation: assign value_rlc 77
def advice_14_77: Prop := c.Advice 14 77 = 0
--Annotation: assign code_hash 77
def advice_4_77: Prop := c.Advice 4 77 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 77
def advice_5_77: Prop := c.Advice 5 77 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_77: Prop := c.Advice 17 77 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_77: Prop := c.Advice 18 77 = 1^(-1)
--Annotation: assign q_enable 78
def fixed_746: Prop := c.Fixed 0 78 = 1
--Annotation: assign q_first 78
def fixed_747: Prop := c.Fixed 1 78 = 0
--Annotation: assign q_last 78
def fixed_748: Prop := c.Fixed 2 78 = 0
--Annotation: assign tag 78
def advice_0_78: Prop := c.Advice 0 78 = 0
--Annotation: assign index 78
def advice_1_78: Prop := c.Advice 1 78 = 0
--Annotation: assign is_code 78
def advice_2_78: Prop := c.Advice 2 78 = 0
--Annotation: assign value 78
def advice_3_78: Prop := c.Advice 3 78 = 0
--Annotation: assign push_data_left 78
def advice_13_78: Prop := c.Advice 13 78 = 0
--Annotation: assign length 78
def advice_15_78: Prop := c.Advice 15 78 = 0
--Annotation: assign push_data_size 78
def advice_16_78: Prop := c.Advice 16 78 = 0
--Annotation: assign value_rlc 78
def advice_14_78: Prop := c.Advice 14 78 = 0
--Annotation: assign code_hash 78
def advice_4_78: Prop := c.Advice 4 78 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 78
def advice_5_78: Prop := c.Advice 5 78 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_78: Prop := c.Advice 17 78 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_78: Prop := c.Advice 18 78 = 1^(-1)
--Annotation: assign q_enable 79
def fixed_749: Prop := c.Fixed 0 79 = 1
--Annotation: assign q_first 79
def fixed_750: Prop := c.Fixed 1 79 = 0
--Annotation: assign q_last 79
def fixed_751: Prop := c.Fixed 2 79 = 0
--Annotation: assign tag 79
def advice_0_79: Prop := c.Advice 0 79 = 0
--Annotation: assign index 79
def advice_1_79: Prop := c.Advice 1 79 = 0
--Annotation: assign is_code 79
def advice_2_79: Prop := c.Advice 2 79 = 0
--Annotation: assign value 79
def advice_3_79: Prop := c.Advice 3 79 = 0
--Annotation: assign push_data_left 79
def advice_13_79: Prop := c.Advice 13 79 = 0
--Annotation: assign length 79
def advice_15_79: Prop := c.Advice 15 79 = 0
--Annotation: assign push_data_size 79
def advice_16_79: Prop := c.Advice 16 79 = 0
--Annotation: assign value_rlc 79
def advice_14_79: Prop := c.Advice 14 79 = 0
--Annotation: assign code_hash 79
def advice_4_79: Prop := c.Advice 4 79 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 79
def advice_5_79: Prop := c.Advice 5 79 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_79: Prop := c.Advice 17 79 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_79: Prop := c.Advice 18 79 = 1^(-1)
--Annotation: assign q_enable 80
def fixed_752: Prop := c.Fixed 0 80 = 1
--Annotation: assign q_first 80
def fixed_753: Prop := c.Fixed 1 80 = 0
--Annotation: assign q_last 80
def fixed_754: Prop := c.Fixed 2 80 = 0
--Annotation: assign tag 80
def advice_0_80: Prop := c.Advice 0 80 = 0
--Annotation: assign index 80
def advice_1_80: Prop := c.Advice 1 80 = 0
--Annotation: assign is_code 80
def advice_2_80: Prop := c.Advice 2 80 = 0
--Annotation: assign value 80
def advice_3_80: Prop := c.Advice 3 80 = 0
--Annotation: assign push_data_left 80
def advice_13_80: Prop := c.Advice 13 80 = 0
--Annotation: assign length 80
def advice_15_80: Prop := c.Advice 15 80 = 0
--Annotation: assign push_data_size 80
def advice_16_80: Prop := c.Advice 16 80 = 0
--Annotation: assign value_rlc 80
def advice_14_80: Prop := c.Advice 14 80 = 0
--Annotation: assign code_hash 80
def advice_4_80: Prop := c.Advice 4 80 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 80
def advice_5_80: Prop := c.Advice 5 80 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_80: Prop := c.Advice 17 80 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_80: Prop := c.Advice 18 80 = 1^(-1)
--Annotation: assign q_enable 81
def fixed_755: Prop := c.Fixed 0 81 = 1
--Annotation: assign q_first 81
def fixed_756: Prop := c.Fixed 1 81 = 0
--Annotation: assign q_last 81
def fixed_757: Prop := c.Fixed 2 81 = 0
--Annotation: assign tag 81
def advice_0_81: Prop := c.Advice 0 81 = 0
--Annotation: assign index 81
def advice_1_81: Prop := c.Advice 1 81 = 0
--Annotation: assign is_code 81
def advice_2_81: Prop := c.Advice 2 81 = 0
--Annotation: assign value 81
def advice_3_81: Prop := c.Advice 3 81 = 0
--Annotation: assign push_data_left 81
def advice_13_81: Prop := c.Advice 13 81 = 0
--Annotation: assign length 81
def advice_15_81: Prop := c.Advice 15 81 = 0
--Annotation: assign push_data_size 81
def advice_16_81: Prop := c.Advice 16 81 = 0
--Annotation: assign value_rlc 81
def advice_14_81: Prop := c.Advice 14 81 = 0
--Annotation: assign code_hash 81
def advice_4_81: Prop := c.Advice 4 81 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 81
def advice_5_81: Prop := c.Advice 5 81 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_81: Prop := c.Advice 17 81 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_81: Prop := c.Advice 18 81 = 1^(-1)
--Annotation: assign q_enable 82
def fixed_758: Prop := c.Fixed 0 82 = 1
--Annotation: assign q_first 82
def fixed_759: Prop := c.Fixed 1 82 = 0
--Annotation: assign q_last 82
def fixed_760: Prop := c.Fixed 2 82 = 0
--Annotation: assign tag 82
def advice_0_82: Prop := c.Advice 0 82 = 0
--Annotation: assign index 82
def advice_1_82: Prop := c.Advice 1 82 = 0
--Annotation: assign is_code 82
def advice_2_82: Prop := c.Advice 2 82 = 0
--Annotation: assign value 82
def advice_3_82: Prop := c.Advice 3 82 = 0
--Annotation: assign push_data_left 82
def advice_13_82: Prop := c.Advice 13 82 = 0
--Annotation: assign length 82
def advice_15_82: Prop := c.Advice 15 82 = 0
--Annotation: assign push_data_size 82
def advice_16_82: Prop := c.Advice 16 82 = 0
--Annotation: assign value_rlc 82
def advice_14_82: Prop := c.Advice 14 82 = 0
--Annotation: assign code_hash 82
def advice_4_82: Prop := c.Advice 4 82 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 82
def advice_5_82: Prop := c.Advice 5 82 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_82: Prop := c.Advice 17 82 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_82: Prop := c.Advice 18 82 = 1^(-1)
--Annotation: assign q_enable 83
def fixed_761: Prop := c.Fixed 0 83 = 1
--Annotation: assign q_first 83
def fixed_762: Prop := c.Fixed 1 83 = 0
--Annotation: assign q_last 83
def fixed_763: Prop := c.Fixed 2 83 = 0
--Annotation: assign tag 83
def advice_0_83: Prop := c.Advice 0 83 = 0
--Annotation: assign index 83
def advice_1_83: Prop := c.Advice 1 83 = 0
--Annotation: assign is_code 83
def advice_2_83: Prop := c.Advice 2 83 = 0
--Annotation: assign value 83
def advice_3_83: Prop := c.Advice 3 83 = 0
--Annotation: assign push_data_left 83
def advice_13_83: Prop := c.Advice 13 83 = 0
--Annotation: assign length 83
def advice_15_83: Prop := c.Advice 15 83 = 0
--Annotation: assign push_data_size 83
def advice_16_83: Prop := c.Advice 16 83 = 0
--Annotation: assign value_rlc 83
def advice_14_83: Prop := c.Advice 14 83 = 0
--Annotation: assign code_hash 83
def advice_4_83: Prop := c.Advice 4 83 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 83
def advice_5_83: Prop := c.Advice 5 83 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_83: Prop := c.Advice 17 83 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_83: Prop := c.Advice 18 83 = 1^(-1)
--Annotation: assign q_enable 84
def fixed_764: Prop := c.Fixed 0 84 = 1
--Annotation: assign q_first 84
def fixed_765: Prop := c.Fixed 1 84 = 0
--Annotation: assign q_last 84
def fixed_766: Prop := c.Fixed 2 84 = 0
--Annotation: assign tag 84
def advice_0_84: Prop := c.Advice 0 84 = 0
--Annotation: assign index 84
def advice_1_84: Prop := c.Advice 1 84 = 0
--Annotation: assign is_code 84
def advice_2_84: Prop := c.Advice 2 84 = 0
--Annotation: assign value 84
def advice_3_84: Prop := c.Advice 3 84 = 0
--Annotation: assign push_data_left 84
def advice_13_84: Prop := c.Advice 13 84 = 0
--Annotation: assign length 84
def advice_15_84: Prop := c.Advice 15 84 = 0
--Annotation: assign push_data_size 84
def advice_16_84: Prop := c.Advice 16 84 = 0
--Annotation: assign value_rlc 84
def advice_14_84: Prop := c.Advice 14 84 = 0
--Annotation: assign code_hash 84
def advice_4_84: Prop := c.Advice 4 84 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 84
def advice_5_84: Prop := c.Advice 5 84 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_84: Prop := c.Advice 17 84 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_84: Prop := c.Advice 18 84 = 1^(-1)
--Annotation: assign q_enable 85
def fixed_767: Prop := c.Fixed 0 85 = 1
--Annotation: assign q_first 85
def fixed_768: Prop := c.Fixed 1 85 = 0
--Annotation: assign q_last 85
def fixed_769: Prop := c.Fixed 2 85 = 0
--Annotation: assign tag 85
def advice_0_85: Prop := c.Advice 0 85 = 0
--Annotation: assign index 85
def advice_1_85: Prop := c.Advice 1 85 = 0
--Annotation: assign is_code 85
def advice_2_85: Prop := c.Advice 2 85 = 0
--Annotation: assign value 85
def advice_3_85: Prop := c.Advice 3 85 = 0
--Annotation: assign push_data_left 85
def advice_13_85: Prop := c.Advice 13 85 = 0
--Annotation: assign length 85
def advice_15_85: Prop := c.Advice 15 85 = 0
--Annotation: assign push_data_size 85
def advice_16_85: Prop := c.Advice 16 85 = 0
--Annotation: assign value_rlc 85
def advice_14_85: Prop := c.Advice 14 85 = 0
--Annotation: assign code_hash 85
def advice_4_85: Prop := c.Advice 4 85 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 85
def advice_5_85: Prop := c.Advice 5 85 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_85: Prop := c.Advice 17 85 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_85: Prop := c.Advice 18 85 = 1^(-1)
--Annotation: assign q_enable 86
def fixed_770: Prop := c.Fixed 0 86 = 1
--Annotation: assign q_first 86
def fixed_771: Prop := c.Fixed 1 86 = 0
--Annotation: assign q_last 86
def fixed_772: Prop := c.Fixed 2 86 = 0
--Annotation: assign tag 86
def advice_0_86: Prop := c.Advice 0 86 = 0
--Annotation: assign index 86
def advice_1_86: Prop := c.Advice 1 86 = 0
--Annotation: assign is_code 86
def advice_2_86: Prop := c.Advice 2 86 = 0
--Annotation: assign value 86
def advice_3_86: Prop := c.Advice 3 86 = 0
--Annotation: assign push_data_left 86
def advice_13_86: Prop := c.Advice 13 86 = 0
--Annotation: assign length 86
def advice_15_86: Prop := c.Advice 15 86 = 0
--Annotation: assign push_data_size 86
def advice_16_86: Prop := c.Advice 16 86 = 0
--Annotation: assign value_rlc 86
def advice_14_86: Prop := c.Advice 14 86 = 0
--Annotation: assign code_hash 86
def advice_4_86: Prop := c.Advice 4 86 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 86
def advice_5_86: Prop := c.Advice 5 86 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_86: Prop := c.Advice 17 86 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_86: Prop := c.Advice 18 86 = 1^(-1)
--Annotation: assign q_enable 87
def fixed_773: Prop := c.Fixed 0 87 = 1
--Annotation: assign q_first 87
def fixed_774: Prop := c.Fixed 1 87 = 0
--Annotation: assign q_last 87
def fixed_775: Prop := c.Fixed 2 87 = 0
--Annotation: assign tag 87
def advice_0_87: Prop := c.Advice 0 87 = 0
--Annotation: assign index 87
def advice_1_87: Prop := c.Advice 1 87 = 0
--Annotation: assign is_code 87
def advice_2_87: Prop := c.Advice 2 87 = 0
--Annotation: assign value 87
def advice_3_87: Prop := c.Advice 3 87 = 0
--Annotation: assign push_data_left 87
def advice_13_87: Prop := c.Advice 13 87 = 0
--Annotation: assign length 87
def advice_15_87: Prop := c.Advice 15 87 = 0
--Annotation: assign push_data_size 87
def advice_16_87: Prop := c.Advice 16 87 = 0
--Annotation: assign value_rlc 87
def advice_14_87: Prop := c.Advice 14 87 = 0
--Annotation: assign code_hash 87
def advice_4_87: Prop := c.Advice 4 87 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 87
def advice_5_87: Prop := c.Advice 5 87 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_87: Prop := c.Advice 17 87 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_87: Prop := c.Advice 18 87 = 1^(-1)
--Annotation: assign q_enable 88
def fixed_776: Prop := c.Fixed 0 88 = 1
--Annotation: assign q_first 88
def fixed_777: Prop := c.Fixed 1 88 = 0
--Annotation: assign q_last 88
def fixed_778: Prop := c.Fixed 2 88 = 0
--Annotation: assign tag 88
def advice_0_88: Prop := c.Advice 0 88 = 0
--Annotation: assign index 88
def advice_1_88: Prop := c.Advice 1 88 = 0
--Annotation: assign is_code 88
def advice_2_88: Prop := c.Advice 2 88 = 0
--Annotation: assign value 88
def advice_3_88: Prop := c.Advice 3 88 = 0
--Annotation: assign push_data_left 88
def advice_13_88: Prop := c.Advice 13 88 = 0
--Annotation: assign length 88
def advice_15_88: Prop := c.Advice 15 88 = 0
--Annotation: assign push_data_size 88
def advice_16_88: Prop := c.Advice 16 88 = 0
--Annotation: assign value_rlc 88
def advice_14_88: Prop := c.Advice 14 88 = 0
--Annotation: assign code_hash 88
def advice_4_88: Prop := c.Advice 4 88 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 88
def advice_5_88: Prop := c.Advice 5 88 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_88: Prop := c.Advice 17 88 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_88: Prop := c.Advice 18 88 = 1^(-1)
--Annotation: assign q_enable 89
def fixed_779: Prop := c.Fixed 0 89 = 1
--Annotation: assign q_first 89
def fixed_780: Prop := c.Fixed 1 89 = 0
--Annotation: assign q_last 89
def fixed_781: Prop := c.Fixed 2 89 = 0
--Annotation: assign tag 89
def advice_0_89: Prop := c.Advice 0 89 = 0
--Annotation: assign index 89
def advice_1_89: Prop := c.Advice 1 89 = 0
--Annotation: assign is_code 89
def advice_2_89: Prop := c.Advice 2 89 = 0
--Annotation: assign value 89
def advice_3_89: Prop := c.Advice 3 89 = 0
--Annotation: assign push_data_left 89
def advice_13_89: Prop := c.Advice 13 89 = 0
--Annotation: assign length 89
def advice_15_89: Prop := c.Advice 15 89 = 0
--Annotation: assign push_data_size 89
def advice_16_89: Prop := c.Advice 16 89 = 0
--Annotation: assign value_rlc 89
def advice_14_89: Prop := c.Advice 14 89 = 0
--Annotation: assign code_hash 89
def advice_4_89: Prop := c.Advice 4 89 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 89
def advice_5_89: Prop := c.Advice 5 89 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_89: Prop := c.Advice 17 89 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_89: Prop := c.Advice 18 89 = 1^(-1)
--Annotation: assign q_enable 90
def fixed_782: Prop := c.Fixed 0 90 = 1
--Annotation: assign q_first 90
def fixed_783: Prop := c.Fixed 1 90 = 0
--Annotation: assign q_last 90
def fixed_784: Prop := c.Fixed 2 90 = 0
--Annotation: assign tag 90
def advice_0_90: Prop := c.Advice 0 90 = 0
--Annotation: assign index 90
def advice_1_90: Prop := c.Advice 1 90 = 0
--Annotation: assign is_code 90
def advice_2_90: Prop := c.Advice 2 90 = 0
--Annotation: assign value 90
def advice_3_90: Prop := c.Advice 3 90 = 0
--Annotation: assign push_data_left 90
def advice_13_90: Prop := c.Advice 13 90 = 0
--Annotation: assign length 90
def advice_15_90: Prop := c.Advice 15 90 = 0
--Annotation: assign push_data_size 90
def advice_16_90: Prop := c.Advice 16 90 = 0
--Annotation: assign value_rlc 90
def advice_14_90: Prop := c.Advice 14 90 = 0
--Annotation: assign code_hash 90
def advice_4_90: Prop := c.Advice 4 90 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 90
def advice_5_90: Prop := c.Advice 5 90 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_90: Prop := c.Advice 17 90 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_90: Prop := c.Advice 18 90 = 1^(-1)
--Annotation: assign q_enable 91
def fixed_785: Prop := c.Fixed 0 91 = 1
--Annotation: assign q_first 91
def fixed_786: Prop := c.Fixed 1 91 = 0
--Annotation: assign q_last 91
def fixed_787: Prop := c.Fixed 2 91 = 0
--Annotation: assign tag 91
def advice_0_91: Prop := c.Advice 0 91 = 0
--Annotation: assign index 91
def advice_1_91: Prop := c.Advice 1 91 = 0
--Annotation: assign is_code 91
def advice_2_91: Prop := c.Advice 2 91 = 0
--Annotation: assign value 91
def advice_3_91: Prop := c.Advice 3 91 = 0
--Annotation: assign push_data_left 91
def advice_13_91: Prop := c.Advice 13 91 = 0
--Annotation: assign length 91
def advice_15_91: Prop := c.Advice 15 91 = 0
--Annotation: assign push_data_size 91
def advice_16_91: Prop := c.Advice 16 91 = 0
--Annotation: assign value_rlc 91
def advice_14_91: Prop := c.Advice 14 91 = 0
--Annotation: assign code_hash 91
def advice_4_91: Prop := c.Advice 4 91 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 91
def advice_5_91: Prop := c.Advice 5 91 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_91: Prop := c.Advice 17 91 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_91: Prop := c.Advice 18 91 = 1^(-1)
--Annotation: assign q_enable 92
def fixed_788: Prop := c.Fixed 0 92 = 1
--Annotation: assign q_first 92
def fixed_789: Prop := c.Fixed 1 92 = 0
--Annotation: assign q_last 92
def fixed_790: Prop := c.Fixed 2 92 = 0
--Annotation: assign tag 92
def advice_0_92: Prop := c.Advice 0 92 = 0
--Annotation: assign index 92
def advice_1_92: Prop := c.Advice 1 92 = 0
--Annotation: assign is_code 92
def advice_2_92: Prop := c.Advice 2 92 = 0
--Annotation: assign value 92
def advice_3_92: Prop := c.Advice 3 92 = 0
--Annotation: assign push_data_left 92
def advice_13_92: Prop := c.Advice 13 92 = 0
--Annotation: assign length 92
def advice_15_92: Prop := c.Advice 15 92 = 0
--Annotation: assign push_data_size 92
def advice_16_92: Prop := c.Advice 16 92 = 0
--Annotation: assign value_rlc 92
def advice_14_92: Prop := c.Advice 14 92 = 0
--Annotation: assign code_hash 92
def advice_4_92: Prop := c.Advice 4 92 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 92
def advice_5_92: Prop := c.Advice 5 92 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_92: Prop := c.Advice 17 92 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_92: Prop := c.Advice 18 92 = 1^(-1)
--Annotation: assign q_enable 93
def fixed_791: Prop := c.Fixed 0 93 = 1
--Annotation: assign q_first 93
def fixed_792: Prop := c.Fixed 1 93 = 0
--Annotation: assign q_last 93
def fixed_793: Prop := c.Fixed 2 93 = 0
--Annotation: assign tag 93
def advice_0_93: Prop := c.Advice 0 93 = 0
--Annotation: assign index 93
def advice_1_93: Prop := c.Advice 1 93 = 0
--Annotation: assign is_code 93
def advice_2_93: Prop := c.Advice 2 93 = 0
--Annotation: assign value 93
def advice_3_93: Prop := c.Advice 3 93 = 0
--Annotation: assign push_data_left 93
def advice_13_93: Prop := c.Advice 13 93 = 0
--Annotation: assign length 93
def advice_15_93: Prop := c.Advice 15 93 = 0
--Annotation: assign push_data_size 93
def advice_16_93: Prop := c.Advice 16 93 = 0
--Annotation: assign value_rlc 93
def advice_14_93: Prop := c.Advice 14 93 = 0
--Annotation: assign code_hash 93
def advice_4_93: Prop := c.Advice 4 93 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 93
def advice_5_93: Prop := c.Advice 5 93 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_93: Prop := c.Advice 17 93 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_93: Prop := c.Advice 18 93 = 1^(-1)
--Annotation: assign q_enable 94
def fixed_794: Prop := c.Fixed 0 94 = 1
--Annotation: assign q_first 94
def fixed_795: Prop := c.Fixed 1 94 = 0
--Annotation: assign q_last 94
def fixed_796: Prop := c.Fixed 2 94 = 0
--Annotation: assign tag 94
def advice_0_94: Prop := c.Advice 0 94 = 0
--Annotation: assign index 94
def advice_1_94: Prop := c.Advice 1 94 = 0
--Annotation: assign is_code 94
def advice_2_94: Prop := c.Advice 2 94 = 0
--Annotation: assign value 94
def advice_3_94: Prop := c.Advice 3 94 = 0
--Annotation: assign push_data_left 94
def advice_13_94: Prop := c.Advice 13 94 = 0
--Annotation: assign length 94
def advice_15_94: Prop := c.Advice 15 94 = 0
--Annotation: assign push_data_size 94
def advice_16_94: Prop := c.Advice 16 94 = 0
--Annotation: assign value_rlc 94
def advice_14_94: Prop := c.Advice 14 94 = 0
--Annotation: assign code_hash 94
def advice_4_94: Prop := c.Advice 4 94 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 94
def advice_5_94: Prop := c.Advice 5 94 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_94: Prop := c.Advice 17 94 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_94: Prop := c.Advice 18 94 = 1^(-1)
--Annotation: assign q_enable 95
def fixed_797: Prop := c.Fixed 0 95 = 1
--Annotation: assign q_first 95
def fixed_798: Prop := c.Fixed 1 95 = 0
--Annotation: assign q_last 95
def fixed_799: Prop := c.Fixed 2 95 = 0
--Annotation: assign tag 95
def advice_0_95: Prop := c.Advice 0 95 = 0
--Annotation: assign index 95
def advice_1_95: Prop := c.Advice 1 95 = 0
--Annotation: assign is_code 95
def advice_2_95: Prop := c.Advice 2 95 = 0
--Annotation: assign value 95
def advice_3_95: Prop := c.Advice 3 95 = 0
--Annotation: assign push_data_left 95
def advice_13_95: Prop := c.Advice 13 95 = 0
--Annotation: assign length 95
def advice_15_95: Prop := c.Advice 15 95 = 0
--Annotation: assign push_data_size 95
def advice_16_95: Prop := c.Advice 16 95 = 0
--Annotation: assign value_rlc 95
def advice_14_95: Prop := c.Advice 14 95 = 0
--Annotation: assign code_hash 95
def advice_4_95: Prop := c.Advice 4 95 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 95
def advice_5_95: Prop := c.Advice 5 95 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_95: Prop := c.Advice 17 95 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_95: Prop := c.Advice 18 95 = 1^(-1)
--Annotation: assign q_enable 96
def fixed_800: Prop := c.Fixed 0 96 = 1
--Annotation: assign q_first 96
def fixed_801: Prop := c.Fixed 1 96 = 0
--Annotation: assign q_last 96
def fixed_802: Prop := c.Fixed 2 96 = 0
--Annotation: assign tag 96
def advice_0_96: Prop := c.Advice 0 96 = 0
--Annotation: assign index 96
def advice_1_96: Prop := c.Advice 1 96 = 0
--Annotation: assign is_code 96
def advice_2_96: Prop := c.Advice 2 96 = 0
--Annotation: assign value 96
def advice_3_96: Prop := c.Advice 3 96 = 0
--Annotation: assign push_data_left 96
def advice_13_96: Prop := c.Advice 13 96 = 0
--Annotation: assign length 96
def advice_15_96: Prop := c.Advice 15 96 = 0
--Annotation: assign push_data_size 96
def advice_16_96: Prop := c.Advice 16 96 = 0
--Annotation: assign value_rlc 96
def advice_14_96: Prop := c.Advice 14 96 = 0
--Annotation: assign code_hash 96
def advice_4_96: Prop := c.Advice 4 96 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 96
def advice_5_96: Prop := c.Advice 5 96 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_96: Prop := c.Advice 17 96 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_96: Prop := c.Advice 18 96 = 1^(-1)
--Annotation: assign q_enable 97
def fixed_803: Prop := c.Fixed 0 97 = 1
--Annotation: assign q_first 97
def fixed_804: Prop := c.Fixed 1 97 = 0
--Annotation: assign q_last 97
def fixed_805: Prop := c.Fixed 2 97 = 0
--Annotation: assign tag 97
def advice_0_97: Prop := c.Advice 0 97 = 0
--Annotation: assign index 97
def advice_1_97: Prop := c.Advice 1 97 = 0
--Annotation: assign is_code 97
def advice_2_97: Prop := c.Advice 2 97 = 0
--Annotation: assign value 97
def advice_3_97: Prop := c.Advice 3 97 = 0
--Annotation: assign push_data_left 97
def advice_13_97: Prop := c.Advice 13 97 = 0
--Annotation: assign length 97
def advice_15_97: Prop := c.Advice 15 97 = 0
--Annotation: assign push_data_size 97
def advice_16_97: Prop := c.Advice 16 97 = 0
--Annotation: assign value_rlc 97
def advice_14_97: Prop := c.Advice 14 97 = 0
--Annotation: assign code_hash 97
def advice_4_97: Prop := c.Advice 4 97 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 97
def advice_5_97: Prop := c.Advice 5 97 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_97: Prop := c.Advice 17 97 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_97: Prop := c.Advice 18 97 = 1^(-1)
--Annotation: assign q_enable 98
def fixed_806: Prop := c.Fixed 0 98 = 1
--Annotation: assign q_first 98
def fixed_807: Prop := c.Fixed 1 98 = 0
--Annotation: assign q_last 98
def fixed_808: Prop := c.Fixed 2 98 = 0
--Annotation: assign tag 98
def advice_0_98: Prop := c.Advice 0 98 = 0
--Annotation: assign index 98
def advice_1_98: Prop := c.Advice 1 98 = 0
--Annotation: assign is_code 98
def advice_2_98: Prop := c.Advice 2 98 = 0
--Annotation: assign value 98
def advice_3_98: Prop := c.Advice 3 98 = 0
--Annotation: assign push_data_left 98
def advice_13_98: Prop := c.Advice 13 98 = 0
--Annotation: assign length 98
def advice_15_98: Prop := c.Advice 15 98 = 0
--Annotation: assign push_data_size 98
def advice_16_98: Prop := c.Advice 16 98 = 0
--Annotation: assign value_rlc 98
def advice_14_98: Prop := c.Advice 14 98 = 0
--Annotation: assign code_hash 98
def advice_4_98: Prop := c.Advice 4 98 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 98
def advice_5_98: Prop := c.Advice 5 98 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_98: Prop := c.Advice 17 98 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_98: Prop := c.Advice 18 98 = 1^(-1)
--Annotation: assign q_enable 99
def fixed_809: Prop := c.Fixed 0 99 = 1
--Annotation: assign q_first 99
def fixed_810: Prop := c.Fixed 1 99 = 0
--Annotation: assign q_last 99
def fixed_811: Prop := c.Fixed 2 99 = 0
--Annotation: assign tag 99
def advice_0_99: Prop := c.Advice 0 99 = 0
--Annotation: assign index 99
def advice_1_99: Prop := c.Advice 1 99 = 0
--Annotation: assign is_code 99
def advice_2_99: Prop := c.Advice 2 99 = 0
--Annotation: assign value 99
def advice_3_99: Prop := c.Advice 3 99 = 0
--Annotation: assign push_data_left 99
def advice_13_99: Prop := c.Advice 13 99 = 0
--Annotation: assign length 99
def advice_15_99: Prop := c.Advice 15 99 = 0
--Annotation: assign push_data_size 99
def advice_16_99: Prop := c.Advice 16 99 = 0
--Annotation: assign value_rlc 99
def advice_14_99: Prop := c.Advice 14 99 = 0
--Annotation: assign code_hash 99
def advice_4_99: Prop := c.Advice 4 99 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 99
def advice_5_99: Prop := c.Advice 5 99 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_99: Prop := c.Advice 17 99 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_99: Prop := c.Advice 18 99 = 1^(-1)
--Annotation: assign q_enable 100
def fixed_812: Prop := c.Fixed 0 100 = 1
--Annotation: assign q_first 100
def fixed_813: Prop := c.Fixed 1 100 = 0
--Annotation: assign q_last 100
def fixed_814: Prop := c.Fixed 2 100 = 0
--Annotation: assign tag 100
def advice_0_100: Prop := c.Advice 0 100 = 0
--Annotation: assign index 100
def advice_1_100: Prop := c.Advice 1 100 = 0
--Annotation: assign is_code 100
def advice_2_100: Prop := c.Advice 2 100 = 0
--Annotation: assign value 100
def advice_3_100: Prop := c.Advice 3 100 = 0
--Annotation: assign push_data_left 100
def advice_13_100: Prop := c.Advice 13 100 = 0
--Annotation: assign length 100
def advice_15_100: Prop := c.Advice 15 100 = 0
--Annotation: assign push_data_size 100
def advice_16_100: Prop := c.Advice 16 100 = 0
--Annotation: assign value_rlc 100
def advice_14_100: Prop := c.Advice 14 100 = 0
--Annotation: assign code_hash 100
def advice_4_100: Prop := c.Advice 4 100 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 100
def advice_5_100: Prop := c.Advice 5 100 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_100: Prop := c.Advice 17 100 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_100: Prop := c.Advice 18 100 = 1^(-1)
--Annotation: assign q_enable 101
def fixed_815: Prop := c.Fixed 0 101 = 1
--Annotation: assign q_first 101
def fixed_816: Prop := c.Fixed 1 101 = 0
--Annotation: assign q_last 101
def fixed_817: Prop := c.Fixed 2 101 = 0
--Annotation: assign tag 101
def advice_0_101: Prop := c.Advice 0 101 = 0
--Annotation: assign index 101
def advice_1_101: Prop := c.Advice 1 101 = 0
--Annotation: assign is_code 101
def advice_2_101: Prop := c.Advice 2 101 = 0
--Annotation: assign value 101
def advice_3_101: Prop := c.Advice 3 101 = 0
--Annotation: assign push_data_left 101
def advice_13_101: Prop := c.Advice 13 101 = 0
--Annotation: assign length 101
def advice_15_101: Prop := c.Advice 15 101 = 0
--Annotation: assign push_data_size 101
def advice_16_101: Prop := c.Advice 16 101 = 0
--Annotation: assign value_rlc 101
def advice_14_101: Prop := c.Advice 14 101 = 0
--Annotation: assign code_hash 101
def advice_4_101: Prop := c.Advice 4 101 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 101
def advice_5_101: Prop := c.Advice 5 101 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_101: Prop := c.Advice 17 101 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_101: Prop := c.Advice 18 101 = 1^(-1)
--Annotation: assign q_enable 102
def fixed_818: Prop := c.Fixed 0 102 = 1
--Annotation: assign q_first 102
def fixed_819: Prop := c.Fixed 1 102 = 0
--Annotation: assign q_last 102
def fixed_820: Prop := c.Fixed 2 102 = 0
--Annotation: assign tag 102
def advice_0_102: Prop := c.Advice 0 102 = 0
--Annotation: assign index 102
def advice_1_102: Prop := c.Advice 1 102 = 0
--Annotation: assign is_code 102
def advice_2_102: Prop := c.Advice 2 102 = 0
--Annotation: assign value 102
def advice_3_102: Prop := c.Advice 3 102 = 0
--Annotation: assign push_data_left 102
def advice_13_102: Prop := c.Advice 13 102 = 0
--Annotation: assign length 102
def advice_15_102: Prop := c.Advice 15 102 = 0
--Annotation: assign push_data_size 102
def advice_16_102: Prop := c.Advice 16 102 = 0
--Annotation: assign value_rlc 102
def advice_14_102: Prop := c.Advice 14 102 = 0
--Annotation: assign code_hash 102
def advice_4_102: Prop := c.Advice 4 102 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 102
def advice_5_102: Prop := c.Advice 5 102 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_102: Prop := c.Advice 17 102 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_102: Prop := c.Advice 18 102 = 1^(-1)
--Annotation: assign q_enable 103
def fixed_821: Prop := c.Fixed 0 103 = 1
--Annotation: assign q_first 103
def fixed_822: Prop := c.Fixed 1 103 = 0
--Annotation: assign q_last 103
def fixed_823: Prop := c.Fixed 2 103 = 0
--Annotation: assign tag 103
def advice_0_103: Prop := c.Advice 0 103 = 0
--Annotation: assign index 103
def advice_1_103: Prop := c.Advice 1 103 = 0
--Annotation: assign is_code 103
def advice_2_103: Prop := c.Advice 2 103 = 0
--Annotation: assign value 103
def advice_3_103: Prop := c.Advice 3 103 = 0
--Annotation: assign push_data_left 103
def advice_13_103: Prop := c.Advice 13 103 = 0
--Annotation: assign length 103
def advice_15_103: Prop := c.Advice 15 103 = 0
--Annotation: assign push_data_size 103
def advice_16_103: Prop := c.Advice 16 103 = 0
--Annotation: assign value_rlc 103
def advice_14_103: Prop := c.Advice 14 103 = 0
--Annotation: assign code_hash 103
def advice_4_103: Prop := c.Advice 4 103 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 103
def advice_5_103: Prop := c.Advice 5 103 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_103: Prop := c.Advice 17 103 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_103: Prop := c.Advice 18 103 = 1^(-1)
--Annotation: assign q_enable 104
def fixed_824: Prop := c.Fixed 0 104 = 1
--Annotation: assign q_first 104
def fixed_825: Prop := c.Fixed 1 104 = 0
--Annotation: assign q_last 104
def fixed_826: Prop := c.Fixed 2 104 = 0
--Annotation: assign tag 104
def advice_0_104: Prop := c.Advice 0 104 = 0
--Annotation: assign index 104
def advice_1_104: Prop := c.Advice 1 104 = 0
--Annotation: assign is_code 104
def advice_2_104: Prop := c.Advice 2 104 = 0
--Annotation: assign value 104
def advice_3_104: Prop := c.Advice 3 104 = 0
--Annotation: assign push_data_left 104
def advice_13_104: Prop := c.Advice 13 104 = 0
--Annotation: assign length 104
def advice_15_104: Prop := c.Advice 15 104 = 0
--Annotation: assign push_data_size 104
def advice_16_104: Prop := c.Advice 16 104 = 0
--Annotation: assign value_rlc 104
def advice_14_104: Prop := c.Advice 14 104 = 0
--Annotation: assign code_hash 104
def advice_4_104: Prop := c.Advice 4 104 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 104
def advice_5_104: Prop := c.Advice 5 104 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_104: Prop := c.Advice 17 104 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_104: Prop := c.Advice 18 104 = 1^(-1)
--Annotation: assign q_enable 105
def fixed_827: Prop := c.Fixed 0 105 = 1
--Annotation: assign q_first 105
def fixed_828: Prop := c.Fixed 1 105 = 0
--Annotation: assign q_last 105
def fixed_829: Prop := c.Fixed 2 105 = 0
--Annotation: assign tag 105
def advice_0_105: Prop := c.Advice 0 105 = 0
--Annotation: assign index 105
def advice_1_105: Prop := c.Advice 1 105 = 0
--Annotation: assign is_code 105
def advice_2_105: Prop := c.Advice 2 105 = 0
--Annotation: assign value 105
def advice_3_105: Prop := c.Advice 3 105 = 0
--Annotation: assign push_data_left 105
def advice_13_105: Prop := c.Advice 13 105 = 0
--Annotation: assign length 105
def advice_15_105: Prop := c.Advice 15 105 = 0
--Annotation: assign push_data_size 105
def advice_16_105: Prop := c.Advice 16 105 = 0
--Annotation: assign value_rlc 105
def advice_14_105: Prop := c.Advice 14 105 = 0
--Annotation: assign code_hash 105
def advice_4_105: Prop := c.Advice 4 105 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 105
def advice_5_105: Prop := c.Advice 5 105 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_105: Prop := c.Advice 17 105 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_105: Prop := c.Advice 18 105 = 1^(-1)
--Annotation: assign q_enable 106
def fixed_830: Prop := c.Fixed 0 106 = 1
--Annotation: assign q_first 106
def fixed_831: Prop := c.Fixed 1 106 = 0
--Annotation: assign q_last 106
def fixed_832: Prop := c.Fixed 2 106 = 0
--Annotation: assign tag 106
def advice_0_106: Prop := c.Advice 0 106 = 0
--Annotation: assign index 106
def advice_1_106: Prop := c.Advice 1 106 = 0
--Annotation: assign is_code 106
def advice_2_106: Prop := c.Advice 2 106 = 0
--Annotation: assign value 106
def advice_3_106: Prop := c.Advice 3 106 = 0
--Annotation: assign push_data_left 106
def advice_13_106: Prop := c.Advice 13 106 = 0
--Annotation: assign length 106
def advice_15_106: Prop := c.Advice 15 106 = 0
--Annotation: assign push_data_size 106
def advice_16_106: Prop := c.Advice 16 106 = 0
--Annotation: assign value_rlc 106
def advice_14_106: Prop := c.Advice 14 106 = 0
--Annotation: assign code_hash 106
def advice_4_106: Prop := c.Advice 4 106 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 106
def advice_5_106: Prop := c.Advice 5 106 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_106: Prop := c.Advice 17 106 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_106: Prop := c.Advice 18 106 = 1^(-1)
--Annotation: assign q_enable 107
def fixed_833: Prop := c.Fixed 0 107 = 1
--Annotation: assign q_first 107
def fixed_834: Prop := c.Fixed 1 107 = 0
--Annotation: assign q_last 107
def fixed_835: Prop := c.Fixed 2 107 = 0
--Annotation: assign tag 107
def advice_0_107: Prop := c.Advice 0 107 = 0
--Annotation: assign index 107
def advice_1_107: Prop := c.Advice 1 107 = 0
--Annotation: assign is_code 107
def advice_2_107: Prop := c.Advice 2 107 = 0
--Annotation: assign value 107
def advice_3_107: Prop := c.Advice 3 107 = 0
--Annotation: assign push_data_left 107
def advice_13_107: Prop := c.Advice 13 107 = 0
--Annotation: assign length 107
def advice_15_107: Prop := c.Advice 15 107 = 0
--Annotation: assign push_data_size 107
def advice_16_107: Prop := c.Advice 16 107 = 0
--Annotation: assign value_rlc 107
def advice_14_107: Prop := c.Advice 14 107 = 0
--Annotation: assign code_hash 107
def advice_4_107: Prop := c.Advice 4 107 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 107
def advice_5_107: Prop := c.Advice 5 107 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_107: Prop := c.Advice 17 107 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_107: Prop := c.Advice 18 107 = 1^(-1)
--Annotation: assign q_enable 108
def fixed_836: Prop := c.Fixed 0 108 = 1
--Annotation: assign q_first 108
def fixed_837: Prop := c.Fixed 1 108 = 0
--Annotation: assign q_last 108
def fixed_838: Prop := c.Fixed 2 108 = 0
--Annotation: assign tag 108
def advice_0_108: Prop := c.Advice 0 108 = 0
--Annotation: assign index 108
def advice_1_108: Prop := c.Advice 1 108 = 0
--Annotation: assign is_code 108
def advice_2_108: Prop := c.Advice 2 108 = 0
--Annotation: assign value 108
def advice_3_108: Prop := c.Advice 3 108 = 0
--Annotation: assign push_data_left 108
def advice_13_108: Prop := c.Advice 13 108 = 0
--Annotation: assign length 108
def advice_15_108: Prop := c.Advice 15 108 = 0
--Annotation: assign push_data_size 108
def advice_16_108: Prop := c.Advice 16 108 = 0
--Annotation: assign value_rlc 108
def advice_14_108: Prop := c.Advice 14 108 = 0
--Annotation: assign code_hash 108
def advice_4_108: Prop := c.Advice 4 108 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 108
def advice_5_108: Prop := c.Advice 5 108 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_108: Prop := c.Advice 17 108 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_108: Prop := c.Advice 18 108 = 1^(-1)
--Annotation: assign q_enable 109
def fixed_839: Prop := c.Fixed 0 109 = 1
--Annotation: assign q_first 109
def fixed_840: Prop := c.Fixed 1 109 = 0
--Annotation: assign q_last 109
def fixed_841: Prop := c.Fixed 2 109 = 0
--Annotation: assign tag 109
def advice_0_109: Prop := c.Advice 0 109 = 0
--Annotation: assign index 109
def advice_1_109: Prop := c.Advice 1 109 = 0
--Annotation: assign is_code 109
def advice_2_109: Prop := c.Advice 2 109 = 0
--Annotation: assign value 109
def advice_3_109: Prop := c.Advice 3 109 = 0
--Annotation: assign push_data_left 109
def advice_13_109: Prop := c.Advice 13 109 = 0
--Annotation: assign length 109
def advice_15_109: Prop := c.Advice 15 109 = 0
--Annotation: assign push_data_size 109
def advice_16_109: Prop := c.Advice 16 109 = 0
--Annotation: assign value_rlc 109
def advice_14_109: Prop := c.Advice 14 109 = 0
--Annotation: assign code_hash 109
def advice_4_109: Prop := c.Advice 4 109 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 109
def advice_5_109: Prop := c.Advice 5 109 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_109: Prop := c.Advice 17 109 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_109: Prop := c.Advice 18 109 = 1^(-1)
--Annotation: assign q_enable 110
def fixed_842: Prop := c.Fixed 0 110 = 1
--Annotation: assign q_first 110
def fixed_843: Prop := c.Fixed 1 110 = 0
--Annotation: assign q_last 110
def fixed_844: Prop := c.Fixed 2 110 = 0
--Annotation: assign tag 110
def advice_0_110: Prop := c.Advice 0 110 = 0
--Annotation: assign index 110
def advice_1_110: Prop := c.Advice 1 110 = 0
--Annotation: assign is_code 110
def advice_2_110: Prop := c.Advice 2 110 = 0
--Annotation: assign value 110
def advice_3_110: Prop := c.Advice 3 110 = 0
--Annotation: assign push_data_left 110
def advice_13_110: Prop := c.Advice 13 110 = 0
--Annotation: assign length 110
def advice_15_110: Prop := c.Advice 15 110 = 0
--Annotation: assign push_data_size 110
def advice_16_110: Prop := c.Advice 16 110 = 0
--Annotation: assign value_rlc 110
def advice_14_110: Prop := c.Advice 14 110 = 0
--Annotation: assign code_hash 110
def advice_4_110: Prop := c.Advice 4 110 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 110
def advice_5_110: Prop := c.Advice 5 110 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_110: Prop := c.Advice 17 110 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_110: Prop := c.Advice 18 110 = 1^(-1)
--Annotation: assign q_enable 111
def fixed_845: Prop := c.Fixed 0 111 = 1
--Annotation: assign q_first 111
def fixed_846: Prop := c.Fixed 1 111 = 0
--Annotation: assign q_last 111
def fixed_847: Prop := c.Fixed 2 111 = 0
--Annotation: assign tag 111
def advice_0_111: Prop := c.Advice 0 111 = 0
--Annotation: assign index 111
def advice_1_111: Prop := c.Advice 1 111 = 0
--Annotation: assign is_code 111
def advice_2_111: Prop := c.Advice 2 111 = 0
--Annotation: assign value 111
def advice_3_111: Prop := c.Advice 3 111 = 0
--Annotation: assign push_data_left 111
def advice_13_111: Prop := c.Advice 13 111 = 0
--Annotation: assign length 111
def advice_15_111: Prop := c.Advice 15 111 = 0
--Annotation: assign push_data_size 111
def advice_16_111: Prop := c.Advice 16 111 = 0
--Annotation: assign value_rlc 111
def advice_14_111: Prop := c.Advice 14 111 = 0
--Annotation: assign code_hash 111
def advice_4_111: Prop := c.Advice 4 111 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 111
def advice_5_111: Prop := c.Advice 5 111 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_111: Prop := c.Advice 17 111 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_111: Prop := c.Advice 18 111 = 1^(-1)
--Annotation: assign q_enable 112
def fixed_848: Prop := c.Fixed 0 112 = 1
--Annotation: assign q_first 112
def fixed_849: Prop := c.Fixed 1 112 = 0
--Annotation: assign q_last 112
def fixed_850: Prop := c.Fixed 2 112 = 0
--Annotation: assign tag 112
def advice_0_112: Prop := c.Advice 0 112 = 0
--Annotation: assign index 112
def advice_1_112: Prop := c.Advice 1 112 = 0
--Annotation: assign is_code 112
def advice_2_112: Prop := c.Advice 2 112 = 0
--Annotation: assign value 112
def advice_3_112: Prop := c.Advice 3 112 = 0
--Annotation: assign push_data_left 112
def advice_13_112: Prop := c.Advice 13 112 = 0
--Annotation: assign length 112
def advice_15_112: Prop := c.Advice 15 112 = 0
--Annotation: assign push_data_size 112
def advice_16_112: Prop := c.Advice 16 112 = 0
--Annotation: assign value_rlc 112
def advice_14_112: Prop := c.Advice 14 112 = 0
--Annotation: assign code_hash 112
def advice_4_112: Prop := c.Advice 4 112 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 112
def advice_5_112: Prop := c.Advice 5 112 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_112: Prop := c.Advice 17 112 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_112: Prop := c.Advice 18 112 = 1^(-1)
--Annotation: assign q_enable 113
def fixed_851: Prop := c.Fixed 0 113 = 1
--Annotation: assign q_first 113
def fixed_852: Prop := c.Fixed 1 113 = 0
--Annotation: assign q_last 113
def fixed_853: Prop := c.Fixed 2 113 = 0
--Annotation: assign tag 113
def advice_0_113: Prop := c.Advice 0 113 = 0
--Annotation: assign index 113
def advice_1_113: Prop := c.Advice 1 113 = 0
--Annotation: assign is_code 113
def advice_2_113: Prop := c.Advice 2 113 = 0
--Annotation: assign value 113
def advice_3_113: Prop := c.Advice 3 113 = 0
--Annotation: assign push_data_left 113
def advice_13_113: Prop := c.Advice 13 113 = 0
--Annotation: assign length 113
def advice_15_113: Prop := c.Advice 15 113 = 0
--Annotation: assign push_data_size 113
def advice_16_113: Prop := c.Advice 16 113 = 0
--Annotation: assign value_rlc 113
def advice_14_113: Prop := c.Advice 14 113 = 0
--Annotation: assign code_hash 113
def advice_4_113: Prop := c.Advice 4 113 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 113
def advice_5_113: Prop := c.Advice 5 113 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_113: Prop := c.Advice 17 113 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_113: Prop := c.Advice 18 113 = 1^(-1)
--Annotation: assign q_enable 114
def fixed_854: Prop := c.Fixed 0 114 = 1
--Annotation: assign q_first 114
def fixed_855: Prop := c.Fixed 1 114 = 0
--Annotation: assign q_last 114
def fixed_856: Prop := c.Fixed 2 114 = 0
--Annotation: assign tag 114
def advice_0_114: Prop := c.Advice 0 114 = 0
--Annotation: assign index 114
def advice_1_114: Prop := c.Advice 1 114 = 0
--Annotation: assign is_code 114
def advice_2_114: Prop := c.Advice 2 114 = 0
--Annotation: assign value 114
def advice_3_114: Prop := c.Advice 3 114 = 0
--Annotation: assign push_data_left 114
def advice_13_114: Prop := c.Advice 13 114 = 0
--Annotation: assign length 114
def advice_15_114: Prop := c.Advice 15 114 = 0
--Annotation: assign push_data_size 114
def advice_16_114: Prop := c.Advice 16 114 = 0
--Annotation: assign value_rlc 114
def advice_14_114: Prop := c.Advice 14 114 = 0
--Annotation: assign code_hash 114
def advice_4_114: Prop := c.Advice 4 114 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 114
def advice_5_114: Prop := c.Advice 5 114 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_114: Prop := c.Advice 17 114 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_114: Prop := c.Advice 18 114 = 1^(-1)
--Annotation: assign q_enable 115
def fixed_857: Prop := c.Fixed 0 115 = 1
--Annotation: assign q_first 115
def fixed_858: Prop := c.Fixed 1 115 = 0
--Annotation: assign q_last 115
def fixed_859: Prop := c.Fixed 2 115 = 0
--Annotation: assign tag 115
def advice_0_115: Prop := c.Advice 0 115 = 0
--Annotation: assign index 115
def advice_1_115: Prop := c.Advice 1 115 = 0
--Annotation: assign is_code 115
def advice_2_115: Prop := c.Advice 2 115 = 0
--Annotation: assign value 115
def advice_3_115: Prop := c.Advice 3 115 = 0
--Annotation: assign push_data_left 115
def advice_13_115: Prop := c.Advice 13 115 = 0
--Annotation: assign length 115
def advice_15_115: Prop := c.Advice 15 115 = 0
--Annotation: assign push_data_size 115
def advice_16_115: Prop := c.Advice 16 115 = 0
--Annotation: assign value_rlc 115
def advice_14_115: Prop := c.Advice 14 115 = 0
--Annotation: assign code_hash 115
def advice_4_115: Prop := c.Advice 4 115 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 115
def advice_5_115: Prop := c.Advice 5 115 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_115: Prop := c.Advice 17 115 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_115: Prop := c.Advice 18 115 = 1^(-1)
--Annotation: assign q_enable 116
def fixed_860: Prop := c.Fixed 0 116 = 1
--Annotation: assign q_first 116
def fixed_861: Prop := c.Fixed 1 116 = 0
--Annotation: assign q_last 116
def fixed_862: Prop := c.Fixed 2 116 = 0
--Annotation: assign tag 116
def advice_0_116: Prop := c.Advice 0 116 = 0
--Annotation: assign index 116
def advice_1_116: Prop := c.Advice 1 116 = 0
--Annotation: assign is_code 116
def advice_2_116: Prop := c.Advice 2 116 = 0
--Annotation: assign value 116
def advice_3_116: Prop := c.Advice 3 116 = 0
--Annotation: assign push_data_left 116
def advice_13_116: Prop := c.Advice 13 116 = 0
--Annotation: assign length 116
def advice_15_116: Prop := c.Advice 15 116 = 0
--Annotation: assign push_data_size 116
def advice_16_116: Prop := c.Advice 16 116 = 0
--Annotation: assign value_rlc 116
def advice_14_116: Prop := c.Advice 14 116 = 0
--Annotation: assign code_hash 116
def advice_4_116: Prop := c.Advice 4 116 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 116
def advice_5_116: Prop := c.Advice 5 116 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_116: Prop := c.Advice 17 116 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_116: Prop := c.Advice 18 116 = 1^(-1)
--Annotation: assign q_enable 117
def fixed_863: Prop := c.Fixed 0 117 = 1
--Annotation: assign q_first 117
def fixed_864: Prop := c.Fixed 1 117 = 0
--Annotation: assign q_last 117
def fixed_865: Prop := c.Fixed 2 117 = 0
--Annotation: assign tag 117
def advice_0_117: Prop := c.Advice 0 117 = 0
--Annotation: assign index 117
def advice_1_117: Prop := c.Advice 1 117 = 0
--Annotation: assign is_code 117
def advice_2_117: Prop := c.Advice 2 117 = 0
--Annotation: assign value 117
def advice_3_117: Prop := c.Advice 3 117 = 0
--Annotation: assign push_data_left 117
def advice_13_117: Prop := c.Advice 13 117 = 0
--Annotation: assign length 117
def advice_15_117: Prop := c.Advice 15 117 = 0
--Annotation: assign push_data_size 117
def advice_16_117: Prop := c.Advice 16 117 = 0
--Annotation: assign value_rlc 117
def advice_14_117: Prop := c.Advice 14 117 = 0
--Annotation: assign code_hash 117
def advice_4_117: Prop := c.Advice 4 117 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 117
def advice_5_117: Prop := c.Advice 5 117 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_117: Prop := c.Advice 17 117 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_117: Prop := c.Advice 18 117 = 1^(-1)
--Annotation: assign q_enable 118
def fixed_866: Prop := c.Fixed 0 118 = 1
--Annotation: assign q_first 118
def fixed_867: Prop := c.Fixed 1 118 = 0
--Annotation: assign q_last 118
def fixed_868: Prop := c.Fixed 2 118 = 0
--Annotation: assign tag 118
def advice_0_118: Prop := c.Advice 0 118 = 0
--Annotation: assign index 118
def advice_1_118: Prop := c.Advice 1 118 = 0
--Annotation: assign is_code 118
def advice_2_118: Prop := c.Advice 2 118 = 0
--Annotation: assign value 118
def advice_3_118: Prop := c.Advice 3 118 = 0
--Annotation: assign push_data_left 118
def advice_13_118: Prop := c.Advice 13 118 = 0
--Annotation: assign length 118
def advice_15_118: Prop := c.Advice 15 118 = 0
--Annotation: assign push_data_size 118
def advice_16_118: Prop := c.Advice 16 118 = 0
--Annotation: assign value_rlc 118
def advice_14_118: Prop := c.Advice 14 118 = 0
--Annotation: assign code_hash 118
def advice_4_118: Prop := c.Advice 4 118 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 118
def advice_5_118: Prop := c.Advice 5 118 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_118: Prop := c.Advice 17 118 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_118: Prop := c.Advice 18 118 = 1^(-1)
--Annotation: assign q_enable 119
def fixed_869: Prop := c.Fixed 0 119 = 1
--Annotation: assign q_first 119
def fixed_870: Prop := c.Fixed 1 119 = 0
--Annotation: assign q_last 119
def fixed_871: Prop := c.Fixed 2 119 = 0
--Annotation: assign tag 119
def advice_0_119: Prop := c.Advice 0 119 = 0
--Annotation: assign index 119
def advice_1_119: Prop := c.Advice 1 119 = 0
--Annotation: assign is_code 119
def advice_2_119: Prop := c.Advice 2 119 = 0
--Annotation: assign value 119
def advice_3_119: Prop := c.Advice 3 119 = 0
--Annotation: assign push_data_left 119
def advice_13_119: Prop := c.Advice 13 119 = 0
--Annotation: assign length 119
def advice_15_119: Prop := c.Advice 15 119 = 0
--Annotation: assign push_data_size 119
def advice_16_119: Prop := c.Advice 16 119 = 0
--Annotation: assign value_rlc 119
def advice_14_119: Prop := c.Advice 14 119 = 0
--Annotation: assign code_hash 119
def advice_4_119: Prop := c.Advice 4 119 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 119
def advice_5_119: Prop := c.Advice 5 119 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_119: Prop := c.Advice 17 119 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_119: Prop := c.Advice 18 119 = 1^(-1)
--Annotation: assign q_enable 120
def fixed_872: Prop := c.Fixed 0 120 = 1
--Annotation: assign q_first 120
def fixed_873: Prop := c.Fixed 1 120 = 0
--Annotation: assign q_last 120
def fixed_874: Prop := c.Fixed 2 120 = 0
--Annotation: assign tag 120
def advice_0_120: Prop := c.Advice 0 120 = 0
--Annotation: assign index 120
def advice_1_120: Prop := c.Advice 1 120 = 0
--Annotation: assign is_code 120
def advice_2_120: Prop := c.Advice 2 120 = 0
--Annotation: assign value 120
def advice_3_120: Prop := c.Advice 3 120 = 0
--Annotation: assign push_data_left 120
def advice_13_120: Prop := c.Advice 13 120 = 0
--Annotation: assign length 120
def advice_15_120: Prop := c.Advice 15 120 = 0
--Annotation: assign push_data_size 120
def advice_16_120: Prop := c.Advice 16 120 = 0
--Annotation: assign value_rlc 120
def advice_14_120: Prop := c.Advice 14 120 = 0
--Annotation: assign code_hash 120
def advice_4_120: Prop := c.Advice 4 120 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 120
def advice_5_120: Prop := c.Advice 5 120 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_120: Prop := c.Advice 17 120 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_120: Prop := c.Advice 18 120 = 1^(-1)
--Annotation: assign q_enable 121
def fixed_875: Prop := c.Fixed 0 121 = 1
--Annotation: assign q_first 121
def fixed_876: Prop := c.Fixed 1 121 = 0
--Annotation: assign q_last 121
def fixed_877: Prop := c.Fixed 2 121 = 0
--Annotation: assign tag 121
def advice_0_121: Prop := c.Advice 0 121 = 0
--Annotation: assign index 121
def advice_1_121: Prop := c.Advice 1 121 = 0
--Annotation: assign is_code 121
def advice_2_121: Prop := c.Advice 2 121 = 0
--Annotation: assign value 121
def advice_3_121: Prop := c.Advice 3 121 = 0
--Annotation: assign push_data_left 121
def advice_13_121: Prop := c.Advice 13 121 = 0
--Annotation: assign length 121
def advice_15_121: Prop := c.Advice 15 121 = 0
--Annotation: assign push_data_size 121
def advice_16_121: Prop := c.Advice 16 121 = 0
--Annotation: assign value_rlc 121
def advice_14_121: Prop := c.Advice 14 121 = 0
--Annotation: assign code_hash 121
def advice_4_121: Prop := c.Advice 4 121 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 121
def advice_5_121: Prop := c.Advice 5 121 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_121: Prop := c.Advice 17 121 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_121: Prop := c.Advice 18 121 = 1^(-1)
--Annotation: assign q_enable 122
def fixed_878: Prop := c.Fixed 0 122 = 1
--Annotation: assign q_first 122
def fixed_879: Prop := c.Fixed 1 122 = 0
--Annotation: assign q_last 122
def fixed_880: Prop := c.Fixed 2 122 = 0
--Annotation: assign tag 122
def advice_0_122: Prop := c.Advice 0 122 = 0
--Annotation: assign index 122
def advice_1_122: Prop := c.Advice 1 122 = 0
--Annotation: assign is_code 122
def advice_2_122: Prop := c.Advice 2 122 = 0
--Annotation: assign value 122
def advice_3_122: Prop := c.Advice 3 122 = 0
--Annotation: assign push_data_left 122
def advice_13_122: Prop := c.Advice 13 122 = 0
--Annotation: assign length 122
def advice_15_122: Prop := c.Advice 15 122 = 0
--Annotation: assign push_data_size 122
def advice_16_122: Prop := c.Advice 16 122 = 0
--Annotation: assign value_rlc 122
def advice_14_122: Prop := c.Advice 14 122 = 0
--Annotation: assign code_hash 122
def advice_4_122: Prop := c.Advice 4 122 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 122
def advice_5_122: Prop := c.Advice 5 122 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_122: Prop := c.Advice 17 122 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_122: Prop := c.Advice 18 122 = 1^(-1)
--Annotation: assign q_enable 123
def fixed_881: Prop := c.Fixed 0 123 = 1
--Annotation: assign q_first 123
def fixed_882: Prop := c.Fixed 1 123 = 0
--Annotation: assign q_last 123
def fixed_883: Prop := c.Fixed 2 123 = 0
--Annotation: assign tag 123
def advice_0_123: Prop := c.Advice 0 123 = 0
--Annotation: assign index 123
def advice_1_123: Prop := c.Advice 1 123 = 0
--Annotation: assign is_code 123
def advice_2_123: Prop := c.Advice 2 123 = 0
--Annotation: assign value 123
def advice_3_123: Prop := c.Advice 3 123 = 0
--Annotation: assign push_data_left 123
def advice_13_123: Prop := c.Advice 13 123 = 0
--Annotation: assign length 123
def advice_15_123: Prop := c.Advice 15 123 = 0
--Annotation: assign push_data_size 123
def advice_16_123: Prop := c.Advice 16 123 = 0
--Annotation: assign value_rlc 123
def advice_14_123: Prop := c.Advice 14 123 = 0
--Annotation: assign code_hash 123
def advice_4_123: Prop := c.Advice 4 123 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 123
def advice_5_123: Prop := c.Advice 5 123 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_123: Prop := c.Advice 17 123 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_123: Prop := c.Advice 18 123 = 1^(-1)
--Annotation: assign q_enable 124
def fixed_884: Prop := c.Fixed 0 124 = 1
--Annotation: assign q_first 124
def fixed_885: Prop := c.Fixed 1 124 = 0
--Annotation: assign q_last 124
def fixed_886: Prop := c.Fixed 2 124 = 0
--Annotation: assign tag 124
def advice_0_124: Prop := c.Advice 0 124 = 0
--Annotation: assign index 124
def advice_1_124: Prop := c.Advice 1 124 = 0
--Annotation: assign is_code 124
def advice_2_124: Prop := c.Advice 2 124 = 0
--Annotation: assign value 124
def advice_3_124: Prop := c.Advice 3 124 = 0
--Annotation: assign push_data_left 124
def advice_13_124: Prop := c.Advice 13 124 = 0
--Annotation: assign length 124
def advice_15_124: Prop := c.Advice 15 124 = 0
--Annotation: assign push_data_size 124
def advice_16_124: Prop := c.Advice 16 124 = 0
--Annotation: assign value_rlc 124
def advice_14_124: Prop := c.Advice 14 124 = 0
--Annotation: assign code_hash 124
def advice_4_124: Prop := c.Advice 4 124 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 124
def advice_5_124: Prop := c.Advice 5 124 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_124: Prop := c.Advice 17 124 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_124: Prop := c.Advice 18 124 = 1^(-1)
--Annotation: assign q_enable 125
def fixed_887: Prop := c.Fixed 0 125 = 1
--Annotation: assign q_first 125
def fixed_888: Prop := c.Fixed 1 125 = 0
--Annotation: assign q_last 125
def fixed_889: Prop := c.Fixed 2 125 = 0
--Annotation: assign tag 125
def advice_0_125: Prop := c.Advice 0 125 = 0
--Annotation: assign index 125
def advice_1_125: Prop := c.Advice 1 125 = 0
--Annotation: assign is_code 125
def advice_2_125: Prop := c.Advice 2 125 = 0
--Annotation: assign value 125
def advice_3_125: Prop := c.Advice 3 125 = 0
--Annotation: assign push_data_left 125
def advice_13_125: Prop := c.Advice 13 125 = 0
--Annotation: assign length 125
def advice_15_125: Prop := c.Advice 15 125 = 0
--Annotation: assign push_data_size 125
def advice_16_125: Prop := c.Advice 16 125 = 0
--Annotation: assign value_rlc 125
def advice_14_125: Prop := c.Advice 14 125 = 0
--Annotation: assign code_hash 125
def advice_4_125: Prop := c.Advice 4 125 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 125
def advice_5_125: Prop := c.Advice 5 125 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_125: Prop := c.Advice 17 125 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_125: Prop := c.Advice 18 125 = 1^(-1)
--Annotation: assign q_enable 126
def fixed_890: Prop := c.Fixed 0 126 = 1
--Annotation: assign q_first 126
def fixed_891: Prop := c.Fixed 1 126 = 0
--Annotation: assign q_last 126
def fixed_892: Prop := c.Fixed 2 126 = 0
--Annotation: assign tag 126
def advice_0_126: Prop := c.Advice 0 126 = 0
--Annotation: assign index 126
def advice_1_126: Prop := c.Advice 1 126 = 0
--Annotation: assign is_code 126
def advice_2_126: Prop := c.Advice 2 126 = 0
--Annotation: assign value 126
def advice_3_126: Prop := c.Advice 3 126 = 0
--Annotation: assign push_data_left 126
def advice_13_126: Prop := c.Advice 13 126 = 0
--Annotation: assign length 126
def advice_15_126: Prop := c.Advice 15 126 = 0
--Annotation: assign push_data_size 126
def advice_16_126: Prop := c.Advice 16 126 = 0
--Annotation: assign value_rlc 126
def advice_14_126: Prop := c.Advice 14 126 = 0
--Annotation: assign code_hash 126
def advice_4_126: Prop := c.Advice 4 126 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 126
def advice_5_126: Prop := c.Advice 5 126 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_126: Prop := c.Advice 17 126 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_126: Prop := c.Advice 18 126 = 1^(-1)
--Annotation: assign q_enable 127
def fixed_893: Prop := c.Fixed 0 127 = 1
--Annotation: assign q_first 127
def fixed_894: Prop := c.Fixed 1 127 = 0
--Annotation: assign q_last 127
def fixed_895: Prop := c.Fixed 2 127 = 0
--Annotation: assign tag 127
def advice_0_127: Prop := c.Advice 0 127 = 0
--Annotation: assign index 127
def advice_1_127: Prop := c.Advice 1 127 = 0
--Annotation: assign is_code 127
def advice_2_127: Prop := c.Advice 2 127 = 0
--Annotation: assign value 127
def advice_3_127: Prop := c.Advice 3 127 = 0
--Annotation: assign push_data_left 127
def advice_13_127: Prop := c.Advice 13 127 = 0
--Annotation: assign length 127
def advice_15_127: Prop := c.Advice 15 127 = 0
--Annotation: assign push_data_size 127
def advice_16_127: Prop := c.Advice 16 127 = 0
--Annotation: assign value_rlc 127
def advice_14_127: Prop := c.Advice 14 127 = 0
--Annotation: assign code_hash 127
def advice_4_127: Prop := c.Advice 4 127 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 127
def advice_5_127: Prop := c.Advice 5 127 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_127: Prop := c.Advice 17 127 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_127: Prop := c.Advice 18 127 = 1^(-1)
--Annotation: assign q_enable 128
def fixed_896: Prop := c.Fixed 0 128 = 1
--Annotation: assign q_first 128
def fixed_897: Prop := c.Fixed 1 128 = 0
--Annotation: assign q_last 128
def fixed_898: Prop := c.Fixed 2 128 = 0
--Annotation: assign tag 128
def advice_0_128: Prop := c.Advice 0 128 = 0
--Annotation: assign index 128
def advice_1_128: Prop := c.Advice 1 128 = 0
--Annotation: assign is_code 128
def advice_2_128: Prop := c.Advice 2 128 = 0
--Annotation: assign value 128
def advice_3_128: Prop := c.Advice 3 128 = 0
--Annotation: assign push_data_left 128
def advice_13_128: Prop := c.Advice 13 128 = 0
--Annotation: assign length 128
def advice_15_128: Prop := c.Advice 15 128 = 0
--Annotation: assign push_data_size 128
def advice_16_128: Prop := c.Advice 16 128 = 0
--Annotation: assign value_rlc 128
def advice_14_128: Prop := c.Advice 14 128 = 0
--Annotation: assign code_hash 128
def advice_4_128: Prop := c.Advice 4 128 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 128
def advice_5_128: Prop := c.Advice 5 128 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_128: Prop := c.Advice 17 128 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_128: Prop := c.Advice 18 128 = 1^(-1)
--Annotation: assign q_enable 129
def fixed_899: Prop := c.Fixed 0 129 = 1
--Annotation: assign q_first 129
def fixed_900: Prop := c.Fixed 1 129 = 0
--Annotation: assign q_last 129
def fixed_901: Prop := c.Fixed 2 129 = 0
--Annotation: assign tag 129
def advice_0_129: Prop := c.Advice 0 129 = 0
--Annotation: assign index 129
def advice_1_129: Prop := c.Advice 1 129 = 0
--Annotation: assign is_code 129
def advice_2_129: Prop := c.Advice 2 129 = 0
--Annotation: assign value 129
def advice_3_129: Prop := c.Advice 3 129 = 0
--Annotation: assign push_data_left 129
def advice_13_129: Prop := c.Advice 13 129 = 0
--Annotation: assign length 129
def advice_15_129: Prop := c.Advice 15 129 = 0
--Annotation: assign push_data_size 129
def advice_16_129: Prop := c.Advice 16 129 = 0
--Annotation: assign value_rlc 129
def advice_14_129: Prop := c.Advice 14 129 = 0
--Annotation: assign code_hash 129
def advice_4_129: Prop := c.Advice 4 129 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 129
def advice_5_129: Prop := c.Advice 5 129 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_129: Prop := c.Advice 17 129 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_129: Prop := c.Advice 18 129 = 1^(-1)
--Annotation: assign q_enable 130
def fixed_902: Prop := c.Fixed 0 130 = 1
--Annotation: assign q_first 130
def fixed_903: Prop := c.Fixed 1 130 = 0
--Annotation: assign q_last 130
def fixed_904: Prop := c.Fixed 2 130 = 0
--Annotation: assign tag 130
def advice_0_130: Prop := c.Advice 0 130 = 0
--Annotation: assign index 130
def advice_1_130: Prop := c.Advice 1 130 = 0
--Annotation: assign is_code 130
def advice_2_130: Prop := c.Advice 2 130 = 0
--Annotation: assign value 130
def advice_3_130: Prop := c.Advice 3 130 = 0
--Annotation: assign push_data_left 130
def advice_13_130: Prop := c.Advice 13 130 = 0
--Annotation: assign length 130
def advice_15_130: Prop := c.Advice 15 130 = 0
--Annotation: assign push_data_size 130
def advice_16_130: Prop := c.Advice 16 130 = 0
--Annotation: assign value_rlc 130
def advice_14_130: Prop := c.Advice 14 130 = 0
--Annotation: assign code_hash 130
def advice_4_130: Prop := c.Advice 4 130 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 130
def advice_5_130: Prop := c.Advice 5 130 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_130: Prop := c.Advice 17 130 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_130: Prop := c.Advice 18 130 = 1^(-1)
--Annotation: assign q_enable 131
def fixed_905: Prop := c.Fixed 0 131 = 1
--Annotation: assign q_first 131
def fixed_906: Prop := c.Fixed 1 131 = 0
--Annotation: assign q_last 131
def fixed_907: Prop := c.Fixed 2 131 = 0
--Annotation: assign tag 131
def advice_0_131: Prop := c.Advice 0 131 = 0
--Annotation: assign index 131
def advice_1_131: Prop := c.Advice 1 131 = 0
--Annotation: assign is_code 131
def advice_2_131: Prop := c.Advice 2 131 = 0
--Annotation: assign value 131
def advice_3_131: Prop := c.Advice 3 131 = 0
--Annotation: assign push_data_left 131
def advice_13_131: Prop := c.Advice 13 131 = 0
--Annotation: assign length 131
def advice_15_131: Prop := c.Advice 15 131 = 0
--Annotation: assign push_data_size 131
def advice_16_131: Prop := c.Advice 16 131 = 0
--Annotation: assign value_rlc 131
def advice_14_131: Prop := c.Advice 14 131 = 0
--Annotation: assign code_hash 131
def advice_4_131: Prop := c.Advice 4 131 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 131
def advice_5_131: Prop := c.Advice 5 131 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_131: Prop := c.Advice 17 131 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_131: Prop := c.Advice 18 131 = 1^(-1)
--Annotation: assign q_enable 132
def fixed_908: Prop := c.Fixed 0 132 = 1
--Annotation: assign q_first 132
def fixed_909: Prop := c.Fixed 1 132 = 0
--Annotation: assign q_last 132
def fixed_910: Prop := c.Fixed 2 132 = 0
--Annotation: assign tag 132
def advice_0_132: Prop := c.Advice 0 132 = 0
--Annotation: assign index 132
def advice_1_132: Prop := c.Advice 1 132 = 0
--Annotation: assign is_code 132
def advice_2_132: Prop := c.Advice 2 132 = 0
--Annotation: assign value 132
def advice_3_132: Prop := c.Advice 3 132 = 0
--Annotation: assign push_data_left 132
def advice_13_132: Prop := c.Advice 13 132 = 0
--Annotation: assign length 132
def advice_15_132: Prop := c.Advice 15 132 = 0
--Annotation: assign push_data_size 132
def advice_16_132: Prop := c.Advice 16 132 = 0
--Annotation: assign value_rlc 132
def advice_14_132: Prop := c.Advice 14 132 = 0
--Annotation: assign code_hash 132
def advice_4_132: Prop := c.Advice 4 132 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 132
def advice_5_132: Prop := c.Advice 5 132 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_132: Prop := c.Advice 17 132 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_132: Prop := c.Advice 18 132 = 1^(-1)
--Annotation: assign q_enable 133
def fixed_911: Prop := c.Fixed 0 133 = 1
--Annotation: assign q_first 133
def fixed_912: Prop := c.Fixed 1 133 = 0
--Annotation: assign q_last 133
def fixed_913: Prop := c.Fixed 2 133 = 0
--Annotation: assign tag 133
def advice_0_133: Prop := c.Advice 0 133 = 0
--Annotation: assign index 133
def advice_1_133: Prop := c.Advice 1 133 = 0
--Annotation: assign is_code 133
def advice_2_133: Prop := c.Advice 2 133 = 0
--Annotation: assign value 133
def advice_3_133: Prop := c.Advice 3 133 = 0
--Annotation: assign push_data_left 133
def advice_13_133: Prop := c.Advice 13 133 = 0
--Annotation: assign length 133
def advice_15_133: Prop := c.Advice 15 133 = 0
--Annotation: assign push_data_size 133
def advice_16_133: Prop := c.Advice 16 133 = 0
--Annotation: assign value_rlc 133
def advice_14_133: Prop := c.Advice 14 133 = 0
--Annotation: assign code_hash 133
def advice_4_133: Prop := c.Advice 4 133 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 133
def advice_5_133: Prop := c.Advice 5 133 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_133: Prop := c.Advice 17 133 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_133: Prop := c.Advice 18 133 = 1^(-1)
--Annotation: assign q_enable 134
def fixed_914: Prop := c.Fixed 0 134 = 1
--Annotation: assign q_first 134
def fixed_915: Prop := c.Fixed 1 134 = 0
--Annotation: assign q_last 134
def fixed_916: Prop := c.Fixed 2 134 = 0
--Annotation: assign tag 134
def advice_0_134: Prop := c.Advice 0 134 = 0
--Annotation: assign index 134
def advice_1_134: Prop := c.Advice 1 134 = 0
--Annotation: assign is_code 134
def advice_2_134: Prop := c.Advice 2 134 = 0
--Annotation: assign value 134
def advice_3_134: Prop := c.Advice 3 134 = 0
--Annotation: assign push_data_left 134
def advice_13_134: Prop := c.Advice 13 134 = 0
--Annotation: assign length 134
def advice_15_134: Prop := c.Advice 15 134 = 0
--Annotation: assign push_data_size 134
def advice_16_134: Prop := c.Advice 16 134 = 0
--Annotation: assign value_rlc 134
def advice_14_134: Prop := c.Advice 14 134 = 0
--Annotation: assign code_hash 134
def advice_4_134: Prop := c.Advice 4 134 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 134
def advice_5_134: Prop := c.Advice 5 134 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_134: Prop := c.Advice 17 134 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_134: Prop := c.Advice 18 134 = 1^(-1)
--Annotation: assign q_enable 135
def fixed_917: Prop := c.Fixed 0 135 = 1
--Annotation: assign q_first 135
def fixed_918: Prop := c.Fixed 1 135 = 0
--Annotation: assign q_last 135
def fixed_919: Prop := c.Fixed 2 135 = 0
--Annotation: assign tag 135
def advice_0_135: Prop := c.Advice 0 135 = 0
--Annotation: assign index 135
def advice_1_135: Prop := c.Advice 1 135 = 0
--Annotation: assign is_code 135
def advice_2_135: Prop := c.Advice 2 135 = 0
--Annotation: assign value 135
def advice_3_135: Prop := c.Advice 3 135 = 0
--Annotation: assign push_data_left 135
def advice_13_135: Prop := c.Advice 13 135 = 0
--Annotation: assign length 135
def advice_15_135: Prop := c.Advice 15 135 = 0
--Annotation: assign push_data_size 135
def advice_16_135: Prop := c.Advice 16 135 = 0
--Annotation: assign value_rlc 135
def advice_14_135: Prop := c.Advice 14 135 = 0
--Annotation: assign code_hash 135
def advice_4_135: Prop := c.Advice 4 135 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 135
def advice_5_135: Prop := c.Advice 5 135 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_135: Prop := c.Advice 17 135 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_135: Prop := c.Advice 18 135 = 1^(-1)
--Annotation: assign q_enable 136
def fixed_920: Prop := c.Fixed 0 136 = 1
--Annotation: assign q_first 136
def fixed_921: Prop := c.Fixed 1 136 = 0
--Annotation: assign q_last 136
def fixed_922: Prop := c.Fixed 2 136 = 0
--Annotation: assign tag 136
def advice_0_136: Prop := c.Advice 0 136 = 0
--Annotation: assign index 136
def advice_1_136: Prop := c.Advice 1 136 = 0
--Annotation: assign is_code 136
def advice_2_136: Prop := c.Advice 2 136 = 0
--Annotation: assign value 136
def advice_3_136: Prop := c.Advice 3 136 = 0
--Annotation: assign push_data_left 136
def advice_13_136: Prop := c.Advice 13 136 = 0
--Annotation: assign length 136
def advice_15_136: Prop := c.Advice 15 136 = 0
--Annotation: assign push_data_size 136
def advice_16_136: Prop := c.Advice 16 136 = 0
--Annotation: assign value_rlc 136
def advice_14_136: Prop := c.Advice 14 136 = 0
--Annotation: assign code_hash 136
def advice_4_136: Prop := c.Advice 4 136 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 136
def advice_5_136: Prop := c.Advice 5 136 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_136: Prop := c.Advice 17 136 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_136: Prop := c.Advice 18 136 = 1^(-1)
--Annotation: assign q_enable 137
def fixed_923: Prop := c.Fixed 0 137 = 1
--Annotation: assign q_first 137
def fixed_924: Prop := c.Fixed 1 137 = 0
--Annotation: assign q_last 137
def fixed_925: Prop := c.Fixed 2 137 = 0
--Annotation: assign tag 137
def advice_0_137: Prop := c.Advice 0 137 = 0
--Annotation: assign index 137
def advice_1_137: Prop := c.Advice 1 137 = 0
--Annotation: assign is_code 137
def advice_2_137: Prop := c.Advice 2 137 = 0
--Annotation: assign value 137
def advice_3_137: Prop := c.Advice 3 137 = 0
--Annotation: assign push_data_left 137
def advice_13_137: Prop := c.Advice 13 137 = 0
--Annotation: assign length 137
def advice_15_137: Prop := c.Advice 15 137 = 0
--Annotation: assign push_data_size 137
def advice_16_137: Prop := c.Advice 16 137 = 0
--Annotation: assign value_rlc 137
def advice_14_137: Prop := c.Advice 14 137 = 0
--Annotation: assign code_hash 137
def advice_4_137: Prop := c.Advice 4 137 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 137
def advice_5_137: Prop := c.Advice 5 137 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_137: Prop := c.Advice 17 137 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_137: Prop := c.Advice 18 137 = 1^(-1)
--Annotation: assign q_enable 138
def fixed_926: Prop := c.Fixed 0 138 = 1
--Annotation: assign q_first 138
def fixed_927: Prop := c.Fixed 1 138 = 0
--Annotation: assign q_last 138
def fixed_928: Prop := c.Fixed 2 138 = 0
--Annotation: assign tag 138
def advice_0_138: Prop := c.Advice 0 138 = 0
--Annotation: assign index 138
def advice_1_138: Prop := c.Advice 1 138 = 0
--Annotation: assign is_code 138
def advice_2_138: Prop := c.Advice 2 138 = 0
--Annotation: assign value 138
def advice_3_138: Prop := c.Advice 3 138 = 0
--Annotation: assign push_data_left 138
def advice_13_138: Prop := c.Advice 13 138 = 0
--Annotation: assign length 138
def advice_15_138: Prop := c.Advice 15 138 = 0
--Annotation: assign push_data_size 138
def advice_16_138: Prop := c.Advice 16 138 = 0
--Annotation: assign value_rlc 138
def advice_14_138: Prop := c.Advice 14 138 = 0
--Annotation: assign code_hash 138
def advice_4_138: Prop := c.Advice 4 138 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 138
def advice_5_138: Prop := c.Advice 5 138 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_138: Prop := c.Advice 17 138 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_138: Prop := c.Advice 18 138 = 1^(-1)
--Annotation: assign q_enable 139
def fixed_929: Prop := c.Fixed 0 139 = 1
--Annotation: assign q_first 139
def fixed_930: Prop := c.Fixed 1 139 = 0
--Annotation: assign q_last 139
def fixed_931: Prop := c.Fixed 2 139 = 0
--Annotation: assign tag 139
def advice_0_139: Prop := c.Advice 0 139 = 0
--Annotation: assign index 139
def advice_1_139: Prop := c.Advice 1 139 = 0
--Annotation: assign is_code 139
def advice_2_139: Prop := c.Advice 2 139 = 0
--Annotation: assign value 139
def advice_3_139: Prop := c.Advice 3 139 = 0
--Annotation: assign push_data_left 139
def advice_13_139: Prop := c.Advice 13 139 = 0
--Annotation: assign length 139
def advice_15_139: Prop := c.Advice 15 139 = 0
--Annotation: assign push_data_size 139
def advice_16_139: Prop := c.Advice 16 139 = 0
--Annotation: assign value_rlc 139
def advice_14_139: Prop := c.Advice 14 139 = 0
--Annotation: assign code_hash 139
def advice_4_139: Prop := c.Advice 4 139 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 139
def advice_5_139: Prop := c.Advice 5 139 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_139: Prop := c.Advice 17 139 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_139: Prop := c.Advice 18 139 = 1^(-1)
--Annotation: assign q_enable 140
def fixed_932: Prop := c.Fixed 0 140 = 1
--Annotation: assign q_first 140
def fixed_933: Prop := c.Fixed 1 140 = 0
--Annotation: assign q_last 140
def fixed_934: Prop := c.Fixed 2 140 = 0
--Annotation: assign tag 140
def advice_0_140: Prop := c.Advice 0 140 = 0
--Annotation: assign index 140
def advice_1_140: Prop := c.Advice 1 140 = 0
--Annotation: assign is_code 140
def advice_2_140: Prop := c.Advice 2 140 = 0
--Annotation: assign value 140
def advice_3_140: Prop := c.Advice 3 140 = 0
--Annotation: assign push_data_left 140
def advice_13_140: Prop := c.Advice 13 140 = 0
--Annotation: assign length 140
def advice_15_140: Prop := c.Advice 15 140 = 0
--Annotation: assign push_data_size 140
def advice_16_140: Prop := c.Advice 16 140 = 0
--Annotation: assign value_rlc 140
def advice_14_140: Prop := c.Advice 14 140 = 0
--Annotation: assign code_hash 140
def advice_4_140: Prop := c.Advice 4 140 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 140
def advice_5_140: Prop := c.Advice 5 140 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_140: Prop := c.Advice 17 140 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_140: Prop := c.Advice 18 140 = 1^(-1)
--Annotation: assign q_enable 141
def fixed_935: Prop := c.Fixed 0 141 = 1
--Annotation: assign q_first 141
def fixed_936: Prop := c.Fixed 1 141 = 0
--Annotation: assign q_last 141
def fixed_937: Prop := c.Fixed 2 141 = 0
--Annotation: assign tag 141
def advice_0_141: Prop := c.Advice 0 141 = 0
--Annotation: assign index 141
def advice_1_141: Prop := c.Advice 1 141 = 0
--Annotation: assign is_code 141
def advice_2_141: Prop := c.Advice 2 141 = 0
--Annotation: assign value 141
def advice_3_141: Prop := c.Advice 3 141 = 0
--Annotation: assign push_data_left 141
def advice_13_141: Prop := c.Advice 13 141 = 0
--Annotation: assign length 141
def advice_15_141: Prop := c.Advice 15 141 = 0
--Annotation: assign push_data_size 141
def advice_16_141: Prop := c.Advice 16 141 = 0
--Annotation: assign value_rlc 141
def advice_14_141: Prop := c.Advice 14 141 = 0
--Annotation: assign code_hash 141
def advice_4_141: Prop := c.Advice 4 141 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 141
def advice_5_141: Prop := c.Advice 5 141 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_141: Prop := c.Advice 17 141 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_141: Prop := c.Advice 18 141 = 1^(-1)
--Annotation: assign q_enable 142
def fixed_938: Prop := c.Fixed 0 142 = 1
--Annotation: assign q_first 142
def fixed_939: Prop := c.Fixed 1 142 = 0
--Annotation: assign q_last 142
def fixed_940: Prop := c.Fixed 2 142 = 0
--Annotation: assign tag 142
def advice_0_142: Prop := c.Advice 0 142 = 0
--Annotation: assign index 142
def advice_1_142: Prop := c.Advice 1 142 = 0
--Annotation: assign is_code 142
def advice_2_142: Prop := c.Advice 2 142 = 0
--Annotation: assign value 142
def advice_3_142: Prop := c.Advice 3 142 = 0
--Annotation: assign push_data_left 142
def advice_13_142: Prop := c.Advice 13 142 = 0
--Annotation: assign length 142
def advice_15_142: Prop := c.Advice 15 142 = 0
--Annotation: assign push_data_size 142
def advice_16_142: Prop := c.Advice 16 142 = 0
--Annotation: assign value_rlc 142
def advice_14_142: Prop := c.Advice 14 142 = 0
--Annotation: assign code_hash 142
def advice_4_142: Prop := c.Advice 4 142 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 142
def advice_5_142: Prop := c.Advice 5 142 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_142: Prop := c.Advice 17 142 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_142: Prop := c.Advice 18 142 = 1^(-1)
--Annotation: assign q_enable 143
def fixed_941: Prop := c.Fixed 0 143 = 1
--Annotation: assign q_first 143
def fixed_942: Prop := c.Fixed 1 143 = 0
--Annotation: assign q_last 143
def fixed_943: Prop := c.Fixed 2 143 = 0
--Annotation: assign tag 143
def advice_0_143: Prop := c.Advice 0 143 = 0
--Annotation: assign index 143
def advice_1_143: Prop := c.Advice 1 143 = 0
--Annotation: assign is_code 143
def advice_2_143: Prop := c.Advice 2 143 = 0
--Annotation: assign value 143
def advice_3_143: Prop := c.Advice 3 143 = 0
--Annotation: assign push_data_left 143
def advice_13_143: Prop := c.Advice 13 143 = 0
--Annotation: assign length 143
def advice_15_143: Prop := c.Advice 15 143 = 0
--Annotation: assign push_data_size 143
def advice_16_143: Prop := c.Advice 16 143 = 0
--Annotation: assign value_rlc 143
def advice_14_143: Prop := c.Advice 14 143 = 0
--Annotation: assign code_hash 143
def advice_4_143: Prop := c.Advice 4 143 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 143
def advice_5_143: Prop := c.Advice 5 143 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_143: Prop := c.Advice 17 143 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_143: Prop := c.Advice 18 143 = 1^(-1)
--Annotation: assign q_enable 144
def fixed_944: Prop := c.Fixed 0 144 = 1
--Annotation: assign q_first 144
def fixed_945: Prop := c.Fixed 1 144 = 0
--Annotation: assign q_last 144
def fixed_946: Prop := c.Fixed 2 144 = 0
--Annotation: assign tag 144
def advice_0_144: Prop := c.Advice 0 144 = 0
--Annotation: assign index 144
def advice_1_144: Prop := c.Advice 1 144 = 0
--Annotation: assign is_code 144
def advice_2_144: Prop := c.Advice 2 144 = 0
--Annotation: assign value 144
def advice_3_144: Prop := c.Advice 3 144 = 0
--Annotation: assign push_data_left 144
def advice_13_144: Prop := c.Advice 13 144 = 0
--Annotation: assign length 144
def advice_15_144: Prop := c.Advice 15 144 = 0
--Annotation: assign push_data_size 144
def advice_16_144: Prop := c.Advice 16 144 = 0
--Annotation: assign value_rlc 144
def advice_14_144: Prop := c.Advice 14 144 = 0
--Annotation: assign code_hash 144
def advice_4_144: Prop := c.Advice 4 144 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 144
def advice_5_144: Prop := c.Advice 5 144 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_144: Prop := c.Advice 17 144 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_144: Prop := c.Advice 18 144 = 1^(-1)
--Annotation: assign q_enable 145
def fixed_947: Prop := c.Fixed 0 145 = 1
--Annotation: assign q_first 145
def fixed_948: Prop := c.Fixed 1 145 = 0
--Annotation: assign q_last 145
def fixed_949: Prop := c.Fixed 2 145 = 0
--Annotation: assign tag 145
def advice_0_145: Prop := c.Advice 0 145 = 0
--Annotation: assign index 145
def advice_1_145: Prop := c.Advice 1 145 = 0
--Annotation: assign is_code 145
def advice_2_145: Prop := c.Advice 2 145 = 0
--Annotation: assign value 145
def advice_3_145: Prop := c.Advice 3 145 = 0
--Annotation: assign push_data_left 145
def advice_13_145: Prop := c.Advice 13 145 = 0
--Annotation: assign length 145
def advice_15_145: Prop := c.Advice 15 145 = 0
--Annotation: assign push_data_size 145
def advice_16_145: Prop := c.Advice 16 145 = 0
--Annotation: assign value_rlc 145
def advice_14_145: Prop := c.Advice 14 145 = 0
--Annotation: assign code_hash 145
def advice_4_145: Prop := c.Advice 4 145 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 145
def advice_5_145: Prop := c.Advice 5 145 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_145: Prop := c.Advice 17 145 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_145: Prop := c.Advice 18 145 = 1^(-1)
--Annotation: assign q_enable 146
def fixed_950: Prop := c.Fixed 0 146 = 1
--Annotation: assign q_first 146
def fixed_951: Prop := c.Fixed 1 146 = 0
--Annotation: assign q_last 146
def fixed_952: Prop := c.Fixed 2 146 = 0
--Annotation: assign tag 146
def advice_0_146: Prop := c.Advice 0 146 = 0
--Annotation: assign index 146
def advice_1_146: Prop := c.Advice 1 146 = 0
--Annotation: assign is_code 146
def advice_2_146: Prop := c.Advice 2 146 = 0
--Annotation: assign value 146
def advice_3_146: Prop := c.Advice 3 146 = 0
--Annotation: assign push_data_left 146
def advice_13_146: Prop := c.Advice 13 146 = 0
--Annotation: assign length 146
def advice_15_146: Prop := c.Advice 15 146 = 0
--Annotation: assign push_data_size 146
def advice_16_146: Prop := c.Advice 16 146 = 0
--Annotation: assign value_rlc 146
def advice_14_146: Prop := c.Advice 14 146 = 0
--Annotation: assign code_hash 146
def advice_4_146: Prop := c.Advice 4 146 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 146
def advice_5_146: Prop := c.Advice 5 146 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_146: Prop := c.Advice 17 146 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_146: Prop := c.Advice 18 146 = 1^(-1)
--Annotation: assign q_enable 147
def fixed_953: Prop := c.Fixed 0 147 = 1
--Annotation: assign q_first 147
def fixed_954: Prop := c.Fixed 1 147 = 0
--Annotation: assign q_last 147
def fixed_955: Prop := c.Fixed 2 147 = 0
--Annotation: assign tag 147
def advice_0_147: Prop := c.Advice 0 147 = 0
--Annotation: assign index 147
def advice_1_147: Prop := c.Advice 1 147 = 0
--Annotation: assign is_code 147
def advice_2_147: Prop := c.Advice 2 147 = 0
--Annotation: assign value 147
def advice_3_147: Prop := c.Advice 3 147 = 0
--Annotation: assign push_data_left 147
def advice_13_147: Prop := c.Advice 13 147 = 0
--Annotation: assign length 147
def advice_15_147: Prop := c.Advice 15 147 = 0
--Annotation: assign push_data_size 147
def advice_16_147: Prop := c.Advice 16 147 = 0
--Annotation: assign value_rlc 147
def advice_14_147: Prop := c.Advice 14 147 = 0
--Annotation: assign code_hash 147
def advice_4_147: Prop := c.Advice 4 147 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 147
def advice_5_147: Prop := c.Advice 5 147 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_147: Prop := c.Advice 17 147 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_147: Prop := c.Advice 18 147 = 1^(-1)
--Annotation: assign q_enable 148
def fixed_956: Prop := c.Fixed 0 148 = 1
--Annotation: assign q_first 148
def fixed_957: Prop := c.Fixed 1 148 = 0
--Annotation: assign q_last 148
def fixed_958: Prop := c.Fixed 2 148 = 0
--Annotation: assign tag 148
def advice_0_148: Prop := c.Advice 0 148 = 0
--Annotation: assign index 148
def advice_1_148: Prop := c.Advice 1 148 = 0
--Annotation: assign is_code 148
def advice_2_148: Prop := c.Advice 2 148 = 0
--Annotation: assign value 148
def advice_3_148: Prop := c.Advice 3 148 = 0
--Annotation: assign push_data_left 148
def advice_13_148: Prop := c.Advice 13 148 = 0
--Annotation: assign length 148
def advice_15_148: Prop := c.Advice 15 148 = 0
--Annotation: assign push_data_size 148
def advice_16_148: Prop := c.Advice 16 148 = 0
--Annotation: assign value_rlc 148
def advice_14_148: Prop := c.Advice 14 148 = 0
--Annotation: assign code_hash 148
def advice_4_148: Prop := c.Advice 4 148 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 148
def advice_5_148: Prop := c.Advice 5 148 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_148: Prop := c.Advice 17 148 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_148: Prop := c.Advice 18 148 = 1^(-1)
--Annotation: assign q_enable 149
def fixed_959: Prop := c.Fixed 0 149 = 1
--Annotation: assign q_first 149
def fixed_960: Prop := c.Fixed 1 149 = 0
--Annotation: assign q_last 149
def fixed_961: Prop := c.Fixed 2 149 = 0
--Annotation: assign tag 149
def advice_0_149: Prop := c.Advice 0 149 = 0
--Annotation: assign index 149
def advice_1_149: Prop := c.Advice 1 149 = 0
--Annotation: assign is_code 149
def advice_2_149: Prop := c.Advice 2 149 = 0
--Annotation: assign value 149
def advice_3_149: Prop := c.Advice 3 149 = 0
--Annotation: assign push_data_left 149
def advice_13_149: Prop := c.Advice 13 149 = 0
--Annotation: assign length 149
def advice_15_149: Prop := c.Advice 15 149 = 0
--Annotation: assign push_data_size 149
def advice_16_149: Prop := c.Advice 16 149 = 0
--Annotation: assign value_rlc 149
def advice_14_149: Prop := c.Advice 14 149 = 0
--Annotation: assign code_hash 149
def advice_4_149: Prop := c.Advice 4 149 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 149
def advice_5_149: Prop := c.Advice 5 149 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_149: Prop := c.Advice 17 149 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_149: Prop := c.Advice 18 149 = 1^(-1)
--Annotation: assign q_enable 150
def fixed_962: Prop := c.Fixed 0 150 = 1
--Annotation: assign q_first 150
def fixed_963: Prop := c.Fixed 1 150 = 0
--Annotation: assign q_last 150
def fixed_964: Prop := c.Fixed 2 150 = 0
--Annotation: assign tag 150
def advice_0_150: Prop := c.Advice 0 150 = 0
--Annotation: assign index 150
def advice_1_150: Prop := c.Advice 1 150 = 0
--Annotation: assign is_code 150
def advice_2_150: Prop := c.Advice 2 150 = 0
--Annotation: assign value 150
def advice_3_150: Prop := c.Advice 3 150 = 0
--Annotation: assign push_data_left 150
def advice_13_150: Prop := c.Advice 13 150 = 0
--Annotation: assign length 150
def advice_15_150: Prop := c.Advice 15 150 = 0
--Annotation: assign push_data_size 150
def advice_16_150: Prop := c.Advice 16 150 = 0
--Annotation: assign value_rlc 150
def advice_14_150: Prop := c.Advice 14 150 = 0
--Annotation: assign code_hash 150
def advice_4_150: Prop := c.Advice 4 150 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 150
def advice_5_150: Prop := c.Advice 5 150 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_150: Prop := c.Advice 17 150 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_150: Prop := c.Advice 18 150 = 1^(-1)
--Annotation: assign q_enable 151
def fixed_965: Prop := c.Fixed 0 151 = 1
--Annotation: assign q_first 151
def fixed_966: Prop := c.Fixed 1 151 = 0
--Annotation: assign q_last 151
def fixed_967: Prop := c.Fixed 2 151 = 0
--Annotation: assign tag 151
def advice_0_151: Prop := c.Advice 0 151 = 0
--Annotation: assign index 151
def advice_1_151: Prop := c.Advice 1 151 = 0
--Annotation: assign is_code 151
def advice_2_151: Prop := c.Advice 2 151 = 0
--Annotation: assign value 151
def advice_3_151: Prop := c.Advice 3 151 = 0
--Annotation: assign push_data_left 151
def advice_13_151: Prop := c.Advice 13 151 = 0
--Annotation: assign length 151
def advice_15_151: Prop := c.Advice 15 151 = 0
--Annotation: assign push_data_size 151
def advice_16_151: Prop := c.Advice 16 151 = 0
--Annotation: assign value_rlc 151
def advice_14_151: Prop := c.Advice 14 151 = 0
--Annotation: assign code_hash 151
def advice_4_151: Prop := c.Advice 4 151 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 151
def advice_5_151: Prop := c.Advice 5 151 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_151: Prop := c.Advice 17 151 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_151: Prop := c.Advice 18 151 = 1^(-1)
--Annotation: assign q_enable 152
def fixed_968: Prop := c.Fixed 0 152 = 1
--Annotation: assign q_first 152
def fixed_969: Prop := c.Fixed 1 152 = 0
--Annotation: assign q_last 152
def fixed_970: Prop := c.Fixed 2 152 = 0
--Annotation: assign tag 152
def advice_0_152: Prop := c.Advice 0 152 = 0
--Annotation: assign index 152
def advice_1_152: Prop := c.Advice 1 152 = 0
--Annotation: assign is_code 152
def advice_2_152: Prop := c.Advice 2 152 = 0
--Annotation: assign value 152
def advice_3_152: Prop := c.Advice 3 152 = 0
--Annotation: assign push_data_left 152
def advice_13_152: Prop := c.Advice 13 152 = 0
--Annotation: assign length 152
def advice_15_152: Prop := c.Advice 15 152 = 0
--Annotation: assign push_data_size 152
def advice_16_152: Prop := c.Advice 16 152 = 0
--Annotation: assign value_rlc 152
def advice_14_152: Prop := c.Advice 14 152 = 0
--Annotation: assign code_hash 152
def advice_4_152: Prop := c.Advice 4 152 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 152
def advice_5_152: Prop := c.Advice 5 152 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_152: Prop := c.Advice 17 152 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_152: Prop := c.Advice 18 152 = 1^(-1)
--Annotation: assign q_enable 153
def fixed_971: Prop := c.Fixed 0 153 = 1
--Annotation: assign q_first 153
def fixed_972: Prop := c.Fixed 1 153 = 0
--Annotation: assign q_last 153
def fixed_973: Prop := c.Fixed 2 153 = 0
--Annotation: assign tag 153
def advice_0_153: Prop := c.Advice 0 153 = 0
--Annotation: assign index 153
def advice_1_153: Prop := c.Advice 1 153 = 0
--Annotation: assign is_code 153
def advice_2_153: Prop := c.Advice 2 153 = 0
--Annotation: assign value 153
def advice_3_153: Prop := c.Advice 3 153 = 0
--Annotation: assign push_data_left 153
def advice_13_153: Prop := c.Advice 13 153 = 0
--Annotation: assign length 153
def advice_15_153: Prop := c.Advice 15 153 = 0
--Annotation: assign push_data_size 153
def advice_16_153: Prop := c.Advice 16 153 = 0
--Annotation: assign value_rlc 153
def advice_14_153: Prop := c.Advice 14 153 = 0
--Annotation: assign code_hash 153
def advice_4_153: Prop := c.Advice 4 153 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 153
def advice_5_153: Prop := c.Advice 5 153 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_153: Prop := c.Advice 17 153 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_153: Prop := c.Advice 18 153 = 1^(-1)
--Annotation: assign q_enable 154
def fixed_974: Prop := c.Fixed 0 154 = 1
--Annotation: assign q_first 154
def fixed_975: Prop := c.Fixed 1 154 = 0
--Annotation: assign q_last 154
def fixed_976: Prop := c.Fixed 2 154 = 0
--Annotation: assign tag 154
def advice_0_154: Prop := c.Advice 0 154 = 0
--Annotation: assign index 154
def advice_1_154: Prop := c.Advice 1 154 = 0
--Annotation: assign is_code 154
def advice_2_154: Prop := c.Advice 2 154 = 0
--Annotation: assign value 154
def advice_3_154: Prop := c.Advice 3 154 = 0
--Annotation: assign push_data_left 154
def advice_13_154: Prop := c.Advice 13 154 = 0
--Annotation: assign length 154
def advice_15_154: Prop := c.Advice 15 154 = 0
--Annotation: assign push_data_size 154
def advice_16_154: Prop := c.Advice 16 154 = 0
--Annotation: assign value_rlc 154
def advice_14_154: Prop := c.Advice 14 154 = 0
--Annotation: assign code_hash 154
def advice_4_154: Prop := c.Advice 4 154 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 154
def advice_5_154: Prop := c.Advice 5 154 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_154: Prop := c.Advice 17 154 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_154: Prop := c.Advice 18 154 = 1^(-1)
--Annotation: assign q_enable 155
def fixed_977: Prop := c.Fixed 0 155 = 1
--Annotation: assign q_first 155
def fixed_978: Prop := c.Fixed 1 155 = 0
--Annotation: assign q_last 155
def fixed_979: Prop := c.Fixed 2 155 = 0
--Annotation: assign tag 155
def advice_0_155: Prop := c.Advice 0 155 = 0
--Annotation: assign index 155
def advice_1_155: Prop := c.Advice 1 155 = 0
--Annotation: assign is_code 155
def advice_2_155: Prop := c.Advice 2 155 = 0
--Annotation: assign value 155
def advice_3_155: Prop := c.Advice 3 155 = 0
--Annotation: assign push_data_left 155
def advice_13_155: Prop := c.Advice 13 155 = 0
--Annotation: assign length 155
def advice_15_155: Prop := c.Advice 15 155 = 0
--Annotation: assign push_data_size 155
def advice_16_155: Prop := c.Advice 16 155 = 0
--Annotation: assign value_rlc 155
def advice_14_155: Prop := c.Advice 14 155 = 0
--Annotation: assign code_hash 155
def advice_4_155: Prop := c.Advice 4 155 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 155
def advice_5_155: Prop := c.Advice 5 155 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_155: Prop := c.Advice 17 155 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_155: Prop := c.Advice 18 155 = 1^(-1)
--Annotation: assign q_enable 156
def fixed_980: Prop := c.Fixed 0 156 = 1
--Annotation: assign q_first 156
def fixed_981: Prop := c.Fixed 1 156 = 0
--Annotation: assign q_last 156
def fixed_982: Prop := c.Fixed 2 156 = 0
--Annotation: assign tag 156
def advice_0_156: Prop := c.Advice 0 156 = 0
--Annotation: assign index 156
def advice_1_156: Prop := c.Advice 1 156 = 0
--Annotation: assign is_code 156
def advice_2_156: Prop := c.Advice 2 156 = 0
--Annotation: assign value 156
def advice_3_156: Prop := c.Advice 3 156 = 0
--Annotation: assign push_data_left 156
def advice_13_156: Prop := c.Advice 13 156 = 0
--Annotation: assign length 156
def advice_15_156: Prop := c.Advice 15 156 = 0
--Annotation: assign push_data_size 156
def advice_16_156: Prop := c.Advice 16 156 = 0
--Annotation: assign value_rlc 156
def advice_14_156: Prop := c.Advice 14 156 = 0
--Annotation: assign code_hash 156
def advice_4_156: Prop := c.Advice 4 156 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 156
def advice_5_156: Prop := c.Advice 5 156 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_156: Prop := c.Advice 17 156 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_156: Prop := c.Advice 18 156 = 1^(-1)
--Annotation: assign q_enable 157
def fixed_983: Prop := c.Fixed 0 157 = 1
--Annotation: assign q_first 157
def fixed_984: Prop := c.Fixed 1 157 = 0
--Annotation: assign q_last 157
def fixed_985: Prop := c.Fixed 2 157 = 0
--Annotation: assign tag 157
def advice_0_157: Prop := c.Advice 0 157 = 0
--Annotation: assign index 157
def advice_1_157: Prop := c.Advice 1 157 = 0
--Annotation: assign is_code 157
def advice_2_157: Prop := c.Advice 2 157 = 0
--Annotation: assign value 157
def advice_3_157: Prop := c.Advice 3 157 = 0
--Annotation: assign push_data_left 157
def advice_13_157: Prop := c.Advice 13 157 = 0
--Annotation: assign length 157
def advice_15_157: Prop := c.Advice 15 157 = 0
--Annotation: assign push_data_size 157
def advice_16_157: Prop := c.Advice 16 157 = 0
--Annotation: assign value_rlc 157
def advice_14_157: Prop := c.Advice 14 157 = 0
--Annotation: assign code_hash 157
def advice_4_157: Prop := c.Advice 4 157 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 157
def advice_5_157: Prop := c.Advice 5 157 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_157: Prop := c.Advice 17 157 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_157: Prop := c.Advice 18 157 = 1^(-1)
--Annotation: assign q_enable 158
def fixed_986: Prop := c.Fixed 0 158 = 1
--Annotation: assign q_first 158
def fixed_987: Prop := c.Fixed 1 158 = 0
--Annotation: assign q_last 158
def fixed_988: Prop := c.Fixed 2 158 = 0
--Annotation: assign tag 158
def advice_0_158: Prop := c.Advice 0 158 = 0
--Annotation: assign index 158
def advice_1_158: Prop := c.Advice 1 158 = 0
--Annotation: assign is_code 158
def advice_2_158: Prop := c.Advice 2 158 = 0
--Annotation: assign value 158
def advice_3_158: Prop := c.Advice 3 158 = 0
--Annotation: assign push_data_left 158
def advice_13_158: Prop := c.Advice 13 158 = 0
--Annotation: assign length 158
def advice_15_158: Prop := c.Advice 15 158 = 0
--Annotation: assign push_data_size 158
def advice_16_158: Prop := c.Advice 16 158 = 0
--Annotation: assign value_rlc 158
def advice_14_158: Prop := c.Advice 14 158 = 0
--Annotation: assign code_hash 158
def advice_4_158: Prop := c.Advice 4 158 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 158
def advice_5_158: Prop := c.Advice 5 158 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_158: Prop := c.Advice 17 158 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_158: Prop := c.Advice 18 158 = 1^(-1)
--Annotation: assign q_enable 159
def fixed_989: Prop := c.Fixed 0 159 = 1
--Annotation: assign q_first 159
def fixed_990: Prop := c.Fixed 1 159 = 0
--Annotation: assign q_last 159
def fixed_991: Prop := c.Fixed 2 159 = 0
--Annotation: assign tag 159
def advice_0_159: Prop := c.Advice 0 159 = 0
--Annotation: assign index 159
def advice_1_159: Prop := c.Advice 1 159 = 0
--Annotation: assign is_code 159
def advice_2_159: Prop := c.Advice 2 159 = 0
--Annotation: assign value 159
def advice_3_159: Prop := c.Advice 3 159 = 0
--Annotation: assign push_data_left 159
def advice_13_159: Prop := c.Advice 13 159 = 0
--Annotation: assign length 159
def advice_15_159: Prop := c.Advice 15 159 = 0
--Annotation: assign push_data_size 159
def advice_16_159: Prop := c.Advice 16 159 = 0
--Annotation: assign value_rlc 159
def advice_14_159: Prop := c.Advice 14 159 = 0
--Annotation: assign code_hash 159
def advice_4_159: Prop := c.Advice 4 159 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 159
def advice_5_159: Prop := c.Advice 5 159 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_159: Prop := c.Advice 17 159 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_159: Prop := c.Advice 18 159 = 1^(-1)
--Annotation: assign q_enable 160
def fixed_992: Prop := c.Fixed 0 160 = 1
--Annotation: assign q_first 160
def fixed_993: Prop := c.Fixed 1 160 = 0
--Annotation: assign q_last 160
def fixed_994: Prop := c.Fixed 2 160 = 0
--Annotation: assign tag 160
def advice_0_160: Prop := c.Advice 0 160 = 0
--Annotation: assign index 160
def advice_1_160: Prop := c.Advice 1 160 = 0
--Annotation: assign is_code 160
def advice_2_160: Prop := c.Advice 2 160 = 0
--Annotation: assign value 160
def advice_3_160: Prop := c.Advice 3 160 = 0
--Annotation: assign push_data_left 160
def advice_13_160: Prop := c.Advice 13 160 = 0
--Annotation: assign length 160
def advice_15_160: Prop := c.Advice 15 160 = 0
--Annotation: assign push_data_size 160
def advice_16_160: Prop := c.Advice 16 160 = 0
--Annotation: assign value_rlc 160
def advice_14_160: Prop := c.Advice 14 160 = 0
--Annotation: assign code_hash 160
def advice_4_160: Prop := c.Advice 4 160 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 160
def advice_5_160: Prop := c.Advice 5 160 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_160: Prop := c.Advice 17 160 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_160: Prop := c.Advice 18 160 = 1^(-1)
--Annotation: assign q_enable 161
def fixed_995: Prop := c.Fixed 0 161 = 1
--Annotation: assign q_first 161
def fixed_996: Prop := c.Fixed 1 161 = 0
--Annotation: assign q_last 161
def fixed_997: Prop := c.Fixed 2 161 = 0
--Annotation: assign tag 161
def advice_0_161: Prop := c.Advice 0 161 = 0
--Annotation: assign index 161
def advice_1_161: Prop := c.Advice 1 161 = 0
--Annotation: assign is_code 161
def advice_2_161: Prop := c.Advice 2 161 = 0
--Annotation: assign value 161
def advice_3_161: Prop := c.Advice 3 161 = 0
--Annotation: assign push_data_left 161
def advice_13_161: Prop := c.Advice 13 161 = 0
--Annotation: assign length 161
def advice_15_161: Prop := c.Advice 15 161 = 0
--Annotation: assign push_data_size 161
def advice_16_161: Prop := c.Advice 16 161 = 0
--Annotation: assign value_rlc 161
def advice_14_161: Prop := c.Advice 14 161 = 0
--Annotation: assign code_hash 161
def advice_4_161: Prop := c.Advice 4 161 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 161
def advice_5_161: Prop := c.Advice 5 161 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_161: Prop := c.Advice 17 161 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_161: Prop := c.Advice 18 161 = 1^(-1)
--Annotation: assign q_enable 162
def fixed_998: Prop := c.Fixed 0 162 = 1
--Annotation: assign q_first 162
def fixed_999: Prop := c.Fixed 1 162 = 0
--Annotation: assign q_last 162
def fixed_1000: Prop := c.Fixed 2 162 = 0
--Annotation: assign tag 162
def advice_0_162: Prop := c.Advice 0 162 = 0
--Annotation: assign index 162
def advice_1_162: Prop := c.Advice 1 162 = 0
--Annotation: assign is_code 162
def advice_2_162: Prop := c.Advice 2 162 = 0
--Annotation: assign value 162
def advice_3_162: Prop := c.Advice 3 162 = 0
--Annotation: assign push_data_left 162
def advice_13_162: Prop := c.Advice 13 162 = 0
--Annotation: assign length 162
def advice_15_162: Prop := c.Advice 15 162 = 0
--Annotation: assign push_data_size 162
def advice_16_162: Prop := c.Advice 16 162 = 0
--Annotation: assign value_rlc 162
def advice_14_162: Prop := c.Advice 14 162 = 0
--Annotation: assign code_hash 162
def advice_4_162: Prop := c.Advice 4 162 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 162
def advice_5_162: Prop := c.Advice 5 162 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_162: Prop := c.Advice 17 162 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_162: Prop := c.Advice 18 162 = 1^(-1)
--Annotation: assign q_enable 163
def fixed_1001: Prop := c.Fixed 0 163 = 1
--Annotation: assign q_first 163
def fixed_1002: Prop := c.Fixed 1 163 = 0
--Annotation: assign q_last 163
def fixed_1003: Prop := c.Fixed 2 163 = 0
--Annotation: assign tag 163
def advice_0_163: Prop := c.Advice 0 163 = 0
--Annotation: assign index 163
def advice_1_163: Prop := c.Advice 1 163 = 0
--Annotation: assign is_code 163
def advice_2_163: Prop := c.Advice 2 163 = 0
--Annotation: assign value 163
def advice_3_163: Prop := c.Advice 3 163 = 0
--Annotation: assign push_data_left 163
def advice_13_163: Prop := c.Advice 13 163 = 0
--Annotation: assign length 163
def advice_15_163: Prop := c.Advice 15 163 = 0
--Annotation: assign push_data_size 163
def advice_16_163: Prop := c.Advice 16 163 = 0
--Annotation: assign value_rlc 163
def advice_14_163: Prop := c.Advice 14 163 = 0
--Annotation: assign code_hash 163
def advice_4_163: Prop := c.Advice 4 163 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 163
def advice_5_163: Prop := c.Advice 5 163 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_163: Prop := c.Advice 17 163 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_163: Prop := c.Advice 18 163 = 1^(-1)
--Annotation: assign q_enable 164
def fixed_1004: Prop := c.Fixed 0 164 = 1
--Annotation: assign q_first 164
def fixed_1005: Prop := c.Fixed 1 164 = 0
--Annotation: assign q_last 164
def fixed_1006: Prop := c.Fixed 2 164 = 0
--Annotation: assign tag 164
def advice_0_164: Prop := c.Advice 0 164 = 0
--Annotation: assign index 164
def advice_1_164: Prop := c.Advice 1 164 = 0
--Annotation: assign is_code 164
def advice_2_164: Prop := c.Advice 2 164 = 0
--Annotation: assign value 164
def advice_3_164: Prop := c.Advice 3 164 = 0
--Annotation: assign push_data_left 164
def advice_13_164: Prop := c.Advice 13 164 = 0
--Annotation: assign length 164
def advice_15_164: Prop := c.Advice 15 164 = 0
--Annotation: assign push_data_size 164
def advice_16_164: Prop := c.Advice 16 164 = 0
--Annotation: assign value_rlc 164
def advice_14_164: Prop := c.Advice 14 164 = 0
--Annotation: assign code_hash 164
def advice_4_164: Prop := c.Advice 4 164 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 164
def advice_5_164: Prop := c.Advice 5 164 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_164: Prop := c.Advice 17 164 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_164: Prop := c.Advice 18 164 = 1^(-1)
--Annotation: assign q_enable 165
def fixed_1007: Prop := c.Fixed 0 165 = 1
--Annotation: assign q_first 165
def fixed_1008: Prop := c.Fixed 1 165 = 0
--Annotation: assign q_last 165
def fixed_1009: Prop := c.Fixed 2 165 = 0
--Annotation: assign tag 165
def advice_0_165: Prop := c.Advice 0 165 = 0
--Annotation: assign index 165
def advice_1_165: Prop := c.Advice 1 165 = 0
--Annotation: assign is_code 165
def advice_2_165: Prop := c.Advice 2 165 = 0
--Annotation: assign value 165
def advice_3_165: Prop := c.Advice 3 165 = 0
--Annotation: assign push_data_left 165
def advice_13_165: Prop := c.Advice 13 165 = 0
--Annotation: assign length 165
def advice_15_165: Prop := c.Advice 15 165 = 0
--Annotation: assign push_data_size 165
def advice_16_165: Prop := c.Advice 16 165 = 0
--Annotation: assign value_rlc 165
def advice_14_165: Prop := c.Advice 14 165 = 0
--Annotation: assign code_hash 165
def advice_4_165: Prop := c.Advice 4 165 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 165
def advice_5_165: Prop := c.Advice 5 165 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_165: Prop := c.Advice 17 165 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_165: Prop := c.Advice 18 165 = 1^(-1)
--Annotation: assign q_enable 166
def fixed_1010: Prop := c.Fixed 0 166 = 1
--Annotation: assign q_first 166
def fixed_1011: Prop := c.Fixed 1 166 = 0
--Annotation: assign q_last 166
def fixed_1012: Prop := c.Fixed 2 166 = 0
--Annotation: assign tag 166
def advice_0_166: Prop := c.Advice 0 166 = 0
--Annotation: assign index 166
def advice_1_166: Prop := c.Advice 1 166 = 0
--Annotation: assign is_code 166
def advice_2_166: Prop := c.Advice 2 166 = 0
--Annotation: assign value 166
def advice_3_166: Prop := c.Advice 3 166 = 0
--Annotation: assign push_data_left 166
def advice_13_166: Prop := c.Advice 13 166 = 0
--Annotation: assign length 166
def advice_15_166: Prop := c.Advice 15 166 = 0
--Annotation: assign push_data_size 166
def advice_16_166: Prop := c.Advice 16 166 = 0
--Annotation: assign value_rlc 166
def advice_14_166: Prop := c.Advice 14 166 = 0
--Annotation: assign code_hash 166
def advice_4_166: Prop := c.Advice 4 166 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 166
def advice_5_166: Prop := c.Advice 5 166 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_166: Prop := c.Advice 17 166 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_166: Prop := c.Advice 18 166 = 1^(-1)
--Annotation: assign q_enable 167
def fixed_1013: Prop := c.Fixed 0 167 = 1
--Annotation: assign q_first 167
def fixed_1014: Prop := c.Fixed 1 167 = 0
--Annotation: assign q_last 167
def fixed_1015: Prop := c.Fixed 2 167 = 0
--Annotation: assign tag 167
def advice_0_167: Prop := c.Advice 0 167 = 0
--Annotation: assign index 167
def advice_1_167: Prop := c.Advice 1 167 = 0
--Annotation: assign is_code 167
def advice_2_167: Prop := c.Advice 2 167 = 0
--Annotation: assign value 167
def advice_3_167: Prop := c.Advice 3 167 = 0
--Annotation: assign push_data_left 167
def advice_13_167: Prop := c.Advice 13 167 = 0
--Annotation: assign length 167
def advice_15_167: Prop := c.Advice 15 167 = 0
--Annotation: assign push_data_size 167
def advice_16_167: Prop := c.Advice 16 167 = 0
--Annotation: assign value_rlc 167
def advice_14_167: Prop := c.Advice 14 167 = 0
--Annotation: assign code_hash 167
def advice_4_167: Prop := c.Advice 4 167 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 167
def advice_5_167: Prop := c.Advice 5 167 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_167: Prop := c.Advice 17 167 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_167: Prop := c.Advice 18 167 = 1^(-1)
--Annotation: assign q_enable 168
def fixed_1016: Prop := c.Fixed 0 168 = 1
--Annotation: assign q_first 168
def fixed_1017: Prop := c.Fixed 1 168 = 0
--Annotation: assign q_last 168
def fixed_1018: Prop := c.Fixed 2 168 = 0
--Annotation: assign tag 168
def advice_0_168: Prop := c.Advice 0 168 = 0
--Annotation: assign index 168
def advice_1_168: Prop := c.Advice 1 168 = 0
--Annotation: assign is_code 168
def advice_2_168: Prop := c.Advice 2 168 = 0
--Annotation: assign value 168
def advice_3_168: Prop := c.Advice 3 168 = 0
--Annotation: assign push_data_left 168
def advice_13_168: Prop := c.Advice 13 168 = 0
--Annotation: assign length 168
def advice_15_168: Prop := c.Advice 15 168 = 0
--Annotation: assign push_data_size 168
def advice_16_168: Prop := c.Advice 16 168 = 0
--Annotation: assign value_rlc 168
def advice_14_168: Prop := c.Advice 14 168 = 0
--Annotation: assign code_hash 168
def advice_4_168: Prop := c.Advice 4 168 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 168
def advice_5_168: Prop := c.Advice 5 168 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_168: Prop := c.Advice 17 168 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_168: Prop := c.Advice 18 168 = 1^(-1)
--Annotation: assign q_enable 169
def fixed_1019: Prop := c.Fixed 0 169 = 1
--Annotation: assign q_first 169
def fixed_1020: Prop := c.Fixed 1 169 = 0
--Annotation: assign q_last 169
def fixed_1021: Prop := c.Fixed 2 169 = 0
--Annotation: assign tag 169
def advice_0_169: Prop := c.Advice 0 169 = 0
--Annotation: assign index 169
def advice_1_169: Prop := c.Advice 1 169 = 0
--Annotation: assign is_code 169
def advice_2_169: Prop := c.Advice 2 169 = 0
--Annotation: assign value 169
def advice_3_169: Prop := c.Advice 3 169 = 0
--Annotation: assign push_data_left 169
def advice_13_169: Prop := c.Advice 13 169 = 0
--Annotation: assign length 169
def advice_15_169: Prop := c.Advice 15 169 = 0
--Annotation: assign push_data_size 169
def advice_16_169: Prop := c.Advice 16 169 = 0
--Annotation: assign value_rlc 169
def advice_14_169: Prop := c.Advice 14 169 = 0
--Annotation: assign code_hash 169
def advice_4_169: Prop := c.Advice 4 169 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 169
def advice_5_169: Prop := c.Advice 5 169 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_169: Prop := c.Advice 17 169 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_169: Prop := c.Advice 18 169 = 1^(-1)
--Annotation: assign q_enable 170
def fixed_1022: Prop := c.Fixed 0 170 = 1
--Annotation: assign q_first 170
def fixed_1023: Prop := c.Fixed 1 170 = 0
--Annotation: assign q_last 170
def fixed_1024: Prop := c.Fixed 2 170 = 0
--Annotation: assign tag 170
def advice_0_170: Prop := c.Advice 0 170 = 0
--Annotation: assign index 170
def advice_1_170: Prop := c.Advice 1 170 = 0
--Annotation: assign is_code 170
def advice_2_170: Prop := c.Advice 2 170 = 0
--Annotation: assign value 170
def advice_3_170: Prop := c.Advice 3 170 = 0
--Annotation: assign push_data_left 170
def advice_13_170: Prop := c.Advice 13 170 = 0
--Annotation: assign length 170
def advice_15_170: Prop := c.Advice 15 170 = 0
--Annotation: assign push_data_size 170
def advice_16_170: Prop := c.Advice 16 170 = 0
--Annotation: assign value_rlc 170
def advice_14_170: Prop := c.Advice 14 170 = 0
--Annotation: assign code_hash 170
def advice_4_170: Prop := c.Advice 4 170 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 170
def advice_5_170: Prop := c.Advice 5 170 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_170: Prop := c.Advice 17 170 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_170: Prop := c.Advice 18 170 = 1^(-1)
--Annotation: assign q_enable 171
def fixed_1025: Prop := c.Fixed 0 171 = 1
--Annotation: assign q_first 171
def fixed_1026: Prop := c.Fixed 1 171 = 0
--Annotation: assign q_last 171
def fixed_1027: Prop := c.Fixed 2 171 = 0
--Annotation: assign tag 171
def advice_0_171: Prop := c.Advice 0 171 = 0
--Annotation: assign index 171
def advice_1_171: Prop := c.Advice 1 171 = 0
--Annotation: assign is_code 171
def advice_2_171: Prop := c.Advice 2 171 = 0
--Annotation: assign value 171
def advice_3_171: Prop := c.Advice 3 171 = 0
--Annotation: assign push_data_left 171
def advice_13_171: Prop := c.Advice 13 171 = 0
--Annotation: assign length 171
def advice_15_171: Prop := c.Advice 15 171 = 0
--Annotation: assign push_data_size 171
def advice_16_171: Prop := c.Advice 16 171 = 0
--Annotation: assign value_rlc 171
def advice_14_171: Prop := c.Advice 14 171 = 0
--Annotation: assign code_hash 171
def advice_4_171: Prop := c.Advice 4 171 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 171
def advice_5_171: Prop := c.Advice 5 171 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_171: Prop := c.Advice 17 171 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_171: Prop := c.Advice 18 171 = 1^(-1)
--Annotation: assign q_enable 172
def fixed_1028: Prop := c.Fixed 0 172 = 1
--Annotation: assign q_first 172
def fixed_1029: Prop := c.Fixed 1 172 = 0
--Annotation: assign q_last 172
def fixed_1030: Prop := c.Fixed 2 172 = 0
--Annotation: assign tag 172
def advice_0_172: Prop := c.Advice 0 172 = 0
--Annotation: assign index 172
def advice_1_172: Prop := c.Advice 1 172 = 0
--Annotation: assign is_code 172
def advice_2_172: Prop := c.Advice 2 172 = 0
--Annotation: assign value 172
def advice_3_172: Prop := c.Advice 3 172 = 0
--Annotation: assign push_data_left 172
def advice_13_172: Prop := c.Advice 13 172 = 0
--Annotation: assign length 172
def advice_15_172: Prop := c.Advice 15 172 = 0
--Annotation: assign push_data_size 172
def advice_16_172: Prop := c.Advice 16 172 = 0
--Annotation: assign value_rlc 172
def advice_14_172: Prop := c.Advice 14 172 = 0
--Annotation: assign code_hash 172
def advice_4_172: Prop := c.Advice 4 172 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 172
def advice_5_172: Prop := c.Advice 5 172 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_172: Prop := c.Advice 17 172 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_172: Prop := c.Advice 18 172 = 1^(-1)
--Annotation: assign q_enable 173
def fixed_1031: Prop := c.Fixed 0 173 = 1
--Annotation: assign q_first 173
def fixed_1032: Prop := c.Fixed 1 173 = 0
--Annotation: assign q_last 173
def fixed_1033: Prop := c.Fixed 2 173 = 0
--Annotation: assign tag 173
def advice_0_173: Prop := c.Advice 0 173 = 0
--Annotation: assign index 173
def advice_1_173: Prop := c.Advice 1 173 = 0
--Annotation: assign is_code 173
def advice_2_173: Prop := c.Advice 2 173 = 0
--Annotation: assign value 173
def advice_3_173: Prop := c.Advice 3 173 = 0
--Annotation: assign push_data_left 173
def advice_13_173: Prop := c.Advice 13 173 = 0
--Annotation: assign length 173
def advice_15_173: Prop := c.Advice 15 173 = 0
--Annotation: assign push_data_size 173
def advice_16_173: Prop := c.Advice 16 173 = 0
--Annotation: assign value_rlc 173
def advice_14_173: Prop := c.Advice 14 173 = 0
--Annotation: assign code_hash 173
def advice_4_173: Prop := c.Advice 4 173 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 173
def advice_5_173: Prop := c.Advice 5 173 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_173: Prop := c.Advice 17 173 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_173: Prop := c.Advice 18 173 = 1^(-1)
--Annotation: assign q_enable 174
def fixed_1034: Prop := c.Fixed 0 174 = 1
--Annotation: assign q_first 174
def fixed_1035: Prop := c.Fixed 1 174 = 0
--Annotation: assign q_last 174
def fixed_1036: Prop := c.Fixed 2 174 = 0
--Annotation: assign tag 174
def advice_0_174: Prop := c.Advice 0 174 = 0
--Annotation: assign index 174
def advice_1_174: Prop := c.Advice 1 174 = 0
--Annotation: assign is_code 174
def advice_2_174: Prop := c.Advice 2 174 = 0
--Annotation: assign value 174
def advice_3_174: Prop := c.Advice 3 174 = 0
--Annotation: assign push_data_left 174
def advice_13_174: Prop := c.Advice 13 174 = 0
--Annotation: assign length 174
def advice_15_174: Prop := c.Advice 15 174 = 0
--Annotation: assign push_data_size 174
def advice_16_174: Prop := c.Advice 16 174 = 0
--Annotation: assign value_rlc 174
def advice_14_174: Prop := c.Advice 14 174 = 0
--Annotation: assign code_hash 174
def advice_4_174: Prop := c.Advice 4 174 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 174
def advice_5_174: Prop := c.Advice 5 174 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_174: Prop := c.Advice 17 174 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_174: Prop := c.Advice 18 174 = 1^(-1)
--Annotation: assign q_enable 175
def fixed_1037: Prop := c.Fixed 0 175 = 1
--Annotation: assign q_first 175
def fixed_1038: Prop := c.Fixed 1 175 = 0
--Annotation: assign q_last 175
def fixed_1039: Prop := c.Fixed 2 175 = 0
--Annotation: assign tag 175
def advice_0_175: Prop := c.Advice 0 175 = 0
--Annotation: assign index 175
def advice_1_175: Prop := c.Advice 1 175 = 0
--Annotation: assign is_code 175
def advice_2_175: Prop := c.Advice 2 175 = 0
--Annotation: assign value 175
def advice_3_175: Prop := c.Advice 3 175 = 0
--Annotation: assign push_data_left 175
def advice_13_175: Prop := c.Advice 13 175 = 0
--Annotation: assign length 175
def advice_15_175: Prop := c.Advice 15 175 = 0
--Annotation: assign push_data_size 175
def advice_16_175: Prop := c.Advice 16 175 = 0
--Annotation: assign value_rlc 175
def advice_14_175: Prop := c.Advice 14 175 = 0
--Annotation: assign code_hash 175
def advice_4_175: Prop := c.Advice 4 175 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 175
def advice_5_175: Prop := c.Advice 5 175 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_175: Prop := c.Advice 17 175 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_175: Prop := c.Advice 18 175 = 1^(-1)
--Annotation: assign q_enable 176
def fixed_1040: Prop := c.Fixed 0 176 = 1
--Annotation: assign q_first 176
def fixed_1041: Prop := c.Fixed 1 176 = 0
--Annotation: assign q_last 176
def fixed_1042: Prop := c.Fixed 2 176 = 0
--Annotation: assign tag 176
def advice_0_176: Prop := c.Advice 0 176 = 0
--Annotation: assign index 176
def advice_1_176: Prop := c.Advice 1 176 = 0
--Annotation: assign is_code 176
def advice_2_176: Prop := c.Advice 2 176 = 0
--Annotation: assign value 176
def advice_3_176: Prop := c.Advice 3 176 = 0
--Annotation: assign push_data_left 176
def advice_13_176: Prop := c.Advice 13 176 = 0
--Annotation: assign length 176
def advice_15_176: Prop := c.Advice 15 176 = 0
--Annotation: assign push_data_size 176
def advice_16_176: Prop := c.Advice 16 176 = 0
--Annotation: assign value_rlc 176
def advice_14_176: Prop := c.Advice 14 176 = 0
--Annotation: assign code_hash 176
def advice_4_176: Prop := c.Advice 4 176 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 176
def advice_5_176: Prop := c.Advice 5 176 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_176: Prop := c.Advice 17 176 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_176: Prop := c.Advice 18 176 = 1^(-1)
--Annotation: assign q_enable 177
def fixed_1043: Prop := c.Fixed 0 177 = 1
--Annotation: assign q_first 177
def fixed_1044: Prop := c.Fixed 1 177 = 0
--Annotation: assign q_last 177
def fixed_1045: Prop := c.Fixed 2 177 = 0
--Annotation: assign tag 177
def advice_0_177: Prop := c.Advice 0 177 = 0
--Annotation: assign index 177
def advice_1_177: Prop := c.Advice 1 177 = 0
--Annotation: assign is_code 177
def advice_2_177: Prop := c.Advice 2 177 = 0
--Annotation: assign value 177
def advice_3_177: Prop := c.Advice 3 177 = 0
--Annotation: assign push_data_left 177
def advice_13_177: Prop := c.Advice 13 177 = 0
--Annotation: assign length 177
def advice_15_177: Prop := c.Advice 15 177 = 0
--Annotation: assign push_data_size 177
def advice_16_177: Prop := c.Advice 16 177 = 0
--Annotation: assign value_rlc 177
def advice_14_177: Prop := c.Advice 14 177 = 0
--Annotation: assign code_hash 177
def advice_4_177: Prop := c.Advice 4 177 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 177
def advice_5_177: Prop := c.Advice 5 177 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_177: Prop := c.Advice 17 177 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_177: Prop := c.Advice 18 177 = 1^(-1)
--Annotation: assign q_enable 178
def fixed_1046: Prop := c.Fixed 0 178 = 1
--Annotation: assign q_first 178
def fixed_1047: Prop := c.Fixed 1 178 = 0
--Annotation: assign q_last 178
def fixed_1048: Prop := c.Fixed 2 178 = 0
--Annotation: assign tag 178
def advice_0_178: Prop := c.Advice 0 178 = 0
--Annotation: assign index 178
def advice_1_178: Prop := c.Advice 1 178 = 0
--Annotation: assign is_code 178
def advice_2_178: Prop := c.Advice 2 178 = 0
--Annotation: assign value 178
def advice_3_178: Prop := c.Advice 3 178 = 0
--Annotation: assign push_data_left 178
def advice_13_178: Prop := c.Advice 13 178 = 0
--Annotation: assign length 178
def advice_15_178: Prop := c.Advice 15 178 = 0
--Annotation: assign push_data_size 178
def advice_16_178: Prop := c.Advice 16 178 = 0
--Annotation: assign value_rlc 178
def advice_14_178: Prop := c.Advice 14 178 = 0
--Annotation: assign code_hash 178
def advice_4_178: Prop := c.Advice 4 178 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 178
def advice_5_178: Prop := c.Advice 5 178 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_178: Prop := c.Advice 17 178 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_178: Prop := c.Advice 18 178 = 1^(-1)
--Annotation: assign q_enable 179
def fixed_1049: Prop := c.Fixed 0 179 = 1
--Annotation: assign q_first 179
def fixed_1050: Prop := c.Fixed 1 179 = 0
--Annotation: assign q_last 179
def fixed_1051: Prop := c.Fixed 2 179 = 0
--Annotation: assign tag 179
def advice_0_179: Prop := c.Advice 0 179 = 0
--Annotation: assign index 179
def advice_1_179: Prop := c.Advice 1 179 = 0
--Annotation: assign is_code 179
def advice_2_179: Prop := c.Advice 2 179 = 0
--Annotation: assign value 179
def advice_3_179: Prop := c.Advice 3 179 = 0
--Annotation: assign push_data_left 179
def advice_13_179: Prop := c.Advice 13 179 = 0
--Annotation: assign length 179
def advice_15_179: Prop := c.Advice 15 179 = 0
--Annotation: assign push_data_size 179
def advice_16_179: Prop := c.Advice 16 179 = 0
--Annotation: assign value_rlc 179
def advice_14_179: Prop := c.Advice 14 179 = 0
--Annotation: assign code_hash 179
def advice_4_179: Prop := c.Advice 4 179 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 179
def advice_5_179: Prop := c.Advice 5 179 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_179: Prop := c.Advice 17 179 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_179: Prop := c.Advice 18 179 = 1^(-1)
--Annotation: assign q_enable 180
def fixed_1052: Prop := c.Fixed 0 180 = 1
--Annotation: assign q_first 180
def fixed_1053: Prop := c.Fixed 1 180 = 0
--Annotation: assign q_last 180
def fixed_1054: Prop := c.Fixed 2 180 = 0
--Annotation: assign tag 180
def advice_0_180: Prop := c.Advice 0 180 = 0
--Annotation: assign index 180
def advice_1_180: Prop := c.Advice 1 180 = 0
--Annotation: assign is_code 180
def advice_2_180: Prop := c.Advice 2 180 = 0
--Annotation: assign value 180
def advice_3_180: Prop := c.Advice 3 180 = 0
--Annotation: assign push_data_left 180
def advice_13_180: Prop := c.Advice 13 180 = 0
--Annotation: assign length 180
def advice_15_180: Prop := c.Advice 15 180 = 0
--Annotation: assign push_data_size 180
def advice_16_180: Prop := c.Advice 16 180 = 0
--Annotation: assign value_rlc 180
def advice_14_180: Prop := c.Advice 14 180 = 0
--Annotation: assign code_hash 180
def advice_4_180: Prop := c.Advice 4 180 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 180
def advice_5_180: Prop := c.Advice 5 180 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_180: Prop := c.Advice 17 180 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_180: Prop := c.Advice 18 180 = 1^(-1)
--Annotation: assign q_enable 181
def fixed_1055: Prop := c.Fixed 0 181 = 1
--Annotation: assign q_first 181
def fixed_1056: Prop := c.Fixed 1 181 = 0
--Annotation: assign q_last 181
def fixed_1057: Prop := c.Fixed 2 181 = 0
--Annotation: assign tag 181
def advice_0_181: Prop := c.Advice 0 181 = 0
--Annotation: assign index 181
def advice_1_181: Prop := c.Advice 1 181 = 0
--Annotation: assign is_code 181
def advice_2_181: Prop := c.Advice 2 181 = 0
--Annotation: assign value 181
def advice_3_181: Prop := c.Advice 3 181 = 0
--Annotation: assign push_data_left 181
def advice_13_181: Prop := c.Advice 13 181 = 0
--Annotation: assign length 181
def advice_15_181: Prop := c.Advice 15 181 = 0
--Annotation: assign push_data_size 181
def advice_16_181: Prop := c.Advice 16 181 = 0
--Annotation: assign value_rlc 181
def advice_14_181: Prop := c.Advice 14 181 = 0
--Annotation: assign code_hash 181
def advice_4_181: Prop := c.Advice 4 181 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 181
def advice_5_181: Prop := c.Advice 5 181 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_181: Prop := c.Advice 17 181 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_181: Prop := c.Advice 18 181 = 1^(-1)
--Annotation: assign q_enable 182
def fixed_1058: Prop := c.Fixed 0 182 = 1
--Annotation: assign q_first 182
def fixed_1059: Prop := c.Fixed 1 182 = 0
--Annotation: assign q_last 182
def fixed_1060: Prop := c.Fixed 2 182 = 0
--Annotation: assign tag 182
def advice_0_182: Prop := c.Advice 0 182 = 0
--Annotation: assign index 182
def advice_1_182: Prop := c.Advice 1 182 = 0
--Annotation: assign is_code 182
def advice_2_182: Prop := c.Advice 2 182 = 0
--Annotation: assign value 182
def advice_3_182: Prop := c.Advice 3 182 = 0
--Annotation: assign push_data_left 182
def advice_13_182: Prop := c.Advice 13 182 = 0
--Annotation: assign length 182
def advice_15_182: Prop := c.Advice 15 182 = 0
--Annotation: assign push_data_size 182
def advice_16_182: Prop := c.Advice 16 182 = 0
--Annotation: assign value_rlc 182
def advice_14_182: Prop := c.Advice 14 182 = 0
--Annotation: assign code_hash 182
def advice_4_182: Prop := c.Advice 4 182 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 182
def advice_5_182: Prop := c.Advice 5 182 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_182: Prop := c.Advice 17 182 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_182: Prop := c.Advice 18 182 = 1^(-1)
--Annotation: assign q_enable 183
def fixed_1061: Prop := c.Fixed 0 183 = 1
--Annotation: assign q_first 183
def fixed_1062: Prop := c.Fixed 1 183 = 0
--Annotation: assign q_last 183
def fixed_1063: Prop := c.Fixed 2 183 = 0
--Annotation: assign tag 183
def advice_0_183: Prop := c.Advice 0 183 = 0
--Annotation: assign index 183
def advice_1_183: Prop := c.Advice 1 183 = 0
--Annotation: assign is_code 183
def advice_2_183: Prop := c.Advice 2 183 = 0
--Annotation: assign value 183
def advice_3_183: Prop := c.Advice 3 183 = 0
--Annotation: assign push_data_left 183
def advice_13_183: Prop := c.Advice 13 183 = 0
--Annotation: assign length 183
def advice_15_183: Prop := c.Advice 15 183 = 0
--Annotation: assign push_data_size 183
def advice_16_183: Prop := c.Advice 16 183 = 0
--Annotation: assign value_rlc 183
def advice_14_183: Prop := c.Advice 14 183 = 0
--Annotation: assign code_hash 183
def advice_4_183: Prop := c.Advice 4 183 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 183
def advice_5_183: Prop := c.Advice 5 183 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_183: Prop := c.Advice 17 183 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_183: Prop := c.Advice 18 183 = 1^(-1)
--Annotation: assign q_enable 184
def fixed_1064: Prop := c.Fixed 0 184 = 1
--Annotation: assign q_first 184
def fixed_1065: Prop := c.Fixed 1 184 = 0
--Annotation: assign q_last 184
def fixed_1066: Prop := c.Fixed 2 184 = 0
--Annotation: assign tag 184
def advice_0_184: Prop := c.Advice 0 184 = 0
--Annotation: assign index 184
def advice_1_184: Prop := c.Advice 1 184 = 0
--Annotation: assign is_code 184
def advice_2_184: Prop := c.Advice 2 184 = 0
--Annotation: assign value 184
def advice_3_184: Prop := c.Advice 3 184 = 0
--Annotation: assign push_data_left 184
def advice_13_184: Prop := c.Advice 13 184 = 0
--Annotation: assign length 184
def advice_15_184: Prop := c.Advice 15 184 = 0
--Annotation: assign push_data_size 184
def advice_16_184: Prop := c.Advice 16 184 = 0
--Annotation: assign value_rlc 184
def advice_14_184: Prop := c.Advice 14 184 = 0
--Annotation: assign code_hash 184
def advice_4_184: Prop := c.Advice 4 184 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 184
def advice_5_184: Prop := c.Advice 5 184 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_184: Prop := c.Advice 17 184 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_184: Prop := c.Advice 18 184 = 1^(-1)
--Annotation: assign q_enable 185
def fixed_1067: Prop := c.Fixed 0 185 = 1
--Annotation: assign q_first 185
def fixed_1068: Prop := c.Fixed 1 185 = 0
--Annotation: assign q_last 185
def fixed_1069: Prop := c.Fixed 2 185 = 0
--Annotation: assign tag 185
def advice_0_185: Prop := c.Advice 0 185 = 0
--Annotation: assign index 185
def advice_1_185: Prop := c.Advice 1 185 = 0
--Annotation: assign is_code 185
def advice_2_185: Prop := c.Advice 2 185 = 0
--Annotation: assign value 185
def advice_3_185: Prop := c.Advice 3 185 = 0
--Annotation: assign push_data_left 185
def advice_13_185: Prop := c.Advice 13 185 = 0
--Annotation: assign length 185
def advice_15_185: Prop := c.Advice 15 185 = 0
--Annotation: assign push_data_size 185
def advice_16_185: Prop := c.Advice 16 185 = 0
--Annotation: assign value_rlc 185
def advice_14_185: Prop := c.Advice 14 185 = 0
--Annotation: assign code_hash 185
def advice_4_185: Prop := c.Advice 4 185 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 185
def advice_5_185: Prop := c.Advice 5 185 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_185: Prop := c.Advice 17 185 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_185: Prop := c.Advice 18 185 = 1^(-1)
--Annotation: assign q_enable 186
def fixed_1070: Prop := c.Fixed 0 186 = 1
--Annotation: assign q_first 186
def fixed_1071: Prop := c.Fixed 1 186 = 0
--Annotation: assign q_last 186
def fixed_1072: Prop := c.Fixed 2 186 = 0
--Annotation: assign tag 186
def advice_0_186: Prop := c.Advice 0 186 = 0
--Annotation: assign index 186
def advice_1_186: Prop := c.Advice 1 186 = 0
--Annotation: assign is_code 186
def advice_2_186: Prop := c.Advice 2 186 = 0
--Annotation: assign value 186
def advice_3_186: Prop := c.Advice 3 186 = 0
--Annotation: assign push_data_left 186
def advice_13_186: Prop := c.Advice 13 186 = 0
--Annotation: assign length 186
def advice_15_186: Prop := c.Advice 15 186 = 0
--Annotation: assign push_data_size 186
def advice_16_186: Prop := c.Advice 16 186 = 0
--Annotation: assign value_rlc 186
def advice_14_186: Prop := c.Advice 14 186 = 0
--Annotation: assign code_hash 186
def advice_4_186: Prop := c.Advice 4 186 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 186
def advice_5_186: Prop := c.Advice 5 186 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_186: Prop := c.Advice 17 186 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_186: Prop := c.Advice 18 186 = 1^(-1)
--Annotation: assign q_enable 187
def fixed_1073: Prop := c.Fixed 0 187 = 1
--Annotation: assign q_first 187
def fixed_1074: Prop := c.Fixed 1 187 = 0
--Annotation: assign q_last 187
def fixed_1075: Prop := c.Fixed 2 187 = 0
--Annotation: assign tag 187
def advice_0_187: Prop := c.Advice 0 187 = 0
--Annotation: assign index 187
def advice_1_187: Prop := c.Advice 1 187 = 0
--Annotation: assign is_code 187
def advice_2_187: Prop := c.Advice 2 187 = 0
--Annotation: assign value 187
def advice_3_187: Prop := c.Advice 3 187 = 0
--Annotation: assign push_data_left 187
def advice_13_187: Prop := c.Advice 13 187 = 0
--Annotation: assign length 187
def advice_15_187: Prop := c.Advice 15 187 = 0
--Annotation: assign push_data_size 187
def advice_16_187: Prop := c.Advice 16 187 = 0
--Annotation: assign value_rlc 187
def advice_14_187: Prop := c.Advice 14 187 = 0
--Annotation: assign code_hash 187
def advice_4_187: Prop := c.Advice 4 187 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 187
def advice_5_187: Prop := c.Advice 5 187 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_187: Prop := c.Advice 17 187 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_187: Prop := c.Advice 18 187 = 1^(-1)
--Annotation: assign q_enable 188
def fixed_1076: Prop := c.Fixed 0 188 = 1
--Annotation: assign q_first 188
def fixed_1077: Prop := c.Fixed 1 188 = 0
--Annotation: assign q_last 188
def fixed_1078: Prop := c.Fixed 2 188 = 0
--Annotation: assign tag 188
def advice_0_188: Prop := c.Advice 0 188 = 0
--Annotation: assign index 188
def advice_1_188: Prop := c.Advice 1 188 = 0
--Annotation: assign is_code 188
def advice_2_188: Prop := c.Advice 2 188 = 0
--Annotation: assign value 188
def advice_3_188: Prop := c.Advice 3 188 = 0
--Annotation: assign push_data_left 188
def advice_13_188: Prop := c.Advice 13 188 = 0
--Annotation: assign length 188
def advice_15_188: Prop := c.Advice 15 188 = 0
--Annotation: assign push_data_size 188
def advice_16_188: Prop := c.Advice 16 188 = 0
--Annotation: assign value_rlc 188
def advice_14_188: Prop := c.Advice 14 188 = 0
--Annotation: assign code_hash 188
def advice_4_188: Prop := c.Advice 4 188 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 188
def advice_5_188: Prop := c.Advice 5 188 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_188: Prop := c.Advice 17 188 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_188: Prop := c.Advice 18 188 = 1^(-1)
--Annotation: assign q_enable 189
def fixed_1079: Prop := c.Fixed 0 189 = 1
--Annotation: assign q_first 189
def fixed_1080: Prop := c.Fixed 1 189 = 0
--Annotation: assign q_last 189
def fixed_1081: Prop := c.Fixed 2 189 = 0
--Annotation: assign tag 189
def advice_0_189: Prop := c.Advice 0 189 = 0
--Annotation: assign index 189
def advice_1_189: Prop := c.Advice 1 189 = 0
--Annotation: assign is_code 189
def advice_2_189: Prop := c.Advice 2 189 = 0
--Annotation: assign value 189
def advice_3_189: Prop := c.Advice 3 189 = 0
--Annotation: assign push_data_left 189
def advice_13_189: Prop := c.Advice 13 189 = 0
--Annotation: assign length 189
def advice_15_189: Prop := c.Advice 15 189 = 0
--Annotation: assign push_data_size 189
def advice_16_189: Prop := c.Advice 16 189 = 0
--Annotation: assign value_rlc 189
def advice_14_189: Prop := c.Advice 14 189 = 0
--Annotation: assign code_hash 189
def advice_4_189: Prop := c.Advice 4 189 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 189
def advice_5_189: Prop := c.Advice 5 189 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_189: Prop := c.Advice 17 189 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_189: Prop := c.Advice 18 189 = 1^(-1)
--Annotation: assign q_enable 190
def fixed_1082: Prop := c.Fixed 0 190 = 1
--Annotation: assign q_first 190
def fixed_1083: Prop := c.Fixed 1 190 = 0
--Annotation: assign q_last 190
def fixed_1084: Prop := c.Fixed 2 190 = 0
--Annotation: assign tag 190
def advice_0_190: Prop := c.Advice 0 190 = 0
--Annotation: assign index 190
def advice_1_190: Prop := c.Advice 1 190 = 0
--Annotation: assign is_code 190
def advice_2_190: Prop := c.Advice 2 190 = 0
--Annotation: assign value 190
def advice_3_190: Prop := c.Advice 3 190 = 0
--Annotation: assign push_data_left 190
def advice_13_190: Prop := c.Advice 13 190 = 0
--Annotation: assign length 190
def advice_15_190: Prop := c.Advice 15 190 = 0
--Annotation: assign push_data_size 190
def advice_16_190: Prop := c.Advice 16 190 = 0
--Annotation: assign value_rlc 190
def advice_14_190: Prop := c.Advice 14 190 = 0
--Annotation: assign code_hash 190
def advice_4_190: Prop := c.Advice 4 190 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 190
def advice_5_190: Prop := c.Advice 5 190 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_190: Prop := c.Advice 17 190 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_190: Prop := c.Advice 18 190 = 1^(-1)
--Annotation: assign q_enable 191
def fixed_1085: Prop := c.Fixed 0 191 = 1
--Annotation: assign q_first 191
def fixed_1086: Prop := c.Fixed 1 191 = 0
--Annotation: assign q_last 191
def fixed_1087: Prop := c.Fixed 2 191 = 0
--Annotation: assign tag 191
def advice_0_191: Prop := c.Advice 0 191 = 0
--Annotation: assign index 191
def advice_1_191: Prop := c.Advice 1 191 = 0
--Annotation: assign is_code 191
def advice_2_191: Prop := c.Advice 2 191 = 0
--Annotation: assign value 191
def advice_3_191: Prop := c.Advice 3 191 = 0
--Annotation: assign push_data_left 191
def advice_13_191: Prop := c.Advice 13 191 = 0
--Annotation: assign length 191
def advice_15_191: Prop := c.Advice 15 191 = 0
--Annotation: assign push_data_size 191
def advice_16_191: Prop := c.Advice 16 191 = 0
--Annotation: assign value_rlc 191
def advice_14_191: Prop := c.Advice 14 191 = 0
--Annotation: assign code_hash 191
def advice_4_191: Prop := c.Advice 4 191 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 191
def advice_5_191: Prop := c.Advice 5 191 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_191: Prop := c.Advice 17 191 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_191: Prop := c.Advice 18 191 = 1^(-1)
--Annotation: assign q_enable 192
def fixed_1088: Prop := c.Fixed 0 192 = 1
--Annotation: assign q_first 192
def fixed_1089: Prop := c.Fixed 1 192 = 0
--Annotation: assign q_last 192
def fixed_1090: Prop := c.Fixed 2 192 = 0
--Annotation: assign tag 192
def advice_0_192: Prop := c.Advice 0 192 = 0
--Annotation: assign index 192
def advice_1_192: Prop := c.Advice 1 192 = 0
--Annotation: assign is_code 192
def advice_2_192: Prop := c.Advice 2 192 = 0
--Annotation: assign value 192
def advice_3_192: Prop := c.Advice 3 192 = 0
--Annotation: assign push_data_left 192
def advice_13_192: Prop := c.Advice 13 192 = 0
--Annotation: assign length 192
def advice_15_192: Prop := c.Advice 15 192 = 0
--Annotation: assign push_data_size 192
def advice_16_192: Prop := c.Advice 16 192 = 0
--Annotation: assign value_rlc 192
def advice_14_192: Prop := c.Advice 14 192 = 0
--Annotation: assign code_hash 192
def advice_4_192: Prop := c.Advice 4 192 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 192
def advice_5_192: Prop := c.Advice 5 192 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_192: Prop := c.Advice 17 192 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_192: Prop := c.Advice 18 192 = 1^(-1)
--Annotation: assign q_enable 193
def fixed_1091: Prop := c.Fixed 0 193 = 1
--Annotation: assign q_first 193
def fixed_1092: Prop := c.Fixed 1 193 = 0
--Annotation: assign q_last 193
def fixed_1093: Prop := c.Fixed 2 193 = 0
--Annotation: assign tag 193
def advice_0_193: Prop := c.Advice 0 193 = 0
--Annotation: assign index 193
def advice_1_193: Prop := c.Advice 1 193 = 0
--Annotation: assign is_code 193
def advice_2_193: Prop := c.Advice 2 193 = 0
--Annotation: assign value 193
def advice_3_193: Prop := c.Advice 3 193 = 0
--Annotation: assign push_data_left 193
def advice_13_193: Prop := c.Advice 13 193 = 0
--Annotation: assign length 193
def advice_15_193: Prop := c.Advice 15 193 = 0
--Annotation: assign push_data_size 193
def advice_16_193: Prop := c.Advice 16 193 = 0
--Annotation: assign value_rlc 193
def advice_14_193: Prop := c.Advice 14 193 = 0
--Annotation: assign code_hash 193
def advice_4_193: Prop := c.Advice 4 193 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 193
def advice_5_193: Prop := c.Advice 5 193 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_193: Prop := c.Advice 17 193 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_193: Prop := c.Advice 18 193 = 1^(-1)
--Annotation: assign q_enable 194
def fixed_1094: Prop := c.Fixed 0 194 = 1
--Annotation: assign q_first 194
def fixed_1095: Prop := c.Fixed 1 194 = 0
--Annotation: assign q_last 194
def fixed_1096: Prop := c.Fixed 2 194 = 0
--Annotation: assign tag 194
def advice_0_194: Prop := c.Advice 0 194 = 0
--Annotation: assign index 194
def advice_1_194: Prop := c.Advice 1 194 = 0
--Annotation: assign is_code 194
def advice_2_194: Prop := c.Advice 2 194 = 0
--Annotation: assign value 194
def advice_3_194: Prop := c.Advice 3 194 = 0
--Annotation: assign push_data_left 194
def advice_13_194: Prop := c.Advice 13 194 = 0
--Annotation: assign length 194
def advice_15_194: Prop := c.Advice 15 194 = 0
--Annotation: assign push_data_size 194
def advice_16_194: Prop := c.Advice 16 194 = 0
--Annotation: assign value_rlc 194
def advice_14_194: Prop := c.Advice 14 194 = 0
--Annotation: assign code_hash 194
def advice_4_194: Prop := c.Advice 4 194 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 194
def advice_5_194: Prop := c.Advice 5 194 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_194: Prop := c.Advice 17 194 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_194: Prop := c.Advice 18 194 = 1^(-1)
--Annotation: assign q_enable 195
def fixed_1097: Prop := c.Fixed 0 195 = 1
--Annotation: assign q_first 195
def fixed_1098: Prop := c.Fixed 1 195 = 0
--Annotation: assign q_last 195
def fixed_1099: Prop := c.Fixed 2 195 = 0
--Annotation: assign tag 195
def advice_0_195: Prop := c.Advice 0 195 = 0
--Annotation: assign index 195
def advice_1_195: Prop := c.Advice 1 195 = 0
--Annotation: assign is_code 195
def advice_2_195: Prop := c.Advice 2 195 = 0
--Annotation: assign value 195
def advice_3_195: Prop := c.Advice 3 195 = 0
--Annotation: assign push_data_left 195
def advice_13_195: Prop := c.Advice 13 195 = 0
--Annotation: assign length 195
def advice_15_195: Prop := c.Advice 15 195 = 0
--Annotation: assign push_data_size 195
def advice_16_195: Prop := c.Advice 16 195 = 0
--Annotation: assign value_rlc 195
def advice_14_195: Prop := c.Advice 14 195 = 0
--Annotation: assign code_hash 195
def advice_4_195: Prop := c.Advice 4 195 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 195
def advice_5_195: Prop := c.Advice 5 195 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_195: Prop := c.Advice 17 195 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_195: Prop := c.Advice 18 195 = 1^(-1)
--Annotation: assign q_enable 196
def fixed_1100: Prop := c.Fixed 0 196 = 1
--Annotation: assign q_first 196
def fixed_1101: Prop := c.Fixed 1 196 = 0
--Annotation: assign q_last 196
def fixed_1102: Prop := c.Fixed 2 196 = 0
--Annotation: assign tag 196
def advice_0_196: Prop := c.Advice 0 196 = 0
--Annotation: assign index 196
def advice_1_196: Prop := c.Advice 1 196 = 0
--Annotation: assign is_code 196
def advice_2_196: Prop := c.Advice 2 196 = 0
--Annotation: assign value 196
def advice_3_196: Prop := c.Advice 3 196 = 0
--Annotation: assign push_data_left 196
def advice_13_196: Prop := c.Advice 13 196 = 0
--Annotation: assign length 196
def advice_15_196: Prop := c.Advice 15 196 = 0
--Annotation: assign push_data_size 196
def advice_16_196: Prop := c.Advice 16 196 = 0
--Annotation: assign value_rlc 196
def advice_14_196: Prop := c.Advice 14 196 = 0
--Annotation: assign code_hash 196
def advice_4_196: Prop := c.Advice 4 196 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 196
def advice_5_196: Prop := c.Advice 5 196 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_196: Prop := c.Advice 17 196 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_196: Prop := c.Advice 18 196 = 1^(-1)
--Annotation: assign q_enable 197
def fixed_1103: Prop := c.Fixed 0 197 = 1
--Annotation: assign q_first 197
def fixed_1104: Prop := c.Fixed 1 197 = 0
--Annotation: assign q_last 197
def fixed_1105: Prop := c.Fixed 2 197 = 0
--Annotation: assign tag 197
def advice_0_197: Prop := c.Advice 0 197 = 0
--Annotation: assign index 197
def advice_1_197: Prop := c.Advice 1 197 = 0
--Annotation: assign is_code 197
def advice_2_197: Prop := c.Advice 2 197 = 0
--Annotation: assign value 197
def advice_3_197: Prop := c.Advice 3 197 = 0
--Annotation: assign push_data_left 197
def advice_13_197: Prop := c.Advice 13 197 = 0
--Annotation: assign length 197
def advice_15_197: Prop := c.Advice 15 197 = 0
--Annotation: assign push_data_size 197
def advice_16_197: Prop := c.Advice 16 197 = 0
--Annotation: assign value_rlc 197
def advice_14_197: Prop := c.Advice 14 197 = 0
--Annotation: assign code_hash 197
def advice_4_197: Prop := c.Advice 4 197 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 197
def advice_5_197: Prop := c.Advice 5 197 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_197: Prop := c.Advice 17 197 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_197: Prop := c.Advice 18 197 = 1^(-1)
--Annotation: assign q_enable 198
def fixed_1106: Prop := c.Fixed 0 198 = 1
--Annotation: assign q_first 198
def fixed_1107: Prop := c.Fixed 1 198 = 0
--Annotation: assign q_last 198
def fixed_1108: Prop := c.Fixed 2 198 = 0
--Annotation: assign tag 198
def advice_0_198: Prop := c.Advice 0 198 = 0
--Annotation: assign index 198
def advice_1_198: Prop := c.Advice 1 198 = 0
--Annotation: assign is_code 198
def advice_2_198: Prop := c.Advice 2 198 = 0
--Annotation: assign value 198
def advice_3_198: Prop := c.Advice 3 198 = 0
--Annotation: assign push_data_left 198
def advice_13_198: Prop := c.Advice 13 198 = 0
--Annotation: assign length 198
def advice_15_198: Prop := c.Advice 15 198 = 0
--Annotation: assign push_data_size 198
def advice_16_198: Prop := c.Advice 16 198 = 0
--Annotation: assign value_rlc 198
def advice_14_198: Prop := c.Advice 14 198 = 0
--Annotation: assign code_hash 198
def advice_4_198: Prop := c.Advice 4 198 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 198
def advice_5_198: Prop := c.Advice 5 198 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_198: Prop := c.Advice 17 198 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_198: Prop := c.Advice 18 198 = 1^(-1)
--Annotation: assign q_enable 199
def fixed_1109: Prop := c.Fixed 0 199 = 1
--Annotation: assign q_first 199
def fixed_1110: Prop := c.Fixed 1 199 = 0
--Annotation: assign q_last 199
def fixed_1111: Prop := c.Fixed 2 199 = 0
--Annotation: assign tag 199
def advice_0_199: Prop := c.Advice 0 199 = 0
--Annotation: assign index 199
def advice_1_199: Prop := c.Advice 1 199 = 0
--Annotation: assign is_code 199
def advice_2_199: Prop := c.Advice 2 199 = 0
--Annotation: assign value 199
def advice_3_199: Prop := c.Advice 3 199 = 0
--Annotation: assign push_data_left 199
def advice_13_199: Prop := c.Advice 13 199 = 0
--Annotation: assign length 199
def advice_15_199: Prop := c.Advice 15 199 = 0
--Annotation: assign push_data_size 199
def advice_16_199: Prop := c.Advice 16 199 = 0
--Annotation: assign value_rlc 199
def advice_14_199: Prop := c.Advice 14 199 = 0
--Annotation: assign code_hash 199
def advice_4_199: Prop := c.Advice 4 199 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 199
def advice_5_199: Prop := c.Advice 5 199 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_199: Prop := c.Advice 17 199 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_199: Prop := c.Advice 18 199 = 1^(-1)
--Annotation: assign q_enable 200
def fixed_1112: Prop := c.Fixed 0 200 = 1
--Annotation: assign q_first 200
def fixed_1113: Prop := c.Fixed 1 200 = 0
--Annotation: assign q_last 200
def fixed_1114: Prop := c.Fixed 2 200 = 0
--Annotation: assign tag 200
def advice_0_200: Prop := c.Advice 0 200 = 0
--Annotation: assign index 200
def advice_1_200: Prop := c.Advice 1 200 = 0
--Annotation: assign is_code 200
def advice_2_200: Prop := c.Advice 2 200 = 0
--Annotation: assign value 200
def advice_3_200: Prop := c.Advice 3 200 = 0
--Annotation: assign push_data_left 200
def advice_13_200: Prop := c.Advice 13 200 = 0
--Annotation: assign length 200
def advice_15_200: Prop := c.Advice 15 200 = 0
--Annotation: assign push_data_size 200
def advice_16_200: Prop := c.Advice 16 200 = 0
--Annotation: assign value_rlc 200
def advice_14_200: Prop := c.Advice 14 200 = 0
--Annotation: assign code_hash 200
def advice_4_200: Prop := c.Advice 4 200 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 200
def advice_5_200: Prop := c.Advice 5 200 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_200: Prop := c.Advice 17 200 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_200: Prop := c.Advice 18 200 = 1^(-1)
--Annotation: assign q_enable 201
def fixed_1115: Prop := c.Fixed 0 201 = 1
--Annotation: assign q_first 201
def fixed_1116: Prop := c.Fixed 1 201 = 0
--Annotation: assign q_last 201
def fixed_1117: Prop := c.Fixed 2 201 = 0
--Annotation: assign tag 201
def advice_0_201: Prop := c.Advice 0 201 = 0
--Annotation: assign index 201
def advice_1_201: Prop := c.Advice 1 201 = 0
--Annotation: assign is_code 201
def advice_2_201: Prop := c.Advice 2 201 = 0
--Annotation: assign value 201
def advice_3_201: Prop := c.Advice 3 201 = 0
--Annotation: assign push_data_left 201
def advice_13_201: Prop := c.Advice 13 201 = 0
--Annotation: assign length 201
def advice_15_201: Prop := c.Advice 15 201 = 0
--Annotation: assign push_data_size 201
def advice_16_201: Prop := c.Advice 16 201 = 0
--Annotation: assign value_rlc 201
def advice_14_201: Prop := c.Advice 14 201 = 0
--Annotation: assign code_hash 201
def advice_4_201: Prop := c.Advice 4 201 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 201
def advice_5_201: Prop := c.Advice 5 201 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_201: Prop := c.Advice 17 201 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_201: Prop := c.Advice 18 201 = 1^(-1)
--Annotation: assign q_enable 202
def fixed_1118: Prop := c.Fixed 0 202 = 1
--Annotation: assign q_first 202
def fixed_1119: Prop := c.Fixed 1 202 = 0
--Annotation: assign q_last 202
def fixed_1120: Prop := c.Fixed 2 202 = 0
--Annotation: assign tag 202
def advice_0_202: Prop := c.Advice 0 202 = 0
--Annotation: assign index 202
def advice_1_202: Prop := c.Advice 1 202 = 0
--Annotation: assign is_code 202
def advice_2_202: Prop := c.Advice 2 202 = 0
--Annotation: assign value 202
def advice_3_202: Prop := c.Advice 3 202 = 0
--Annotation: assign push_data_left 202
def advice_13_202: Prop := c.Advice 13 202 = 0
--Annotation: assign length 202
def advice_15_202: Prop := c.Advice 15 202 = 0
--Annotation: assign push_data_size 202
def advice_16_202: Prop := c.Advice 16 202 = 0
--Annotation: assign value_rlc 202
def advice_14_202: Prop := c.Advice 14 202 = 0
--Annotation: assign code_hash 202
def advice_4_202: Prop := c.Advice 4 202 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 202
def advice_5_202: Prop := c.Advice 5 202 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_202: Prop := c.Advice 17 202 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_202: Prop := c.Advice 18 202 = 1^(-1)
--Annotation: assign q_enable 203
def fixed_1121: Prop := c.Fixed 0 203 = 1
--Annotation: assign q_first 203
def fixed_1122: Prop := c.Fixed 1 203 = 0
--Annotation: assign q_last 203
def fixed_1123: Prop := c.Fixed 2 203 = 0
--Annotation: assign tag 203
def advice_0_203: Prop := c.Advice 0 203 = 0
--Annotation: assign index 203
def advice_1_203: Prop := c.Advice 1 203 = 0
--Annotation: assign is_code 203
def advice_2_203: Prop := c.Advice 2 203 = 0
--Annotation: assign value 203
def advice_3_203: Prop := c.Advice 3 203 = 0
--Annotation: assign push_data_left 203
def advice_13_203: Prop := c.Advice 13 203 = 0
--Annotation: assign length 203
def advice_15_203: Prop := c.Advice 15 203 = 0
--Annotation: assign push_data_size 203
def advice_16_203: Prop := c.Advice 16 203 = 0
--Annotation: assign value_rlc 203
def advice_14_203: Prop := c.Advice 14 203 = 0
--Annotation: assign code_hash 203
def advice_4_203: Prop := c.Advice 4 203 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 203
def advice_5_203: Prop := c.Advice 5 203 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_203: Prop := c.Advice 17 203 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_203: Prop := c.Advice 18 203 = 1^(-1)
--Annotation: assign q_enable 204
def fixed_1124: Prop := c.Fixed 0 204 = 1
--Annotation: assign q_first 204
def fixed_1125: Prop := c.Fixed 1 204 = 0
--Annotation: assign q_last 204
def fixed_1126: Prop := c.Fixed 2 204 = 0
--Annotation: assign tag 204
def advice_0_204: Prop := c.Advice 0 204 = 0
--Annotation: assign index 204
def advice_1_204: Prop := c.Advice 1 204 = 0
--Annotation: assign is_code 204
def advice_2_204: Prop := c.Advice 2 204 = 0
--Annotation: assign value 204
def advice_3_204: Prop := c.Advice 3 204 = 0
--Annotation: assign push_data_left 204
def advice_13_204: Prop := c.Advice 13 204 = 0
--Annotation: assign length 204
def advice_15_204: Prop := c.Advice 15 204 = 0
--Annotation: assign push_data_size 204
def advice_16_204: Prop := c.Advice 16 204 = 0
--Annotation: assign value_rlc 204
def advice_14_204: Prop := c.Advice 14 204 = 0
--Annotation: assign code_hash 204
def advice_4_204: Prop := c.Advice 4 204 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 204
def advice_5_204: Prop := c.Advice 5 204 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_204: Prop := c.Advice 17 204 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_204: Prop := c.Advice 18 204 = 1^(-1)
--Annotation: assign q_enable 205
def fixed_1127: Prop := c.Fixed 0 205 = 1
--Annotation: assign q_first 205
def fixed_1128: Prop := c.Fixed 1 205 = 0
--Annotation: assign q_last 205
def fixed_1129: Prop := c.Fixed 2 205 = 0
--Annotation: assign tag 205
def advice_0_205: Prop := c.Advice 0 205 = 0
--Annotation: assign index 205
def advice_1_205: Prop := c.Advice 1 205 = 0
--Annotation: assign is_code 205
def advice_2_205: Prop := c.Advice 2 205 = 0
--Annotation: assign value 205
def advice_3_205: Prop := c.Advice 3 205 = 0
--Annotation: assign push_data_left 205
def advice_13_205: Prop := c.Advice 13 205 = 0
--Annotation: assign length 205
def advice_15_205: Prop := c.Advice 15 205 = 0
--Annotation: assign push_data_size 205
def advice_16_205: Prop := c.Advice 16 205 = 0
--Annotation: assign value_rlc 205
def advice_14_205: Prop := c.Advice 14 205 = 0
--Annotation: assign code_hash 205
def advice_4_205: Prop := c.Advice 4 205 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 205
def advice_5_205: Prop := c.Advice 5 205 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_205: Prop := c.Advice 17 205 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_205: Prop := c.Advice 18 205 = 1^(-1)
--Annotation: assign q_enable 206
def fixed_1130: Prop := c.Fixed 0 206 = 1
--Annotation: assign q_first 206
def fixed_1131: Prop := c.Fixed 1 206 = 0
--Annotation: assign q_last 206
def fixed_1132: Prop := c.Fixed 2 206 = 0
--Annotation: assign tag 206
def advice_0_206: Prop := c.Advice 0 206 = 0
--Annotation: assign index 206
def advice_1_206: Prop := c.Advice 1 206 = 0
--Annotation: assign is_code 206
def advice_2_206: Prop := c.Advice 2 206 = 0
--Annotation: assign value 206
def advice_3_206: Prop := c.Advice 3 206 = 0
--Annotation: assign push_data_left 206
def advice_13_206: Prop := c.Advice 13 206 = 0
--Annotation: assign length 206
def advice_15_206: Prop := c.Advice 15 206 = 0
--Annotation: assign push_data_size 206
def advice_16_206: Prop := c.Advice 16 206 = 0
--Annotation: assign value_rlc 206
def advice_14_206: Prop := c.Advice 14 206 = 0
--Annotation: assign code_hash 206
def advice_4_206: Prop := c.Advice 4 206 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 206
def advice_5_206: Prop := c.Advice 5 206 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_206: Prop := c.Advice 17 206 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_206: Prop := c.Advice 18 206 = 1^(-1)
--Annotation: assign q_enable 207
def fixed_1133: Prop := c.Fixed 0 207 = 1
--Annotation: assign q_first 207
def fixed_1134: Prop := c.Fixed 1 207 = 0
--Annotation: assign q_last 207
def fixed_1135: Prop := c.Fixed 2 207 = 0
--Annotation: assign tag 207
def advice_0_207: Prop := c.Advice 0 207 = 0
--Annotation: assign index 207
def advice_1_207: Prop := c.Advice 1 207 = 0
--Annotation: assign is_code 207
def advice_2_207: Prop := c.Advice 2 207 = 0
--Annotation: assign value 207
def advice_3_207: Prop := c.Advice 3 207 = 0
--Annotation: assign push_data_left 207
def advice_13_207: Prop := c.Advice 13 207 = 0
--Annotation: assign length 207
def advice_15_207: Prop := c.Advice 15 207 = 0
--Annotation: assign push_data_size 207
def advice_16_207: Prop := c.Advice 16 207 = 0
--Annotation: assign value_rlc 207
def advice_14_207: Prop := c.Advice 14 207 = 0
--Annotation: assign code_hash 207
def advice_4_207: Prop := c.Advice 4 207 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 207
def advice_5_207: Prop := c.Advice 5 207 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_207: Prop := c.Advice 17 207 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_207: Prop := c.Advice 18 207 = 1^(-1)
--Annotation: assign q_enable 208
def fixed_1136: Prop := c.Fixed 0 208 = 1
--Annotation: assign q_first 208
def fixed_1137: Prop := c.Fixed 1 208 = 0
--Annotation: assign q_last 208
def fixed_1138: Prop := c.Fixed 2 208 = 0
--Annotation: assign tag 208
def advice_0_208: Prop := c.Advice 0 208 = 0
--Annotation: assign index 208
def advice_1_208: Prop := c.Advice 1 208 = 0
--Annotation: assign is_code 208
def advice_2_208: Prop := c.Advice 2 208 = 0
--Annotation: assign value 208
def advice_3_208: Prop := c.Advice 3 208 = 0
--Annotation: assign push_data_left 208
def advice_13_208: Prop := c.Advice 13 208 = 0
--Annotation: assign length 208
def advice_15_208: Prop := c.Advice 15 208 = 0
--Annotation: assign push_data_size 208
def advice_16_208: Prop := c.Advice 16 208 = 0
--Annotation: assign value_rlc 208
def advice_14_208: Prop := c.Advice 14 208 = 0
--Annotation: assign code_hash 208
def advice_4_208: Prop := c.Advice 4 208 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 208
def advice_5_208: Prop := c.Advice 5 208 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_208: Prop := c.Advice 17 208 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_208: Prop := c.Advice 18 208 = 1^(-1)
--Annotation: assign q_enable 209
def fixed_1139: Prop := c.Fixed 0 209 = 1
--Annotation: assign q_first 209
def fixed_1140: Prop := c.Fixed 1 209 = 0
--Annotation: assign q_last 209
def fixed_1141: Prop := c.Fixed 2 209 = 0
--Annotation: assign tag 209
def advice_0_209: Prop := c.Advice 0 209 = 0
--Annotation: assign index 209
def advice_1_209: Prop := c.Advice 1 209 = 0
--Annotation: assign is_code 209
def advice_2_209: Prop := c.Advice 2 209 = 0
--Annotation: assign value 209
def advice_3_209: Prop := c.Advice 3 209 = 0
--Annotation: assign push_data_left 209
def advice_13_209: Prop := c.Advice 13 209 = 0
--Annotation: assign length 209
def advice_15_209: Prop := c.Advice 15 209 = 0
--Annotation: assign push_data_size 209
def advice_16_209: Prop := c.Advice 16 209 = 0
--Annotation: assign value_rlc 209
def advice_14_209: Prop := c.Advice 14 209 = 0
--Annotation: assign code_hash 209
def advice_4_209: Prop := c.Advice 4 209 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 209
def advice_5_209: Prop := c.Advice 5 209 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_209: Prop := c.Advice 17 209 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_209: Prop := c.Advice 18 209 = 1^(-1)
--Annotation: assign q_enable 210
def fixed_1142: Prop := c.Fixed 0 210 = 1
--Annotation: assign q_first 210
def fixed_1143: Prop := c.Fixed 1 210 = 0
--Annotation: assign q_last 210
def fixed_1144: Prop := c.Fixed 2 210 = 0
--Annotation: assign tag 210
def advice_0_210: Prop := c.Advice 0 210 = 0
--Annotation: assign index 210
def advice_1_210: Prop := c.Advice 1 210 = 0
--Annotation: assign is_code 210
def advice_2_210: Prop := c.Advice 2 210 = 0
--Annotation: assign value 210
def advice_3_210: Prop := c.Advice 3 210 = 0
--Annotation: assign push_data_left 210
def advice_13_210: Prop := c.Advice 13 210 = 0
--Annotation: assign length 210
def advice_15_210: Prop := c.Advice 15 210 = 0
--Annotation: assign push_data_size 210
def advice_16_210: Prop := c.Advice 16 210 = 0
--Annotation: assign value_rlc 210
def advice_14_210: Prop := c.Advice 14 210 = 0
--Annotation: assign code_hash 210
def advice_4_210: Prop := c.Advice 4 210 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 210
def advice_5_210: Prop := c.Advice 5 210 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_210: Prop := c.Advice 17 210 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_210: Prop := c.Advice 18 210 = 1^(-1)
--Annotation: assign q_enable 211
def fixed_1145: Prop := c.Fixed 0 211 = 1
--Annotation: assign q_first 211
def fixed_1146: Prop := c.Fixed 1 211 = 0
--Annotation: assign q_last 211
def fixed_1147: Prop := c.Fixed 2 211 = 0
--Annotation: assign tag 211
def advice_0_211: Prop := c.Advice 0 211 = 0
--Annotation: assign index 211
def advice_1_211: Prop := c.Advice 1 211 = 0
--Annotation: assign is_code 211
def advice_2_211: Prop := c.Advice 2 211 = 0
--Annotation: assign value 211
def advice_3_211: Prop := c.Advice 3 211 = 0
--Annotation: assign push_data_left 211
def advice_13_211: Prop := c.Advice 13 211 = 0
--Annotation: assign length 211
def advice_15_211: Prop := c.Advice 15 211 = 0
--Annotation: assign push_data_size 211
def advice_16_211: Prop := c.Advice 16 211 = 0
--Annotation: assign value_rlc 211
def advice_14_211: Prop := c.Advice 14 211 = 0
--Annotation: assign code_hash 211
def advice_4_211: Prop := c.Advice 4 211 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 211
def advice_5_211: Prop := c.Advice 5 211 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_211: Prop := c.Advice 17 211 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_211: Prop := c.Advice 18 211 = 1^(-1)
--Annotation: assign q_enable 212
def fixed_1148: Prop := c.Fixed 0 212 = 1
--Annotation: assign q_first 212
def fixed_1149: Prop := c.Fixed 1 212 = 0
--Annotation: assign q_last 212
def fixed_1150: Prop := c.Fixed 2 212 = 0
--Annotation: assign tag 212
def advice_0_212: Prop := c.Advice 0 212 = 0
--Annotation: assign index 212
def advice_1_212: Prop := c.Advice 1 212 = 0
--Annotation: assign is_code 212
def advice_2_212: Prop := c.Advice 2 212 = 0
--Annotation: assign value 212
def advice_3_212: Prop := c.Advice 3 212 = 0
--Annotation: assign push_data_left 212
def advice_13_212: Prop := c.Advice 13 212 = 0
--Annotation: assign length 212
def advice_15_212: Prop := c.Advice 15 212 = 0
--Annotation: assign push_data_size 212
def advice_16_212: Prop := c.Advice 16 212 = 0
--Annotation: assign value_rlc 212
def advice_14_212: Prop := c.Advice 14 212 = 0
--Annotation: assign code_hash 212
def advice_4_212: Prop := c.Advice 4 212 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 212
def advice_5_212: Prop := c.Advice 5 212 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_212: Prop := c.Advice 17 212 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_212: Prop := c.Advice 18 212 = 1^(-1)
--Annotation: assign q_enable 213
def fixed_1151: Prop := c.Fixed 0 213 = 1
--Annotation: assign q_first 213
def fixed_1152: Prop := c.Fixed 1 213 = 0
--Annotation: assign q_last 213
def fixed_1153: Prop := c.Fixed 2 213 = 0
--Annotation: assign tag 213
def advice_0_213: Prop := c.Advice 0 213 = 0
--Annotation: assign index 213
def advice_1_213: Prop := c.Advice 1 213 = 0
--Annotation: assign is_code 213
def advice_2_213: Prop := c.Advice 2 213 = 0
--Annotation: assign value 213
def advice_3_213: Prop := c.Advice 3 213 = 0
--Annotation: assign push_data_left 213
def advice_13_213: Prop := c.Advice 13 213 = 0
--Annotation: assign length 213
def advice_15_213: Prop := c.Advice 15 213 = 0
--Annotation: assign push_data_size 213
def advice_16_213: Prop := c.Advice 16 213 = 0
--Annotation: assign value_rlc 213
def advice_14_213: Prop := c.Advice 14 213 = 0
--Annotation: assign code_hash 213
def advice_4_213: Prop := c.Advice 4 213 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 213
def advice_5_213: Prop := c.Advice 5 213 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_213: Prop := c.Advice 17 213 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_213: Prop := c.Advice 18 213 = 1^(-1)
--Annotation: assign q_enable 214
def fixed_1154: Prop := c.Fixed 0 214 = 1
--Annotation: assign q_first 214
def fixed_1155: Prop := c.Fixed 1 214 = 0
--Annotation: assign q_last 214
def fixed_1156: Prop := c.Fixed 2 214 = 0
--Annotation: assign tag 214
def advice_0_214: Prop := c.Advice 0 214 = 0
--Annotation: assign index 214
def advice_1_214: Prop := c.Advice 1 214 = 0
--Annotation: assign is_code 214
def advice_2_214: Prop := c.Advice 2 214 = 0
--Annotation: assign value 214
def advice_3_214: Prop := c.Advice 3 214 = 0
--Annotation: assign push_data_left 214
def advice_13_214: Prop := c.Advice 13 214 = 0
--Annotation: assign length 214
def advice_15_214: Prop := c.Advice 15 214 = 0
--Annotation: assign push_data_size 214
def advice_16_214: Prop := c.Advice 16 214 = 0
--Annotation: assign value_rlc 214
def advice_14_214: Prop := c.Advice 14 214 = 0
--Annotation: assign code_hash 214
def advice_4_214: Prop := c.Advice 4 214 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 214
def advice_5_214: Prop := c.Advice 5 214 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_214: Prop := c.Advice 17 214 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_214: Prop := c.Advice 18 214 = 1^(-1)
--Annotation: assign q_enable 215
def fixed_1157: Prop := c.Fixed 0 215 = 1
--Annotation: assign q_first 215
def fixed_1158: Prop := c.Fixed 1 215 = 0
--Annotation: assign q_last 215
def fixed_1159: Prop := c.Fixed 2 215 = 0
--Annotation: assign tag 215
def advice_0_215: Prop := c.Advice 0 215 = 0
--Annotation: assign index 215
def advice_1_215: Prop := c.Advice 1 215 = 0
--Annotation: assign is_code 215
def advice_2_215: Prop := c.Advice 2 215 = 0
--Annotation: assign value 215
def advice_3_215: Prop := c.Advice 3 215 = 0
--Annotation: assign push_data_left 215
def advice_13_215: Prop := c.Advice 13 215 = 0
--Annotation: assign length 215
def advice_15_215: Prop := c.Advice 15 215 = 0
--Annotation: assign push_data_size 215
def advice_16_215: Prop := c.Advice 16 215 = 0
--Annotation: assign value_rlc 215
def advice_14_215: Prop := c.Advice 14 215 = 0
--Annotation: assign code_hash 215
def advice_4_215: Prop := c.Advice 4 215 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 215
def advice_5_215: Prop := c.Advice 5 215 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_215: Prop := c.Advice 17 215 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_215: Prop := c.Advice 18 215 = 1^(-1)
--Annotation: assign q_enable 216
def fixed_1160: Prop := c.Fixed 0 216 = 1
--Annotation: assign q_first 216
def fixed_1161: Prop := c.Fixed 1 216 = 0
--Annotation: assign q_last 216
def fixed_1162: Prop := c.Fixed 2 216 = 0
--Annotation: assign tag 216
def advice_0_216: Prop := c.Advice 0 216 = 0
--Annotation: assign index 216
def advice_1_216: Prop := c.Advice 1 216 = 0
--Annotation: assign is_code 216
def advice_2_216: Prop := c.Advice 2 216 = 0
--Annotation: assign value 216
def advice_3_216: Prop := c.Advice 3 216 = 0
--Annotation: assign push_data_left 216
def advice_13_216: Prop := c.Advice 13 216 = 0
--Annotation: assign length 216
def advice_15_216: Prop := c.Advice 15 216 = 0
--Annotation: assign push_data_size 216
def advice_16_216: Prop := c.Advice 16 216 = 0
--Annotation: assign value_rlc 216
def advice_14_216: Prop := c.Advice 14 216 = 0
--Annotation: assign code_hash 216
def advice_4_216: Prop := c.Advice 4 216 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 216
def advice_5_216: Prop := c.Advice 5 216 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_216: Prop := c.Advice 17 216 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_216: Prop := c.Advice 18 216 = 1^(-1)
--Annotation: assign q_enable 217
def fixed_1163: Prop := c.Fixed 0 217 = 1
--Annotation: assign q_first 217
def fixed_1164: Prop := c.Fixed 1 217 = 0
--Annotation: assign q_last 217
def fixed_1165: Prop := c.Fixed 2 217 = 0
--Annotation: assign tag 217
def advice_0_217: Prop := c.Advice 0 217 = 0
--Annotation: assign index 217
def advice_1_217: Prop := c.Advice 1 217 = 0
--Annotation: assign is_code 217
def advice_2_217: Prop := c.Advice 2 217 = 0
--Annotation: assign value 217
def advice_3_217: Prop := c.Advice 3 217 = 0
--Annotation: assign push_data_left 217
def advice_13_217: Prop := c.Advice 13 217 = 0
--Annotation: assign length 217
def advice_15_217: Prop := c.Advice 15 217 = 0
--Annotation: assign push_data_size 217
def advice_16_217: Prop := c.Advice 16 217 = 0
--Annotation: assign value_rlc 217
def advice_14_217: Prop := c.Advice 14 217 = 0
--Annotation: assign code_hash 217
def advice_4_217: Prop := c.Advice 4 217 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 217
def advice_5_217: Prop := c.Advice 5 217 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_217: Prop := c.Advice 17 217 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_217: Prop := c.Advice 18 217 = 1^(-1)
--Annotation: assign q_enable 218
def fixed_1166: Prop := c.Fixed 0 218 = 1
--Annotation: assign q_first 218
def fixed_1167: Prop := c.Fixed 1 218 = 0
--Annotation: assign q_last 218
def fixed_1168: Prop := c.Fixed 2 218 = 0
--Annotation: assign tag 218
def advice_0_218: Prop := c.Advice 0 218 = 0
--Annotation: assign index 218
def advice_1_218: Prop := c.Advice 1 218 = 0
--Annotation: assign is_code 218
def advice_2_218: Prop := c.Advice 2 218 = 0
--Annotation: assign value 218
def advice_3_218: Prop := c.Advice 3 218 = 0
--Annotation: assign push_data_left 218
def advice_13_218: Prop := c.Advice 13 218 = 0
--Annotation: assign length 218
def advice_15_218: Prop := c.Advice 15 218 = 0
--Annotation: assign push_data_size 218
def advice_16_218: Prop := c.Advice 16 218 = 0
--Annotation: assign value_rlc 218
def advice_14_218: Prop := c.Advice 14 218 = 0
--Annotation: assign code_hash 218
def advice_4_218: Prop := c.Advice 4 218 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 218
def advice_5_218: Prop := c.Advice 5 218 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_218: Prop := c.Advice 17 218 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_218: Prop := c.Advice 18 218 = 1^(-1)
--Annotation: assign q_enable 219
def fixed_1169: Prop := c.Fixed 0 219 = 1
--Annotation: assign q_first 219
def fixed_1170: Prop := c.Fixed 1 219 = 0
--Annotation: assign q_last 219
def fixed_1171: Prop := c.Fixed 2 219 = 0
--Annotation: assign tag 219
def advice_0_219: Prop := c.Advice 0 219 = 0
--Annotation: assign index 219
def advice_1_219: Prop := c.Advice 1 219 = 0
--Annotation: assign is_code 219
def advice_2_219: Prop := c.Advice 2 219 = 0
--Annotation: assign value 219
def advice_3_219: Prop := c.Advice 3 219 = 0
--Annotation: assign push_data_left 219
def advice_13_219: Prop := c.Advice 13 219 = 0
--Annotation: assign length 219
def advice_15_219: Prop := c.Advice 15 219 = 0
--Annotation: assign push_data_size 219
def advice_16_219: Prop := c.Advice 16 219 = 0
--Annotation: assign value_rlc 219
def advice_14_219: Prop := c.Advice 14 219 = 0
--Annotation: assign code_hash 219
def advice_4_219: Prop := c.Advice 4 219 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 219
def advice_5_219: Prop := c.Advice 5 219 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_219: Prop := c.Advice 17 219 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_219: Prop := c.Advice 18 219 = 1^(-1)
--Annotation: assign q_enable 220
def fixed_1172: Prop := c.Fixed 0 220 = 1
--Annotation: assign q_first 220
def fixed_1173: Prop := c.Fixed 1 220 = 0
--Annotation: assign q_last 220
def fixed_1174: Prop := c.Fixed 2 220 = 0
--Annotation: assign tag 220
def advice_0_220: Prop := c.Advice 0 220 = 0
--Annotation: assign index 220
def advice_1_220: Prop := c.Advice 1 220 = 0
--Annotation: assign is_code 220
def advice_2_220: Prop := c.Advice 2 220 = 0
--Annotation: assign value 220
def advice_3_220: Prop := c.Advice 3 220 = 0
--Annotation: assign push_data_left 220
def advice_13_220: Prop := c.Advice 13 220 = 0
--Annotation: assign length 220
def advice_15_220: Prop := c.Advice 15 220 = 0
--Annotation: assign push_data_size 220
def advice_16_220: Prop := c.Advice 16 220 = 0
--Annotation: assign value_rlc 220
def advice_14_220: Prop := c.Advice 14 220 = 0
--Annotation: assign code_hash 220
def advice_4_220: Prop := c.Advice 4 220 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 220
def advice_5_220: Prop := c.Advice 5 220 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_220: Prop := c.Advice 17 220 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_220: Prop := c.Advice 18 220 = 1^(-1)
--Annotation: assign q_enable 221
def fixed_1175: Prop := c.Fixed 0 221 = 1
--Annotation: assign q_first 221
def fixed_1176: Prop := c.Fixed 1 221 = 0
--Annotation: assign q_last 221
def fixed_1177: Prop := c.Fixed 2 221 = 0
--Annotation: assign tag 221
def advice_0_221: Prop := c.Advice 0 221 = 0
--Annotation: assign index 221
def advice_1_221: Prop := c.Advice 1 221 = 0
--Annotation: assign is_code 221
def advice_2_221: Prop := c.Advice 2 221 = 0
--Annotation: assign value 221
def advice_3_221: Prop := c.Advice 3 221 = 0
--Annotation: assign push_data_left 221
def advice_13_221: Prop := c.Advice 13 221 = 0
--Annotation: assign length 221
def advice_15_221: Prop := c.Advice 15 221 = 0
--Annotation: assign push_data_size 221
def advice_16_221: Prop := c.Advice 16 221 = 0
--Annotation: assign value_rlc 221
def advice_14_221: Prop := c.Advice 14 221 = 0
--Annotation: assign code_hash 221
def advice_4_221: Prop := c.Advice 4 221 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 221
def advice_5_221: Prop := c.Advice 5 221 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_221: Prop := c.Advice 17 221 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_221: Prop := c.Advice 18 221 = 1^(-1)
--Annotation: assign q_enable 222
def fixed_1178: Prop := c.Fixed 0 222 = 1
--Annotation: assign q_first 222
def fixed_1179: Prop := c.Fixed 1 222 = 0
--Annotation: assign q_last 222
def fixed_1180: Prop := c.Fixed 2 222 = 0
--Annotation: assign tag 222
def advice_0_222: Prop := c.Advice 0 222 = 0
--Annotation: assign index 222
def advice_1_222: Prop := c.Advice 1 222 = 0
--Annotation: assign is_code 222
def advice_2_222: Prop := c.Advice 2 222 = 0
--Annotation: assign value 222
def advice_3_222: Prop := c.Advice 3 222 = 0
--Annotation: assign push_data_left 222
def advice_13_222: Prop := c.Advice 13 222 = 0
--Annotation: assign length 222
def advice_15_222: Prop := c.Advice 15 222 = 0
--Annotation: assign push_data_size 222
def advice_16_222: Prop := c.Advice 16 222 = 0
--Annotation: assign value_rlc 222
def advice_14_222: Prop := c.Advice 14 222 = 0
--Annotation: assign code_hash 222
def advice_4_222: Prop := c.Advice 4 222 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 222
def advice_5_222: Prop := c.Advice 5 222 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_222: Prop := c.Advice 17 222 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_222: Prop := c.Advice 18 222 = 1^(-1)
--Annotation: assign q_enable 223
def fixed_1181: Prop := c.Fixed 0 223 = 1
--Annotation: assign q_first 223
def fixed_1182: Prop := c.Fixed 1 223 = 0
--Annotation: assign q_last 223
def fixed_1183: Prop := c.Fixed 2 223 = 0
--Annotation: assign tag 223
def advice_0_223: Prop := c.Advice 0 223 = 0
--Annotation: assign index 223
def advice_1_223: Prop := c.Advice 1 223 = 0
--Annotation: assign is_code 223
def advice_2_223: Prop := c.Advice 2 223 = 0
--Annotation: assign value 223
def advice_3_223: Prop := c.Advice 3 223 = 0
--Annotation: assign push_data_left 223
def advice_13_223: Prop := c.Advice 13 223 = 0
--Annotation: assign length 223
def advice_15_223: Prop := c.Advice 15 223 = 0
--Annotation: assign push_data_size 223
def advice_16_223: Prop := c.Advice 16 223 = 0
--Annotation: assign value_rlc 223
def advice_14_223: Prop := c.Advice 14 223 = 0
--Annotation: assign code_hash 223
def advice_4_223: Prop := c.Advice 4 223 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 223
def advice_5_223: Prop := c.Advice 5 223 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_223: Prop := c.Advice 17 223 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_223: Prop := c.Advice 18 223 = 1^(-1)
--Annotation: assign q_enable 224
def fixed_1184: Prop := c.Fixed 0 224 = 1
--Annotation: assign q_first 224
def fixed_1185: Prop := c.Fixed 1 224 = 0
--Annotation: assign q_last 224
def fixed_1186: Prop := c.Fixed 2 224 = 0
--Annotation: assign tag 224
def advice_0_224: Prop := c.Advice 0 224 = 0
--Annotation: assign index 224
def advice_1_224: Prop := c.Advice 1 224 = 0
--Annotation: assign is_code 224
def advice_2_224: Prop := c.Advice 2 224 = 0
--Annotation: assign value 224
def advice_3_224: Prop := c.Advice 3 224 = 0
--Annotation: assign push_data_left 224
def advice_13_224: Prop := c.Advice 13 224 = 0
--Annotation: assign length 224
def advice_15_224: Prop := c.Advice 15 224 = 0
--Annotation: assign push_data_size 224
def advice_16_224: Prop := c.Advice 16 224 = 0
--Annotation: assign value_rlc 224
def advice_14_224: Prop := c.Advice 14 224 = 0
--Annotation: assign code_hash 224
def advice_4_224: Prop := c.Advice 4 224 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 224
def advice_5_224: Prop := c.Advice 5 224 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_224: Prop := c.Advice 17 224 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_224: Prop := c.Advice 18 224 = 1^(-1)
--Annotation: assign q_enable 225
def fixed_1187: Prop := c.Fixed 0 225 = 1
--Annotation: assign q_first 225
def fixed_1188: Prop := c.Fixed 1 225 = 0
--Annotation: assign q_last 225
def fixed_1189: Prop := c.Fixed 2 225 = 0
--Annotation: assign tag 225
def advice_0_225: Prop := c.Advice 0 225 = 0
--Annotation: assign index 225
def advice_1_225: Prop := c.Advice 1 225 = 0
--Annotation: assign is_code 225
def advice_2_225: Prop := c.Advice 2 225 = 0
--Annotation: assign value 225
def advice_3_225: Prop := c.Advice 3 225 = 0
--Annotation: assign push_data_left 225
def advice_13_225: Prop := c.Advice 13 225 = 0
--Annotation: assign length 225
def advice_15_225: Prop := c.Advice 15 225 = 0
--Annotation: assign push_data_size 225
def advice_16_225: Prop := c.Advice 16 225 = 0
--Annotation: assign value_rlc 225
def advice_14_225: Prop := c.Advice 14 225 = 0
--Annotation: assign code_hash 225
def advice_4_225: Prop := c.Advice 4 225 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 225
def advice_5_225: Prop := c.Advice 5 225 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_225: Prop := c.Advice 17 225 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_225: Prop := c.Advice 18 225 = 1^(-1)
--Annotation: assign q_enable 226
def fixed_1190: Prop := c.Fixed 0 226 = 1
--Annotation: assign q_first 226
def fixed_1191: Prop := c.Fixed 1 226 = 0
--Annotation: assign q_last 226
def fixed_1192: Prop := c.Fixed 2 226 = 0
--Annotation: assign tag 226
def advice_0_226: Prop := c.Advice 0 226 = 0
--Annotation: assign index 226
def advice_1_226: Prop := c.Advice 1 226 = 0
--Annotation: assign is_code 226
def advice_2_226: Prop := c.Advice 2 226 = 0
--Annotation: assign value 226
def advice_3_226: Prop := c.Advice 3 226 = 0
--Annotation: assign push_data_left 226
def advice_13_226: Prop := c.Advice 13 226 = 0
--Annotation: assign length 226
def advice_15_226: Prop := c.Advice 15 226 = 0
--Annotation: assign push_data_size 226
def advice_16_226: Prop := c.Advice 16 226 = 0
--Annotation: assign value_rlc 226
def advice_14_226: Prop := c.Advice 14 226 = 0
--Annotation: assign code_hash 226
def advice_4_226: Prop := c.Advice 4 226 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 226
def advice_5_226: Prop := c.Advice 5 226 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_226: Prop := c.Advice 17 226 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_226: Prop := c.Advice 18 226 = 1^(-1)
--Annotation: assign q_enable 227
def fixed_1193: Prop := c.Fixed 0 227 = 1
--Annotation: assign q_first 227
def fixed_1194: Prop := c.Fixed 1 227 = 0
--Annotation: assign q_last 227
def fixed_1195: Prop := c.Fixed 2 227 = 0
--Annotation: assign tag 227
def advice_0_227: Prop := c.Advice 0 227 = 0
--Annotation: assign index 227
def advice_1_227: Prop := c.Advice 1 227 = 0
--Annotation: assign is_code 227
def advice_2_227: Prop := c.Advice 2 227 = 0
--Annotation: assign value 227
def advice_3_227: Prop := c.Advice 3 227 = 0
--Annotation: assign push_data_left 227
def advice_13_227: Prop := c.Advice 13 227 = 0
--Annotation: assign length 227
def advice_15_227: Prop := c.Advice 15 227 = 0
--Annotation: assign push_data_size 227
def advice_16_227: Prop := c.Advice 16 227 = 0
--Annotation: assign value_rlc 227
def advice_14_227: Prop := c.Advice 14 227 = 0
--Annotation: assign code_hash 227
def advice_4_227: Prop := c.Advice 4 227 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 227
def advice_5_227: Prop := c.Advice 5 227 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_227: Prop := c.Advice 17 227 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_227: Prop := c.Advice 18 227 = 1^(-1)
--Annotation: assign q_enable 228
def fixed_1196: Prop := c.Fixed 0 228 = 1
--Annotation: assign q_first 228
def fixed_1197: Prop := c.Fixed 1 228 = 0
--Annotation: assign q_last 228
def fixed_1198: Prop := c.Fixed 2 228 = 0
--Annotation: assign tag 228
def advice_0_228: Prop := c.Advice 0 228 = 0
--Annotation: assign index 228
def advice_1_228: Prop := c.Advice 1 228 = 0
--Annotation: assign is_code 228
def advice_2_228: Prop := c.Advice 2 228 = 0
--Annotation: assign value 228
def advice_3_228: Prop := c.Advice 3 228 = 0
--Annotation: assign push_data_left 228
def advice_13_228: Prop := c.Advice 13 228 = 0
--Annotation: assign length 228
def advice_15_228: Prop := c.Advice 15 228 = 0
--Annotation: assign push_data_size 228
def advice_16_228: Prop := c.Advice 16 228 = 0
--Annotation: assign value_rlc 228
def advice_14_228: Prop := c.Advice 14 228 = 0
--Annotation: assign code_hash 228
def advice_4_228: Prop := c.Advice 4 228 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 228
def advice_5_228: Prop := c.Advice 5 228 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_228: Prop := c.Advice 17 228 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_228: Prop := c.Advice 18 228 = 1^(-1)
--Annotation: assign q_enable 229
def fixed_1199: Prop := c.Fixed 0 229 = 1
--Annotation: assign q_first 229
def fixed_1200: Prop := c.Fixed 1 229 = 0
--Annotation: assign q_last 229
def fixed_1201: Prop := c.Fixed 2 229 = 0
--Annotation: assign tag 229
def advice_0_229: Prop := c.Advice 0 229 = 0
--Annotation: assign index 229
def advice_1_229: Prop := c.Advice 1 229 = 0
--Annotation: assign is_code 229
def advice_2_229: Prop := c.Advice 2 229 = 0
--Annotation: assign value 229
def advice_3_229: Prop := c.Advice 3 229 = 0
--Annotation: assign push_data_left 229
def advice_13_229: Prop := c.Advice 13 229 = 0
--Annotation: assign length 229
def advice_15_229: Prop := c.Advice 15 229 = 0
--Annotation: assign push_data_size 229
def advice_16_229: Prop := c.Advice 16 229 = 0
--Annotation: assign value_rlc 229
def advice_14_229: Prop := c.Advice 14 229 = 0
--Annotation: assign code_hash 229
def advice_4_229: Prop := c.Advice 4 229 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 229
def advice_5_229: Prop := c.Advice 5 229 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_229: Prop := c.Advice 17 229 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_229: Prop := c.Advice 18 229 = 1^(-1)
--Annotation: assign q_enable 230
def fixed_1202: Prop := c.Fixed 0 230 = 1
--Annotation: assign q_first 230
def fixed_1203: Prop := c.Fixed 1 230 = 0
--Annotation: assign q_last 230
def fixed_1204: Prop := c.Fixed 2 230 = 0
--Annotation: assign tag 230
def advice_0_230: Prop := c.Advice 0 230 = 0
--Annotation: assign index 230
def advice_1_230: Prop := c.Advice 1 230 = 0
--Annotation: assign is_code 230
def advice_2_230: Prop := c.Advice 2 230 = 0
--Annotation: assign value 230
def advice_3_230: Prop := c.Advice 3 230 = 0
--Annotation: assign push_data_left 230
def advice_13_230: Prop := c.Advice 13 230 = 0
--Annotation: assign length 230
def advice_15_230: Prop := c.Advice 15 230 = 0
--Annotation: assign push_data_size 230
def advice_16_230: Prop := c.Advice 16 230 = 0
--Annotation: assign value_rlc 230
def advice_14_230: Prop := c.Advice 14 230 = 0
--Annotation: assign code_hash 230
def advice_4_230: Prop := c.Advice 4 230 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 230
def advice_5_230: Prop := c.Advice 5 230 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_230: Prop := c.Advice 17 230 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_230: Prop := c.Advice 18 230 = 1^(-1)
--Annotation: assign q_enable 231
def fixed_1205: Prop := c.Fixed 0 231 = 1
--Annotation: assign q_first 231
def fixed_1206: Prop := c.Fixed 1 231 = 0
--Annotation: assign q_last 231
def fixed_1207: Prop := c.Fixed 2 231 = 0
--Annotation: assign tag 231
def advice_0_231: Prop := c.Advice 0 231 = 0
--Annotation: assign index 231
def advice_1_231: Prop := c.Advice 1 231 = 0
--Annotation: assign is_code 231
def advice_2_231: Prop := c.Advice 2 231 = 0
--Annotation: assign value 231
def advice_3_231: Prop := c.Advice 3 231 = 0
--Annotation: assign push_data_left 231
def advice_13_231: Prop := c.Advice 13 231 = 0
--Annotation: assign length 231
def advice_15_231: Prop := c.Advice 15 231 = 0
--Annotation: assign push_data_size 231
def advice_16_231: Prop := c.Advice 16 231 = 0
--Annotation: assign value_rlc 231
def advice_14_231: Prop := c.Advice 14 231 = 0
--Annotation: assign code_hash 231
def advice_4_231: Prop := c.Advice 4 231 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 231
def advice_5_231: Prop := c.Advice 5 231 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_231: Prop := c.Advice 17 231 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_231: Prop := c.Advice 18 231 = 1^(-1)
--Annotation: assign q_enable 232
def fixed_1208: Prop := c.Fixed 0 232 = 1
--Annotation: assign q_first 232
def fixed_1209: Prop := c.Fixed 1 232 = 0
--Annotation: assign q_last 232
def fixed_1210: Prop := c.Fixed 2 232 = 0
--Annotation: assign tag 232
def advice_0_232: Prop := c.Advice 0 232 = 0
--Annotation: assign index 232
def advice_1_232: Prop := c.Advice 1 232 = 0
--Annotation: assign is_code 232
def advice_2_232: Prop := c.Advice 2 232 = 0
--Annotation: assign value 232
def advice_3_232: Prop := c.Advice 3 232 = 0
--Annotation: assign push_data_left 232
def advice_13_232: Prop := c.Advice 13 232 = 0
--Annotation: assign length 232
def advice_15_232: Prop := c.Advice 15 232 = 0
--Annotation: assign push_data_size 232
def advice_16_232: Prop := c.Advice 16 232 = 0
--Annotation: assign value_rlc 232
def advice_14_232: Prop := c.Advice 14 232 = 0
--Annotation: assign code_hash 232
def advice_4_232: Prop := c.Advice 4 232 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 232
def advice_5_232: Prop := c.Advice 5 232 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_232: Prop := c.Advice 17 232 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_232: Prop := c.Advice 18 232 = 1^(-1)
--Annotation: assign q_enable 233
def fixed_1211: Prop := c.Fixed 0 233 = 1
--Annotation: assign q_first 233
def fixed_1212: Prop := c.Fixed 1 233 = 0
--Annotation: assign q_last 233
def fixed_1213: Prop := c.Fixed 2 233 = 0
--Annotation: assign tag 233
def advice_0_233: Prop := c.Advice 0 233 = 0
--Annotation: assign index 233
def advice_1_233: Prop := c.Advice 1 233 = 0
--Annotation: assign is_code 233
def advice_2_233: Prop := c.Advice 2 233 = 0
--Annotation: assign value 233
def advice_3_233: Prop := c.Advice 3 233 = 0
--Annotation: assign push_data_left 233
def advice_13_233: Prop := c.Advice 13 233 = 0
--Annotation: assign length 233
def advice_15_233: Prop := c.Advice 15 233 = 0
--Annotation: assign push_data_size 233
def advice_16_233: Prop := c.Advice 16 233 = 0
--Annotation: assign value_rlc 233
def advice_14_233: Prop := c.Advice 14 233 = 0
--Annotation: assign code_hash 233
def advice_4_233: Prop := c.Advice 4 233 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 233
def advice_5_233: Prop := c.Advice 5 233 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_233: Prop := c.Advice 17 233 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_233: Prop := c.Advice 18 233 = 1^(-1)
--Annotation: assign q_enable 234
def fixed_1214: Prop := c.Fixed 0 234 = 1
--Annotation: assign q_first 234
def fixed_1215: Prop := c.Fixed 1 234 = 0
--Annotation: assign q_last 234
def fixed_1216: Prop := c.Fixed 2 234 = 0
--Annotation: assign tag 234
def advice_0_234: Prop := c.Advice 0 234 = 0
--Annotation: assign index 234
def advice_1_234: Prop := c.Advice 1 234 = 0
--Annotation: assign is_code 234
def advice_2_234: Prop := c.Advice 2 234 = 0
--Annotation: assign value 234
def advice_3_234: Prop := c.Advice 3 234 = 0
--Annotation: assign push_data_left 234
def advice_13_234: Prop := c.Advice 13 234 = 0
--Annotation: assign length 234
def advice_15_234: Prop := c.Advice 15 234 = 0
--Annotation: assign push_data_size 234
def advice_16_234: Prop := c.Advice 16 234 = 0
--Annotation: assign value_rlc 234
def advice_14_234: Prop := c.Advice 14 234 = 0
--Annotation: assign code_hash 234
def advice_4_234: Prop := c.Advice 4 234 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 234
def advice_5_234: Prop := c.Advice 5 234 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_234: Prop := c.Advice 17 234 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_234: Prop := c.Advice 18 234 = 1^(-1)
--Annotation: assign q_enable 235
def fixed_1217: Prop := c.Fixed 0 235 = 1
--Annotation: assign q_first 235
def fixed_1218: Prop := c.Fixed 1 235 = 0
--Annotation: assign q_last 235
def fixed_1219: Prop := c.Fixed 2 235 = 0
--Annotation: assign tag 235
def advice_0_235: Prop := c.Advice 0 235 = 0
--Annotation: assign index 235
def advice_1_235: Prop := c.Advice 1 235 = 0
--Annotation: assign is_code 235
def advice_2_235: Prop := c.Advice 2 235 = 0
--Annotation: assign value 235
def advice_3_235: Prop := c.Advice 3 235 = 0
--Annotation: assign push_data_left 235
def advice_13_235: Prop := c.Advice 13 235 = 0
--Annotation: assign length 235
def advice_15_235: Prop := c.Advice 15 235 = 0
--Annotation: assign push_data_size 235
def advice_16_235: Prop := c.Advice 16 235 = 0
--Annotation: assign value_rlc 235
def advice_14_235: Prop := c.Advice 14 235 = 0
--Annotation: assign code_hash 235
def advice_4_235: Prop := c.Advice 4 235 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 235
def advice_5_235: Prop := c.Advice 5 235 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_235: Prop := c.Advice 17 235 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_235: Prop := c.Advice 18 235 = 1^(-1)
--Annotation: assign q_enable 236
def fixed_1220: Prop := c.Fixed 0 236 = 1
--Annotation: assign q_first 236
def fixed_1221: Prop := c.Fixed 1 236 = 0
--Annotation: assign q_last 236
def fixed_1222: Prop := c.Fixed 2 236 = 0
--Annotation: assign tag 236
def advice_0_236: Prop := c.Advice 0 236 = 0
--Annotation: assign index 236
def advice_1_236: Prop := c.Advice 1 236 = 0
--Annotation: assign is_code 236
def advice_2_236: Prop := c.Advice 2 236 = 0
--Annotation: assign value 236
def advice_3_236: Prop := c.Advice 3 236 = 0
--Annotation: assign push_data_left 236
def advice_13_236: Prop := c.Advice 13 236 = 0
--Annotation: assign length 236
def advice_15_236: Prop := c.Advice 15 236 = 0
--Annotation: assign push_data_size 236
def advice_16_236: Prop := c.Advice 16 236 = 0
--Annotation: assign value_rlc 236
def advice_14_236: Prop := c.Advice 14 236 = 0
--Annotation: assign code_hash 236
def advice_4_236: Prop := c.Advice 4 236 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 236
def advice_5_236: Prop := c.Advice 5 236 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_236: Prop := c.Advice 17 236 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_236: Prop := c.Advice 18 236 = 1^(-1)
--Annotation: assign q_enable 237
def fixed_1223: Prop := c.Fixed 0 237 = 1
--Annotation: assign q_first 237
def fixed_1224: Prop := c.Fixed 1 237 = 0
--Annotation: assign q_last 237
def fixed_1225: Prop := c.Fixed 2 237 = 0
--Annotation: assign tag 237
def advice_0_237: Prop := c.Advice 0 237 = 0
--Annotation: assign index 237
def advice_1_237: Prop := c.Advice 1 237 = 0
--Annotation: assign is_code 237
def advice_2_237: Prop := c.Advice 2 237 = 0
--Annotation: assign value 237
def advice_3_237: Prop := c.Advice 3 237 = 0
--Annotation: assign push_data_left 237
def advice_13_237: Prop := c.Advice 13 237 = 0
--Annotation: assign length 237
def advice_15_237: Prop := c.Advice 15 237 = 0
--Annotation: assign push_data_size 237
def advice_16_237: Prop := c.Advice 16 237 = 0
--Annotation: assign value_rlc 237
def advice_14_237: Prop := c.Advice 14 237 = 0
--Annotation: assign code_hash 237
def advice_4_237: Prop := c.Advice 4 237 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 237
def advice_5_237: Prop := c.Advice 5 237 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_237: Prop := c.Advice 17 237 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_237: Prop := c.Advice 18 237 = 1^(-1)
--Annotation: assign q_enable 238
def fixed_1226: Prop := c.Fixed 0 238 = 1
--Annotation: assign q_first 238
def fixed_1227: Prop := c.Fixed 1 238 = 0
--Annotation: assign q_last 238
def fixed_1228: Prop := c.Fixed 2 238 = 0
--Annotation: assign tag 238
def advice_0_238: Prop := c.Advice 0 238 = 0
--Annotation: assign index 238
def advice_1_238: Prop := c.Advice 1 238 = 0
--Annotation: assign is_code 238
def advice_2_238: Prop := c.Advice 2 238 = 0
--Annotation: assign value 238
def advice_3_238: Prop := c.Advice 3 238 = 0
--Annotation: assign push_data_left 238
def advice_13_238: Prop := c.Advice 13 238 = 0
--Annotation: assign length 238
def advice_15_238: Prop := c.Advice 15 238 = 0
--Annotation: assign push_data_size 238
def advice_16_238: Prop := c.Advice 16 238 = 0
--Annotation: assign value_rlc 238
def advice_14_238: Prop := c.Advice 14 238 = 0
--Annotation: assign code_hash 238
def advice_4_238: Prop := c.Advice 4 238 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 238
def advice_5_238: Prop := c.Advice 5 238 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_238: Prop := c.Advice 17 238 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_238: Prop := c.Advice 18 238 = 1^(-1)
--Annotation: assign q_enable 239
def fixed_1229: Prop := c.Fixed 0 239 = 1
--Annotation: assign q_first 239
def fixed_1230: Prop := c.Fixed 1 239 = 0
--Annotation: assign q_last 239
def fixed_1231: Prop := c.Fixed 2 239 = 0
--Annotation: assign tag 239
def advice_0_239: Prop := c.Advice 0 239 = 0
--Annotation: assign index 239
def advice_1_239: Prop := c.Advice 1 239 = 0
--Annotation: assign is_code 239
def advice_2_239: Prop := c.Advice 2 239 = 0
--Annotation: assign value 239
def advice_3_239: Prop := c.Advice 3 239 = 0
--Annotation: assign push_data_left 239
def advice_13_239: Prop := c.Advice 13 239 = 0
--Annotation: assign length 239
def advice_15_239: Prop := c.Advice 15 239 = 0
--Annotation: assign push_data_size 239
def advice_16_239: Prop := c.Advice 16 239 = 0
--Annotation: assign value_rlc 239
def advice_14_239: Prop := c.Advice 14 239 = 0
--Annotation: assign code_hash 239
def advice_4_239: Prop := c.Advice 4 239 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 239
def advice_5_239: Prop := c.Advice 5 239 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_239: Prop := c.Advice 17 239 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_239: Prop := c.Advice 18 239 = 1^(-1)
--Annotation: assign q_enable 240
def fixed_1232: Prop := c.Fixed 0 240 = 1
--Annotation: assign q_first 240
def fixed_1233: Prop := c.Fixed 1 240 = 0
--Annotation: assign q_last 240
def fixed_1234: Prop := c.Fixed 2 240 = 0
--Annotation: assign tag 240
def advice_0_240: Prop := c.Advice 0 240 = 0
--Annotation: assign index 240
def advice_1_240: Prop := c.Advice 1 240 = 0
--Annotation: assign is_code 240
def advice_2_240: Prop := c.Advice 2 240 = 0
--Annotation: assign value 240
def advice_3_240: Prop := c.Advice 3 240 = 0
--Annotation: assign push_data_left 240
def advice_13_240: Prop := c.Advice 13 240 = 0
--Annotation: assign length 240
def advice_15_240: Prop := c.Advice 15 240 = 0
--Annotation: assign push_data_size 240
def advice_16_240: Prop := c.Advice 16 240 = 0
--Annotation: assign value_rlc 240
def advice_14_240: Prop := c.Advice 14 240 = 0
--Annotation: assign code_hash 240
def advice_4_240: Prop := c.Advice 4 240 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 240
def advice_5_240: Prop := c.Advice 5 240 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_240: Prop := c.Advice 17 240 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_240: Prop := c.Advice 18 240 = 1^(-1)
--Annotation: assign q_enable 241
def fixed_1235: Prop := c.Fixed 0 241 = 1
--Annotation: assign q_first 241
def fixed_1236: Prop := c.Fixed 1 241 = 0
--Annotation: assign q_last 241
def fixed_1237: Prop := c.Fixed 2 241 = 0
--Annotation: assign tag 241
def advice_0_241: Prop := c.Advice 0 241 = 0
--Annotation: assign index 241
def advice_1_241: Prop := c.Advice 1 241 = 0
--Annotation: assign is_code 241
def advice_2_241: Prop := c.Advice 2 241 = 0
--Annotation: assign value 241
def advice_3_241: Prop := c.Advice 3 241 = 0
--Annotation: assign push_data_left 241
def advice_13_241: Prop := c.Advice 13 241 = 0
--Annotation: assign length 241
def advice_15_241: Prop := c.Advice 15 241 = 0
--Annotation: assign push_data_size 241
def advice_16_241: Prop := c.Advice 16 241 = 0
--Annotation: assign value_rlc 241
def advice_14_241: Prop := c.Advice 14 241 = 0
--Annotation: assign code_hash 241
def advice_4_241: Prop := c.Advice 4 241 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 241
def advice_5_241: Prop := c.Advice 5 241 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_241: Prop := c.Advice 17 241 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_241: Prop := c.Advice 18 241 = 1^(-1)
--Annotation: assign q_enable 242
def fixed_1238: Prop := c.Fixed 0 242 = 1
--Annotation: assign q_first 242
def fixed_1239: Prop := c.Fixed 1 242 = 0
--Annotation: assign q_last 242
def fixed_1240: Prop := c.Fixed 2 242 = 0
--Annotation: assign tag 242
def advice_0_242: Prop := c.Advice 0 242 = 0
--Annotation: assign index 242
def advice_1_242: Prop := c.Advice 1 242 = 0
--Annotation: assign is_code 242
def advice_2_242: Prop := c.Advice 2 242 = 0
--Annotation: assign value 242
def advice_3_242: Prop := c.Advice 3 242 = 0
--Annotation: assign push_data_left 242
def advice_13_242: Prop := c.Advice 13 242 = 0
--Annotation: assign length 242
def advice_15_242: Prop := c.Advice 15 242 = 0
--Annotation: assign push_data_size 242
def advice_16_242: Prop := c.Advice 16 242 = 0
--Annotation: assign value_rlc 242
def advice_14_242: Prop := c.Advice 14 242 = 0
--Annotation: assign code_hash 242
def advice_4_242: Prop := c.Advice 4 242 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 242
def advice_5_242: Prop := c.Advice 5 242 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_242: Prop := c.Advice 17 242 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_242: Prop := c.Advice 18 242 = 1^(-1)
--Annotation: assign q_enable 243
def fixed_1241: Prop := c.Fixed 0 243 = 1
--Annotation: assign q_first 243
def fixed_1242: Prop := c.Fixed 1 243 = 0
--Annotation: assign q_last 243
def fixed_1243: Prop := c.Fixed 2 243 = 0
--Annotation: assign tag 243
def advice_0_243: Prop := c.Advice 0 243 = 0
--Annotation: assign index 243
def advice_1_243: Prop := c.Advice 1 243 = 0
--Annotation: assign is_code 243
def advice_2_243: Prop := c.Advice 2 243 = 0
--Annotation: assign value 243
def advice_3_243: Prop := c.Advice 3 243 = 0
--Annotation: assign push_data_left 243
def advice_13_243: Prop := c.Advice 13 243 = 0
--Annotation: assign length 243
def advice_15_243: Prop := c.Advice 15 243 = 0
--Annotation: assign push_data_size 243
def advice_16_243: Prop := c.Advice 16 243 = 0
--Annotation: assign value_rlc 243
def advice_14_243: Prop := c.Advice 14 243 = 0
--Annotation: assign code_hash 243
def advice_4_243: Prop := c.Advice 4 243 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 243
def advice_5_243: Prop := c.Advice 5 243 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_243: Prop := c.Advice 17 243 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_243: Prop := c.Advice 18 243 = 1^(-1)
--Annotation: assign q_enable 244
def fixed_1244: Prop := c.Fixed 0 244 = 1
--Annotation: assign q_first 244
def fixed_1245: Prop := c.Fixed 1 244 = 0
--Annotation: assign q_last 244
def fixed_1246: Prop := c.Fixed 2 244 = 0
--Annotation: assign tag 244
def advice_0_244: Prop := c.Advice 0 244 = 0
--Annotation: assign index 244
def advice_1_244: Prop := c.Advice 1 244 = 0
--Annotation: assign is_code 244
def advice_2_244: Prop := c.Advice 2 244 = 0
--Annotation: assign value 244
def advice_3_244: Prop := c.Advice 3 244 = 0
--Annotation: assign push_data_left 244
def advice_13_244: Prop := c.Advice 13 244 = 0
--Annotation: assign length 244
def advice_15_244: Prop := c.Advice 15 244 = 0
--Annotation: assign push_data_size 244
def advice_16_244: Prop := c.Advice 16 244 = 0
--Annotation: assign value_rlc 244
def advice_14_244: Prop := c.Advice 14 244 = 0
--Annotation: assign code_hash 244
def advice_4_244: Prop := c.Advice 4 244 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 244
def advice_5_244: Prop := c.Advice 5 244 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_244: Prop := c.Advice 17 244 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_244: Prop := c.Advice 18 244 = 1^(-1)
--Annotation: assign q_enable 245
def fixed_1247: Prop := c.Fixed 0 245 = 1
--Annotation: assign q_first 245
def fixed_1248: Prop := c.Fixed 1 245 = 0
--Annotation: assign q_last 245
def fixed_1249: Prop := c.Fixed 2 245 = 0
--Annotation: assign tag 245
def advice_0_245: Prop := c.Advice 0 245 = 0
--Annotation: assign index 245
def advice_1_245: Prop := c.Advice 1 245 = 0
--Annotation: assign is_code 245
def advice_2_245: Prop := c.Advice 2 245 = 0
--Annotation: assign value 245
def advice_3_245: Prop := c.Advice 3 245 = 0
--Annotation: assign push_data_left 245
def advice_13_245: Prop := c.Advice 13 245 = 0
--Annotation: assign length 245
def advice_15_245: Prop := c.Advice 15 245 = 0
--Annotation: assign push_data_size 245
def advice_16_245: Prop := c.Advice 16 245 = 0
--Annotation: assign value_rlc 245
def advice_14_245: Prop := c.Advice 14 245 = 0
--Annotation: assign code_hash 245
def advice_4_245: Prop := c.Advice 4 245 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 245
def advice_5_245: Prop := c.Advice 5 245 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_245: Prop := c.Advice 17 245 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_245: Prop := c.Advice 18 245 = 1^(-1)
--Annotation: assign q_enable 246
def fixed_1250: Prop := c.Fixed 0 246 = 1
--Annotation: assign q_first 246
def fixed_1251: Prop := c.Fixed 1 246 = 0
--Annotation: assign q_last 246
def fixed_1252: Prop := c.Fixed 2 246 = 0
--Annotation: assign tag 246
def advice_0_246: Prop := c.Advice 0 246 = 0
--Annotation: assign index 246
def advice_1_246: Prop := c.Advice 1 246 = 0
--Annotation: assign is_code 246
def advice_2_246: Prop := c.Advice 2 246 = 0
--Annotation: assign value 246
def advice_3_246: Prop := c.Advice 3 246 = 0
--Annotation: assign push_data_left 246
def advice_13_246: Prop := c.Advice 13 246 = 0
--Annotation: assign length 246
def advice_15_246: Prop := c.Advice 15 246 = 0
--Annotation: assign push_data_size 246
def advice_16_246: Prop := c.Advice 16 246 = 0
--Annotation: assign value_rlc 246
def advice_14_246: Prop := c.Advice 14 246 = 0
--Annotation: assign code_hash 246
def advice_4_246: Prop := c.Advice 4 246 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 246
def advice_5_246: Prop := c.Advice 5 246 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_246: Prop := c.Advice 17 246 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_246: Prop := c.Advice 18 246 = 1^(-1)
--Annotation: assign q_enable 247
def fixed_1253: Prop := c.Fixed 0 247 = 1
--Annotation: assign q_first 247
def fixed_1254: Prop := c.Fixed 1 247 = 0
--Annotation: assign q_last 247
def fixed_1255: Prop := c.Fixed 2 247 = 0
--Annotation: assign tag 247
def advice_0_247: Prop := c.Advice 0 247 = 0
--Annotation: assign index 247
def advice_1_247: Prop := c.Advice 1 247 = 0
--Annotation: assign is_code 247
def advice_2_247: Prop := c.Advice 2 247 = 0
--Annotation: assign value 247
def advice_3_247: Prop := c.Advice 3 247 = 0
--Annotation: assign push_data_left 247
def advice_13_247: Prop := c.Advice 13 247 = 0
--Annotation: assign length 247
def advice_15_247: Prop := c.Advice 15 247 = 0
--Annotation: assign push_data_size 247
def advice_16_247: Prop := c.Advice 16 247 = 0
--Annotation: assign value_rlc 247
def advice_14_247: Prop := c.Advice 14 247 = 0
--Annotation: assign code_hash 247
def advice_4_247: Prop := c.Advice 4 247 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 247
def advice_5_247: Prop := c.Advice 5 247 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_247: Prop := c.Advice 17 247 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_247: Prop := c.Advice 18 247 = 1^(-1)
--Annotation: assign q_enable 248
def fixed_1256: Prop := c.Fixed 0 248 = 1
--Annotation: assign q_first 248
def fixed_1257: Prop := c.Fixed 1 248 = 0
--Annotation: assign q_last 248
def fixed_1258: Prop := c.Fixed 2 248 = 0
--Annotation: assign tag 248
def advice_0_248: Prop := c.Advice 0 248 = 0
--Annotation: assign index 248
def advice_1_248: Prop := c.Advice 1 248 = 0
--Annotation: assign is_code 248
def advice_2_248: Prop := c.Advice 2 248 = 0
--Annotation: assign value 248
def advice_3_248: Prop := c.Advice 3 248 = 0
--Annotation: assign push_data_left 248
def advice_13_248: Prop := c.Advice 13 248 = 0
--Annotation: assign length 248
def advice_15_248: Prop := c.Advice 15 248 = 0
--Annotation: assign push_data_size 248
def advice_16_248: Prop := c.Advice 16 248 = 0
--Annotation: assign value_rlc 248
def advice_14_248: Prop := c.Advice 14 248 = 0
--Annotation: assign code_hash 248
def advice_4_248: Prop := c.Advice 4 248 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 248
def advice_5_248: Prop := c.Advice 5 248 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_248: Prop := c.Advice 17 248 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_248: Prop := c.Advice 18 248 = 1^(-1)
--Annotation: assign q_enable 249
def fixed_1259: Prop := c.Fixed 0 249 = 1
--Annotation: assign q_first 249
def fixed_1260: Prop := c.Fixed 1 249 = 0
--Annotation: assign q_last 249
def fixed_1261: Prop := c.Fixed 2 249 = 0
--Annotation: assign tag 249
def advice_0_249: Prop := c.Advice 0 249 = 0
--Annotation: assign index 249
def advice_1_249: Prop := c.Advice 1 249 = 0
--Annotation: assign is_code 249
def advice_2_249: Prop := c.Advice 2 249 = 0
--Annotation: assign value 249
def advice_3_249: Prop := c.Advice 3 249 = 0
--Annotation: assign push_data_left 249
def advice_13_249: Prop := c.Advice 13 249 = 0
--Annotation: assign length 249
def advice_15_249: Prop := c.Advice 15 249 = 0
--Annotation: assign push_data_size 249
def advice_16_249: Prop := c.Advice 16 249 = 0
--Annotation: assign value_rlc 249
def advice_14_249: Prop := c.Advice 14 249 = 0
--Annotation: assign code_hash 249
def advice_4_249: Prop := c.Advice 4 249 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 249
def advice_5_249: Prop := c.Advice 5 249 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_249: Prop := c.Advice 17 249 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_249: Prop := c.Advice 18 249 = 1^(-1)
--Annotation: assign q_enable 250
def fixed_1262: Prop := c.Fixed 0 250 = 1
--Annotation: assign q_first 250
def fixed_1263: Prop := c.Fixed 1 250 = 0
--Annotation: assign q_last 250
def fixed_1264: Prop := c.Fixed 2 250 = 0
--Annotation: assign tag 250
def advice_0_250: Prop := c.Advice 0 250 = 0
--Annotation: assign index 250
def advice_1_250: Prop := c.Advice 1 250 = 0
--Annotation: assign is_code 250
def advice_2_250: Prop := c.Advice 2 250 = 0
--Annotation: assign value 250
def advice_3_250: Prop := c.Advice 3 250 = 0
--Annotation: assign push_data_left 250
def advice_13_250: Prop := c.Advice 13 250 = 0
--Annotation: assign length 250
def advice_15_250: Prop := c.Advice 15 250 = 0
--Annotation: assign push_data_size 250
def advice_16_250: Prop := c.Advice 16 250 = 0
--Annotation: assign value_rlc 250
def advice_14_250: Prop := c.Advice 14 250 = 0
--Annotation: assign code_hash 250
def advice_4_250: Prop := c.Advice 4 250 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 250
def advice_5_250: Prop := c.Advice 5 250 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_250: Prop := c.Advice 17 250 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_250: Prop := c.Advice 18 250 = 1^(-1)
--Annotation: assign q_enable 251
def fixed_1265: Prop := c.Fixed 0 251 = 1
--Annotation: assign q_first 251
def fixed_1266: Prop := c.Fixed 1 251 = 0
--Annotation: assign q_last 251
def fixed_1267: Prop := c.Fixed 2 251 = 0
--Annotation: assign tag 251
def advice_0_251: Prop := c.Advice 0 251 = 0
--Annotation: assign index 251
def advice_1_251: Prop := c.Advice 1 251 = 0
--Annotation: assign is_code 251
def advice_2_251: Prop := c.Advice 2 251 = 0
--Annotation: assign value 251
def advice_3_251: Prop := c.Advice 3 251 = 0
--Annotation: assign push_data_left 251
def advice_13_251: Prop := c.Advice 13 251 = 0
--Annotation: assign length 251
def advice_15_251: Prop := c.Advice 15 251 = 0
--Annotation: assign push_data_size 251
def advice_16_251: Prop := c.Advice 16 251 = 0
--Annotation: assign value_rlc 251
def advice_14_251: Prop := c.Advice 14 251 = 0
--Annotation: assign code_hash 251
def advice_4_251: Prop := c.Advice 4 251 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 251
def advice_5_251: Prop := c.Advice 5 251 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_251: Prop := c.Advice 17 251 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_251: Prop := c.Advice 18 251 = 1^(-1)
--Annotation: assign q_enable 252
def fixed_1268: Prop := c.Fixed 0 252 = 1
--Annotation: assign q_first 252
def fixed_1269: Prop := c.Fixed 1 252 = 0
--Annotation: assign q_last 252
def fixed_1270: Prop := c.Fixed 2 252 = 0
--Annotation: assign tag 252
def advice_0_252: Prop := c.Advice 0 252 = 0
--Annotation: assign index 252
def advice_1_252: Prop := c.Advice 1 252 = 0
--Annotation: assign is_code 252
def advice_2_252: Prop := c.Advice 2 252 = 0
--Annotation: assign value 252
def advice_3_252: Prop := c.Advice 3 252 = 0
--Annotation: assign push_data_left 252
def advice_13_252: Prop := c.Advice 13 252 = 0
--Annotation: assign length 252
def advice_15_252: Prop := c.Advice 15 252 = 0
--Annotation: assign push_data_size 252
def advice_16_252: Prop := c.Advice 16 252 = 0
--Annotation: assign value_rlc 252
def advice_14_252: Prop := c.Advice 14 252 = 0
--Annotation: assign code_hash 252
def advice_4_252: Prop := c.Advice 4 252 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 252
def advice_5_252: Prop := c.Advice 5 252 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_252: Prop := c.Advice 17 252 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_252: Prop := c.Advice 18 252 = 1^(-1)
--Annotation: assign q_enable 253
def fixed_1271: Prop := c.Fixed 0 253 = 1
--Annotation: assign q_first 253
def fixed_1272: Prop := c.Fixed 1 253 = 0
--Annotation: assign q_last 253
def fixed_1273: Prop := c.Fixed 2 253 = 0
--Annotation: assign tag 253
def advice_0_253: Prop := c.Advice 0 253 = 0
--Annotation: assign index 253
def advice_1_253: Prop := c.Advice 1 253 = 0
--Annotation: assign is_code 253
def advice_2_253: Prop := c.Advice 2 253 = 0
--Annotation: assign value 253
def advice_3_253: Prop := c.Advice 3 253 = 0
--Annotation: assign push_data_left 253
def advice_13_253: Prop := c.Advice 13 253 = 0
--Annotation: assign length 253
def advice_15_253: Prop := c.Advice 15 253 = 0
--Annotation: assign push_data_size 253
def advice_16_253: Prop := c.Advice 16 253 = 0
--Annotation: assign value_rlc 253
def advice_14_253: Prop := c.Advice 14 253 = 0
--Annotation: assign code_hash 253
def advice_4_253: Prop := c.Advice 4 253 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 253
def advice_5_253: Prop := c.Advice 5 253 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_253: Prop := c.Advice 17 253 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_253: Prop := c.Advice 18 253 = 1^(-1)
--Annotation: assign q_enable 254
def fixed_1274: Prop := c.Fixed 0 254 = 1
--Annotation: assign q_first 254
def fixed_1275: Prop := c.Fixed 1 254 = 0
--Annotation: assign q_last 254
def fixed_1276: Prop := c.Fixed 2 254 = 0
--Annotation: assign tag 254
def advice_0_254: Prop := c.Advice 0 254 = 0
--Annotation: assign index 254
def advice_1_254: Prop := c.Advice 1 254 = 0
--Annotation: assign is_code 254
def advice_2_254: Prop := c.Advice 2 254 = 0
--Annotation: assign value 254
def advice_3_254: Prop := c.Advice 3 254 = 0
--Annotation: assign push_data_left 254
def advice_13_254: Prop := c.Advice 13 254 = 0
--Annotation: assign length 254
def advice_15_254: Prop := c.Advice 15 254 = 0
--Annotation: assign push_data_size 254
def advice_16_254: Prop := c.Advice 16 254 = 0
--Annotation: assign value_rlc 254
def advice_14_254: Prop := c.Advice 14 254 = 0
--Annotation: assign code_hash 254
def advice_4_254: Prop := c.Advice 4 254 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 254
def advice_5_254: Prop := c.Advice 5 254 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_254: Prop := c.Advice 17 254 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_254: Prop := c.Advice 18 254 = 1^(-1)
--Annotation: assign q_enable 255
def fixed_1277: Prop := c.Fixed 0 255 = 1
--Annotation: assign q_first 255
def fixed_1278: Prop := c.Fixed 1 255 = 0
--Annotation: assign q_last 255
def fixed_1279: Prop := c.Fixed 2 255 = 0
--Annotation: assign tag 255
def advice_0_255: Prop := c.Advice 0 255 = 0
--Annotation: assign index 255
def advice_1_255: Prop := c.Advice 1 255 = 0
--Annotation: assign is_code 255
def advice_2_255: Prop := c.Advice 2 255 = 0
--Annotation: assign value 255
def advice_3_255: Prop := c.Advice 3 255 = 0
--Annotation: assign push_data_left 255
def advice_13_255: Prop := c.Advice 13 255 = 0
--Annotation: assign length 255
def advice_15_255: Prop := c.Advice 15 255 = 0
--Annotation: assign push_data_size 255
def advice_16_255: Prop := c.Advice 16 255 = 0
--Annotation: assign value_rlc 255
def advice_14_255: Prop := c.Advice 14 255 = 0
--Annotation: assign code_hash 255
def advice_4_255: Prop := c.Advice 4 255 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 255
def advice_5_255: Prop := c.Advice 5 255 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_255: Prop := c.Advice 17 255 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_255: Prop := c.Advice 18 255 = 1^(-1)
--Annotation: assign q_enable 256
def fixed_1280: Prop := c.Fixed 0 256 = 1
--Annotation: assign q_first 256
def fixed_1281: Prop := c.Fixed 1 256 = 0
--Annotation: assign q_last 256
def fixed_1282: Prop := c.Fixed 2 256 = 0
--Annotation: assign tag 256
def advice_0_256: Prop := c.Advice 0 256 = 0
--Annotation: assign index 256
def advice_1_256: Prop := c.Advice 1 256 = 0
--Annotation: assign is_code 256
def advice_2_256: Prop := c.Advice 2 256 = 0
--Annotation: assign value 256
def advice_3_256: Prop := c.Advice 3 256 = 0
--Annotation: assign push_data_left 256
def advice_13_256: Prop := c.Advice 13 256 = 0
--Annotation: assign length 256
def advice_15_256: Prop := c.Advice 15 256 = 0
--Annotation: assign push_data_size 256
def advice_16_256: Prop := c.Advice 16 256 = 0
--Annotation: assign value_rlc 256
def advice_14_256: Prop := c.Advice 14 256 = 0
--Annotation: assign code_hash 256
def advice_4_256: Prop := c.Advice 4 256 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 256
def advice_5_256: Prop := c.Advice 5 256 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_256: Prop := c.Advice 17 256 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_256: Prop := c.Advice 18 256 = 1^(-1)
--Annotation: assign q_enable 257
def fixed_1283: Prop := c.Fixed 0 257 = 1
--Annotation: assign q_first 257
def fixed_1284: Prop := c.Fixed 1 257 = 0
--Annotation: assign q_last 257
def fixed_1285: Prop := c.Fixed 2 257 = 0
--Annotation: assign tag 257
def advice_0_257: Prop := c.Advice 0 257 = 0
--Annotation: assign index 257
def advice_1_257: Prop := c.Advice 1 257 = 0
--Annotation: assign is_code 257
def advice_2_257: Prop := c.Advice 2 257 = 0
--Annotation: assign value 257
def advice_3_257: Prop := c.Advice 3 257 = 0
--Annotation: assign push_data_left 257
def advice_13_257: Prop := c.Advice 13 257 = 0
--Annotation: assign length 257
def advice_15_257: Prop := c.Advice 15 257 = 0
--Annotation: assign push_data_size 257
def advice_16_257: Prop := c.Advice 16 257 = 0
--Annotation: assign value_rlc 257
def advice_14_257: Prop := c.Advice 14 257 = 0
--Annotation: assign code_hash 257
def advice_4_257: Prop := c.Advice 4 257 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 257
def advice_5_257: Prop := c.Advice 5 257 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_257: Prop := c.Advice 17 257 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_257: Prop := c.Advice 18 257 = 1^(-1)
--Annotation: assign q_enable 258
def fixed_1286: Prop := c.Fixed 0 258 = 1
--Annotation: assign q_first 258
def fixed_1287: Prop := c.Fixed 1 258 = 0
--Annotation: assign q_last 258
def fixed_1288: Prop := c.Fixed 2 258 = 0
--Annotation: assign tag 258
def advice_0_258: Prop := c.Advice 0 258 = 0
--Annotation: assign index 258
def advice_1_258: Prop := c.Advice 1 258 = 0
--Annotation: assign is_code 258
def advice_2_258: Prop := c.Advice 2 258 = 0
--Annotation: assign value 258
def advice_3_258: Prop := c.Advice 3 258 = 0
--Annotation: assign push_data_left 258
def advice_13_258: Prop := c.Advice 13 258 = 0
--Annotation: assign length 258
def advice_15_258: Prop := c.Advice 15 258 = 0
--Annotation: assign push_data_size 258
def advice_16_258: Prop := c.Advice 16 258 = 0
--Annotation: assign value_rlc 258
def advice_14_258: Prop := c.Advice 14 258 = 0
--Annotation: assign code_hash 258
def advice_4_258: Prop := c.Advice 4 258 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 258
def advice_5_258: Prop := c.Advice 5 258 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_258: Prop := c.Advice 17 258 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_258: Prop := c.Advice 18 258 = 1^(-1)
--Annotation: assign q_enable 259
def fixed_1289: Prop := c.Fixed 0 259 = 1
--Annotation: assign q_first 259
def fixed_1290: Prop := c.Fixed 1 259 = 0
--Annotation: assign q_last 259
def fixed_1291: Prop := c.Fixed 2 259 = 0
--Annotation: assign tag 259
def advice_0_259: Prop := c.Advice 0 259 = 0
--Annotation: assign index 259
def advice_1_259: Prop := c.Advice 1 259 = 0
--Annotation: assign is_code 259
def advice_2_259: Prop := c.Advice 2 259 = 0
--Annotation: assign value 259
def advice_3_259: Prop := c.Advice 3 259 = 0
--Annotation: assign push_data_left 259
def advice_13_259: Prop := c.Advice 13 259 = 0
--Annotation: assign length 259
def advice_15_259: Prop := c.Advice 15 259 = 0
--Annotation: assign push_data_size 259
def advice_16_259: Prop := c.Advice 16 259 = 0
--Annotation: assign value_rlc 259
def advice_14_259: Prop := c.Advice 14 259 = 0
--Annotation: assign code_hash 259
def advice_4_259: Prop := c.Advice 4 259 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 259
def advice_5_259: Prop := c.Advice 5 259 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_259: Prop := c.Advice 17 259 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_259: Prop := c.Advice 18 259 = 1^(-1)
--Annotation: assign q_enable 260
def fixed_1292: Prop := c.Fixed 0 260 = 1
--Annotation: assign q_first 260
def fixed_1293: Prop := c.Fixed 1 260 = 0
--Annotation: assign q_last 260
def fixed_1294: Prop := c.Fixed 2 260 = 0
--Annotation: assign tag 260
def advice_0_260: Prop := c.Advice 0 260 = 0
--Annotation: assign index 260
def advice_1_260: Prop := c.Advice 1 260 = 0
--Annotation: assign is_code 260
def advice_2_260: Prop := c.Advice 2 260 = 0
--Annotation: assign value 260
def advice_3_260: Prop := c.Advice 3 260 = 0
--Annotation: assign push_data_left 260
def advice_13_260: Prop := c.Advice 13 260 = 0
--Annotation: assign length 260
def advice_15_260: Prop := c.Advice 15 260 = 0
--Annotation: assign push_data_size 260
def advice_16_260: Prop := c.Advice 16 260 = 0
--Annotation: assign value_rlc 260
def advice_14_260: Prop := c.Advice 14 260 = 0
--Annotation: assign code_hash 260
def advice_4_260: Prop := c.Advice 4 260 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 260
def advice_5_260: Prop := c.Advice 5 260 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_260: Prop := c.Advice 17 260 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_260: Prop := c.Advice 18 260 = 1^(-1)
--Annotation: assign q_enable 261
def fixed_1295: Prop := c.Fixed 0 261 = 1
--Annotation: assign q_first 261
def fixed_1296: Prop := c.Fixed 1 261 = 0
--Annotation: assign q_last 261
def fixed_1297: Prop := c.Fixed 2 261 = 0
--Annotation: assign tag 261
def advice_0_261: Prop := c.Advice 0 261 = 0
--Annotation: assign index 261
def advice_1_261: Prop := c.Advice 1 261 = 0
--Annotation: assign is_code 261
def advice_2_261: Prop := c.Advice 2 261 = 0
--Annotation: assign value 261
def advice_3_261: Prop := c.Advice 3 261 = 0
--Annotation: assign push_data_left 261
def advice_13_261: Prop := c.Advice 13 261 = 0
--Annotation: assign length 261
def advice_15_261: Prop := c.Advice 15 261 = 0
--Annotation: assign push_data_size 261
def advice_16_261: Prop := c.Advice 16 261 = 0
--Annotation: assign value_rlc 261
def advice_14_261: Prop := c.Advice 14 261 = 0
--Annotation: assign code_hash 261
def advice_4_261: Prop := c.Advice 4 261 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 261
def advice_5_261: Prop := c.Advice 5 261 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_261: Prop := c.Advice 17 261 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_261: Prop := c.Advice 18 261 = 1^(-1)
--Annotation: assign q_enable 262
def fixed_1298: Prop := c.Fixed 0 262 = 1
--Annotation: assign q_first 262
def fixed_1299: Prop := c.Fixed 1 262 = 0
--Annotation: assign q_last 262
def fixed_1300: Prop := c.Fixed 2 262 = 0
--Annotation: assign tag 262
def advice_0_262: Prop := c.Advice 0 262 = 0
--Annotation: assign index 262
def advice_1_262: Prop := c.Advice 1 262 = 0
--Annotation: assign is_code 262
def advice_2_262: Prop := c.Advice 2 262 = 0
--Annotation: assign value 262
def advice_3_262: Prop := c.Advice 3 262 = 0
--Annotation: assign push_data_left 262
def advice_13_262: Prop := c.Advice 13 262 = 0
--Annotation: assign length 262
def advice_15_262: Prop := c.Advice 15 262 = 0
--Annotation: assign push_data_size 262
def advice_16_262: Prop := c.Advice 16 262 = 0
--Annotation: assign value_rlc 262
def advice_14_262: Prop := c.Advice 14 262 = 0
--Annotation: assign code_hash 262
def advice_4_262: Prop := c.Advice 4 262 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 262
def advice_5_262: Prop := c.Advice 5 262 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_262: Prop := c.Advice 17 262 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_262: Prop := c.Advice 18 262 = 1^(-1)
--Annotation: assign q_enable 263
def fixed_1301: Prop := c.Fixed 0 263 = 1
--Annotation: assign q_first 263
def fixed_1302: Prop := c.Fixed 1 263 = 0
--Annotation: assign q_last 263
def fixed_1303: Prop := c.Fixed 2 263 = 0
--Annotation: assign tag 263
def advice_0_263: Prop := c.Advice 0 263 = 0
--Annotation: assign index 263
def advice_1_263: Prop := c.Advice 1 263 = 0
--Annotation: assign is_code 263
def advice_2_263: Prop := c.Advice 2 263 = 0
--Annotation: assign value 263
def advice_3_263: Prop := c.Advice 3 263 = 0
--Annotation: assign push_data_left 263
def advice_13_263: Prop := c.Advice 13 263 = 0
--Annotation: assign length 263
def advice_15_263: Prop := c.Advice 15 263 = 0
--Annotation: assign push_data_size 263
def advice_16_263: Prop := c.Advice 16 263 = 0
--Annotation: assign value_rlc 263
def advice_14_263: Prop := c.Advice 14 263 = 0
--Annotation: assign code_hash 263
def advice_4_263: Prop := c.Advice 4 263 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 263
def advice_5_263: Prop := c.Advice 5 263 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_263: Prop := c.Advice 17 263 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_263: Prop := c.Advice 18 263 = 1^(-1)
--Annotation: assign q_enable 264
def fixed_1304: Prop := c.Fixed 0 264 = 1
--Annotation: assign q_first 264
def fixed_1305: Prop := c.Fixed 1 264 = 0
--Annotation: assign q_last 264
def fixed_1306: Prop := c.Fixed 2 264 = 0
--Annotation: assign tag 264
def advice_0_264: Prop := c.Advice 0 264 = 0
--Annotation: assign index 264
def advice_1_264: Prop := c.Advice 1 264 = 0
--Annotation: assign is_code 264
def advice_2_264: Prop := c.Advice 2 264 = 0
--Annotation: assign value 264
def advice_3_264: Prop := c.Advice 3 264 = 0
--Annotation: assign push_data_left 264
def advice_13_264: Prop := c.Advice 13 264 = 0
--Annotation: assign length 264
def advice_15_264: Prop := c.Advice 15 264 = 0
--Annotation: assign push_data_size 264
def advice_16_264: Prop := c.Advice 16 264 = 0
--Annotation: assign value_rlc 264
def advice_14_264: Prop := c.Advice 14 264 = 0
--Annotation: assign code_hash 264
def advice_4_264: Prop := c.Advice 4 264 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 264
def advice_5_264: Prop := c.Advice 5 264 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_264: Prop := c.Advice 17 264 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_264: Prop := c.Advice 18 264 = 1^(-1)
--Annotation: assign q_enable 265
def fixed_1307: Prop := c.Fixed 0 265 = 1
--Annotation: assign q_first 265
def fixed_1308: Prop := c.Fixed 1 265 = 0
--Annotation: assign q_last 265
def fixed_1309: Prop := c.Fixed 2 265 = 0
--Annotation: assign tag 265
def advice_0_265: Prop := c.Advice 0 265 = 0
--Annotation: assign index 265
def advice_1_265: Prop := c.Advice 1 265 = 0
--Annotation: assign is_code 265
def advice_2_265: Prop := c.Advice 2 265 = 0
--Annotation: assign value 265
def advice_3_265: Prop := c.Advice 3 265 = 0
--Annotation: assign push_data_left 265
def advice_13_265: Prop := c.Advice 13 265 = 0
--Annotation: assign length 265
def advice_15_265: Prop := c.Advice 15 265 = 0
--Annotation: assign push_data_size 265
def advice_16_265: Prop := c.Advice 16 265 = 0
--Annotation: assign value_rlc 265
def advice_14_265: Prop := c.Advice 14 265 = 0
--Annotation: assign code_hash 265
def advice_4_265: Prop := c.Advice 4 265 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 265
def advice_5_265: Prop := c.Advice 5 265 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_265: Prop := c.Advice 17 265 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_265: Prop := c.Advice 18 265 = 1^(-1)
--Annotation: assign q_enable 266
def fixed_1310: Prop := c.Fixed 0 266 = 1
--Annotation: assign q_first 266
def fixed_1311: Prop := c.Fixed 1 266 = 0
--Annotation: assign q_last 266
def fixed_1312: Prop := c.Fixed 2 266 = 0
--Annotation: assign tag 266
def advice_0_266: Prop := c.Advice 0 266 = 0
--Annotation: assign index 266
def advice_1_266: Prop := c.Advice 1 266 = 0
--Annotation: assign is_code 266
def advice_2_266: Prop := c.Advice 2 266 = 0
--Annotation: assign value 266
def advice_3_266: Prop := c.Advice 3 266 = 0
--Annotation: assign push_data_left 266
def advice_13_266: Prop := c.Advice 13 266 = 0
--Annotation: assign length 266
def advice_15_266: Prop := c.Advice 15 266 = 0
--Annotation: assign push_data_size 266
def advice_16_266: Prop := c.Advice 16 266 = 0
--Annotation: assign value_rlc 266
def advice_14_266: Prop := c.Advice 14 266 = 0
--Annotation: assign code_hash 266
def advice_4_266: Prop := c.Advice 4 266 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 266
def advice_5_266: Prop := c.Advice 5 266 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_266: Prop := c.Advice 17 266 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_266: Prop := c.Advice 18 266 = 1^(-1)
--Annotation: assign q_enable 267
def fixed_1313: Prop := c.Fixed 0 267 = 1
--Annotation: assign q_first 267
def fixed_1314: Prop := c.Fixed 1 267 = 0
--Annotation: assign q_last 267
def fixed_1315: Prop := c.Fixed 2 267 = 0
--Annotation: assign tag 267
def advice_0_267: Prop := c.Advice 0 267 = 0
--Annotation: assign index 267
def advice_1_267: Prop := c.Advice 1 267 = 0
--Annotation: assign is_code 267
def advice_2_267: Prop := c.Advice 2 267 = 0
--Annotation: assign value 267
def advice_3_267: Prop := c.Advice 3 267 = 0
--Annotation: assign push_data_left 267
def advice_13_267: Prop := c.Advice 13 267 = 0
--Annotation: assign length 267
def advice_15_267: Prop := c.Advice 15 267 = 0
--Annotation: assign push_data_size 267
def advice_16_267: Prop := c.Advice 16 267 = 0
--Annotation: assign value_rlc 267
def advice_14_267: Prop := c.Advice 14 267 = 0
--Annotation: assign code_hash 267
def advice_4_267: Prop := c.Advice 4 267 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 267
def advice_5_267: Prop := c.Advice 5 267 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_267: Prop := c.Advice 17 267 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_267: Prop := c.Advice 18 267 = 1^(-1)
--Annotation: assign q_enable 268
def fixed_1316: Prop := c.Fixed 0 268 = 1
--Annotation: assign q_first 268
def fixed_1317: Prop := c.Fixed 1 268 = 0
--Annotation: assign q_last 268
def fixed_1318: Prop := c.Fixed 2 268 = 0
--Annotation: assign tag 268
def advice_0_268: Prop := c.Advice 0 268 = 0
--Annotation: assign index 268
def advice_1_268: Prop := c.Advice 1 268 = 0
--Annotation: assign is_code 268
def advice_2_268: Prop := c.Advice 2 268 = 0
--Annotation: assign value 268
def advice_3_268: Prop := c.Advice 3 268 = 0
--Annotation: assign push_data_left 268
def advice_13_268: Prop := c.Advice 13 268 = 0
--Annotation: assign length 268
def advice_15_268: Prop := c.Advice 15 268 = 0
--Annotation: assign push_data_size 268
def advice_16_268: Prop := c.Advice 16 268 = 0
--Annotation: assign value_rlc 268
def advice_14_268: Prop := c.Advice 14 268 = 0
--Annotation: assign code_hash 268
def advice_4_268: Prop := c.Advice 4 268 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 268
def advice_5_268: Prop := c.Advice 5 268 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_268: Prop := c.Advice 17 268 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_268: Prop := c.Advice 18 268 = 1^(-1)
--Annotation: assign q_enable 269
def fixed_1319: Prop := c.Fixed 0 269 = 1
--Annotation: assign q_first 269
def fixed_1320: Prop := c.Fixed 1 269 = 0
--Annotation: assign q_last 269
def fixed_1321: Prop := c.Fixed 2 269 = 0
--Annotation: assign tag 269
def advice_0_269: Prop := c.Advice 0 269 = 0
--Annotation: assign index 269
def advice_1_269: Prop := c.Advice 1 269 = 0
--Annotation: assign is_code 269
def advice_2_269: Prop := c.Advice 2 269 = 0
--Annotation: assign value 269
def advice_3_269: Prop := c.Advice 3 269 = 0
--Annotation: assign push_data_left 269
def advice_13_269: Prop := c.Advice 13 269 = 0
--Annotation: assign length 269
def advice_15_269: Prop := c.Advice 15 269 = 0
--Annotation: assign push_data_size 269
def advice_16_269: Prop := c.Advice 16 269 = 0
--Annotation: assign value_rlc 269
def advice_14_269: Prop := c.Advice 14 269 = 0
--Annotation: assign code_hash 269
def advice_4_269: Prop := c.Advice 4 269 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 269
def advice_5_269: Prop := c.Advice 5 269 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_269: Prop := c.Advice 17 269 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_269: Prop := c.Advice 18 269 = 1^(-1)
--Annotation: assign q_enable 270
def fixed_1322: Prop := c.Fixed 0 270 = 1
--Annotation: assign q_first 270
def fixed_1323: Prop := c.Fixed 1 270 = 0
--Annotation: assign q_last 270
def fixed_1324: Prop := c.Fixed 2 270 = 0
--Annotation: assign tag 270
def advice_0_270: Prop := c.Advice 0 270 = 0
--Annotation: assign index 270
def advice_1_270: Prop := c.Advice 1 270 = 0
--Annotation: assign is_code 270
def advice_2_270: Prop := c.Advice 2 270 = 0
--Annotation: assign value 270
def advice_3_270: Prop := c.Advice 3 270 = 0
--Annotation: assign push_data_left 270
def advice_13_270: Prop := c.Advice 13 270 = 0
--Annotation: assign length 270
def advice_15_270: Prop := c.Advice 15 270 = 0
--Annotation: assign push_data_size 270
def advice_16_270: Prop := c.Advice 16 270 = 0
--Annotation: assign value_rlc 270
def advice_14_270: Prop := c.Advice 14 270 = 0
--Annotation: assign code_hash 270
def advice_4_270: Prop := c.Advice 4 270 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 270
def advice_5_270: Prop := c.Advice 5 270 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_270: Prop := c.Advice 17 270 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_270: Prop := c.Advice 18 270 = 1^(-1)
--Annotation: assign q_enable 271
def fixed_1325: Prop := c.Fixed 0 271 = 1
--Annotation: assign q_first 271
def fixed_1326: Prop := c.Fixed 1 271 = 0
--Annotation: assign q_last 271
def fixed_1327: Prop := c.Fixed 2 271 = 0
--Annotation: assign tag 271
def advice_0_271: Prop := c.Advice 0 271 = 0
--Annotation: assign index 271
def advice_1_271: Prop := c.Advice 1 271 = 0
--Annotation: assign is_code 271
def advice_2_271: Prop := c.Advice 2 271 = 0
--Annotation: assign value 271
def advice_3_271: Prop := c.Advice 3 271 = 0
--Annotation: assign push_data_left 271
def advice_13_271: Prop := c.Advice 13 271 = 0
--Annotation: assign length 271
def advice_15_271: Prop := c.Advice 15 271 = 0
--Annotation: assign push_data_size 271
def advice_16_271: Prop := c.Advice 16 271 = 0
--Annotation: assign value_rlc 271
def advice_14_271: Prop := c.Advice 14 271 = 0
--Annotation: assign code_hash 271
def advice_4_271: Prop := c.Advice 4 271 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 271
def advice_5_271: Prop := c.Advice 5 271 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_271: Prop := c.Advice 17 271 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_271: Prop := c.Advice 18 271 = 1^(-1)
--Annotation: assign q_enable 272
def fixed_1328: Prop := c.Fixed 0 272 = 1
--Annotation: assign q_first 272
def fixed_1329: Prop := c.Fixed 1 272 = 0
--Annotation: assign q_last 272
def fixed_1330: Prop := c.Fixed 2 272 = 0
--Annotation: assign tag 272
def advice_0_272: Prop := c.Advice 0 272 = 0
--Annotation: assign index 272
def advice_1_272: Prop := c.Advice 1 272 = 0
--Annotation: assign is_code 272
def advice_2_272: Prop := c.Advice 2 272 = 0
--Annotation: assign value 272
def advice_3_272: Prop := c.Advice 3 272 = 0
--Annotation: assign push_data_left 272
def advice_13_272: Prop := c.Advice 13 272 = 0
--Annotation: assign length 272
def advice_15_272: Prop := c.Advice 15 272 = 0
--Annotation: assign push_data_size 272
def advice_16_272: Prop := c.Advice 16 272 = 0
--Annotation: assign value_rlc 272
def advice_14_272: Prop := c.Advice 14 272 = 0
--Annotation: assign code_hash 272
def advice_4_272: Prop := c.Advice 4 272 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 272
def advice_5_272: Prop := c.Advice 5 272 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_272: Prop := c.Advice 17 272 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_272: Prop := c.Advice 18 272 = 1^(-1)
--Annotation: assign q_enable 273
def fixed_1331: Prop := c.Fixed 0 273 = 1
--Annotation: assign q_first 273
def fixed_1332: Prop := c.Fixed 1 273 = 0
--Annotation: assign q_last 273
def fixed_1333: Prop := c.Fixed 2 273 = 0
--Annotation: assign tag 273
def advice_0_273: Prop := c.Advice 0 273 = 0
--Annotation: assign index 273
def advice_1_273: Prop := c.Advice 1 273 = 0
--Annotation: assign is_code 273
def advice_2_273: Prop := c.Advice 2 273 = 0
--Annotation: assign value 273
def advice_3_273: Prop := c.Advice 3 273 = 0
--Annotation: assign push_data_left 273
def advice_13_273: Prop := c.Advice 13 273 = 0
--Annotation: assign length 273
def advice_15_273: Prop := c.Advice 15 273 = 0
--Annotation: assign push_data_size 273
def advice_16_273: Prop := c.Advice 16 273 = 0
--Annotation: assign value_rlc 273
def advice_14_273: Prop := c.Advice 14 273 = 0
--Annotation: assign code_hash 273
def advice_4_273: Prop := c.Advice 4 273 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 273
def advice_5_273: Prop := c.Advice 5 273 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_273: Prop := c.Advice 17 273 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_273: Prop := c.Advice 18 273 = 1^(-1)
--Annotation: assign q_enable 274
def fixed_1334: Prop := c.Fixed 0 274 = 1
--Annotation: assign q_first 274
def fixed_1335: Prop := c.Fixed 1 274 = 0
--Annotation: assign q_last 274
def fixed_1336: Prop := c.Fixed 2 274 = 0
--Annotation: assign tag 274
def advice_0_274: Prop := c.Advice 0 274 = 0
--Annotation: assign index 274
def advice_1_274: Prop := c.Advice 1 274 = 0
--Annotation: assign is_code 274
def advice_2_274: Prop := c.Advice 2 274 = 0
--Annotation: assign value 274
def advice_3_274: Prop := c.Advice 3 274 = 0
--Annotation: assign push_data_left 274
def advice_13_274: Prop := c.Advice 13 274 = 0
--Annotation: assign length 274
def advice_15_274: Prop := c.Advice 15 274 = 0
--Annotation: assign push_data_size 274
def advice_16_274: Prop := c.Advice 16 274 = 0
--Annotation: assign value_rlc 274
def advice_14_274: Prop := c.Advice 14 274 = 0
--Annotation: assign code_hash 274
def advice_4_274: Prop := c.Advice 4 274 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 274
def advice_5_274: Prop := c.Advice 5 274 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_274: Prop := c.Advice 17 274 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_274: Prop := c.Advice 18 274 = 1^(-1)
--Annotation: assign q_enable 275
def fixed_1337: Prop := c.Fixed 0 275 = 1
--Annotation: assign q_first 275
def fixed_1338: Prop := c.Fixed 1 275 = 0
--Annotation: assign q_last 275
def fixed_1339: Prop := c.Fixed 2 275 = 0
--Annotation: assign tag 275
def advice_0_275: Prop := c.Advice 0 275 = 0
--Annotation: assign index 275
def advice_1_275: Prop := c.Advice 1 275 = 0
--Annotation: assign is_code 275
def advice_2_275: Prop := c.Advice 2 275 = 0
--Annotation: assign value 275
def advice_3_275: Prop := c.Advice 3 275 = 0
--Annotation: assign push_data_left 275
def advice_13_275: Prop := c.Advice 13 275 = 0
--Annotation: assign length 275
def advice_15_275: Prop := c.Advice 15 275 = 0
--Annotation: assign push_data_size 275
def advice_16_275: Prop := c.Advice 16 275 = 0
--Annotation: assign value_rlc 275
def advice_14_275: Prop := c.Advice 14 275 = 0
--Annotation: assign code_hash 275
def advice_4_275: Prop := c.Advice 4 275 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 275
def advice_5_275: Prop := c.Advice 5 275 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_275: Prop := c.Advice 17 275 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_275: Prop := c.Advice 18 275 = 1^(-1)
--Annotation: assign q_enable 276
def fixed_1340: Prop := c.Fixed 0 276 = 1
--Annotation: assign q_first 276
def fixed_1341: Prop := c.Fixed 1 276 = 0
--Annotation: assign q_last 276
def fixed_1342: Prop := c.Fixed 2 276 = 0
--Annotation: assign tag 276
def advice_0_276: Prop := c.Advice 0 276 = 0
--Annotation: assign index 276
def advice_1_276: Prop := c.Advice 1 276 = 0
--Annotation: assign is_code 276
def advice_2_276: Prop := c.Advice 2 276 = 0
--Annotation: assign value 276
def advice_3_276: Prop := c.Advice 3 276 = 0
--Annotation: assign push_data_left 276
def advice_13_276: Prop := c.Advice 13 276 = 0
--Annotation: assign length 276
def advice_15_276: Prop := c.Advice 15 276 = 0
--Annotation: assign push_data_size 276
def advice_16_276: Prop := c.Advice 16 276 = 0
--Annotation: assign value_rlc 276
def advice_14_276: Prop := c.Advice 14 276 = 0
--Annotation: assign code_hash 276
def advice_4_276: Prop := c.Advice 4 276 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 276
def advice_5_276: Prop := c.Advice 5 276 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_276: Prop := c.Advice 17 276 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_276: Prop := c.Advice 18 276 = 1^(-1)
--Annotation: assign q_enable 277
def fixed_1343: Prop := c.Fixed 0 277 = 1
--Annotation: assign q_first 277
def fixed_1344: Prop := c.Fixed 1 277 = 0
--Annotation: assign q_last 277
def fixed_1345: Prop := c.Fixed 2 277 = 0
--Annotation: assign tag 277
def advice_0_277: Prop := c.Advice 0 277 = 0
--Annotation: assign index 277
def advice_1_277: Prop := c.Advice 1 277 = 0
--Annotation: assign is_code 277
def advice_2_277: Prop := c.Advice 2 277 = 0
--Annotation: assign value 277
def advice_3_277: Prop := c.Advice 3 277 = 0
--Annotation: assign push_data_left 277
def advice_13_277: Prop := c.Advice 13 277 = 0
--Annotation: assign length 277
def advice_15_277: Prop := c.Advice 15 277 = 0
--Annotation: assign push_data_size 277
def advice_16_277: Prop := c.Advice 16 277 = 0
--Annotation: assign value_rlc 277
def advice_14_277: Prop := c.Advice 14 277 = 0
--Annotation: assign code_hash 277
def advice_4_277: Prop := c.Advice 4 277 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 277
def advice_5_277: Prop := c.Advice 5 277 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_277: Prop := c.Advice 17 277 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_277: Prop := c.Advice 18 277 = 1^(-1)
--Annotation: assign q_enable 278
def fixed_1346: Prop := c.Fixed 0 278 = 1
--Annotation: assign q_first 278
def fixed_1347: Prop := c.Fixed 1 278 = 0
--Annotation: assign q_last 278
def fixed_1348: Prop := c.Fixed 2 278 = 0
--Annotation: assign tag 278
def advice_0_278: Prop := c.Advice 0 278 = 0
--Annotation: assign index 278
def advice_1_278: Prop := c.Advice 1 278 = 0
--Annotation: assign is_code 278
def advice_2_278: Prop := c.Advice 2 278 = 0
--Annotation: assign value 278
def advice_3_278: Prop := c.Advice 3 278 = 0
--Annotation: assign push_data_left 278
def advice_13_278: Prop := c.Advice 13 278 = 0
--Annotation: assign length 278
def advice_15_278: Prop := c.Advice 15 278 = 0
--Annotation: assign push_data_size 278
def advice_16_278: Prop := c.Advice 16 278 = 0
--Annotation: assign value_rlc 278
def advice_14_278: Prop := c.Advice 14 278 = 0
--Annotation: assign code_hash 278
def advice_4_278: Prop := c.Advice 4 278 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 278
def advice_5_278: Prop := c.Advice 5 278 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_278: Prop := c.Advice 17 278 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_278: Prop := c.Advice 18 278 = 1^(-1)
--Annotation: assign q_enable 279
def fixed_1349: Prop := c.Fixed 0 279 = 1
--Annotation: assign q_first 279
def fixed_1350: Prop := c.Fixed 1 279 = 0
--Annotation: assign q_last 279
def fixed_1351: Prop := c.Fixed 2 279 = 0
--Annotation: assign tag 279
def advice_0_279: Prop := c.Advice 0 279 = 0
--Annotation: assign index 279
def advice_1_279: Prop := c.Advice 1 279 = 0
--Annotation: assign is_code 279
def advice_2_279: Prop := c.Advice 2 279 = 0
--Annotation: assign value 279
def advice_3_279: Prop := c.Advice 3 279 = 0
--Annotation: assign push_data_left 279
def advice_13_279: Prop := c.Advice 13 279 = 0
--Annotation: assign length 279
def advice_15_279: Prop := c.Advice 15 279 = 0
--Annotation: assign push_data_size 279
def advice_16_279: Prop := c.Advice 16 279 = 0
--Annotation: assign value_rlc 279
def advice_14_279: Prop := c.Advice 14 279 = 0
--Annotation: assign code_hash 279
def advice_4_279: Prop := c.Advice 4 279 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 279
def advice_5_279: Prop := c.Advice 5 279 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_279: Prop := c.Advice 17 279 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_279: Prop := c.Advice 18 279 = 1^(-1)
--Annotation: assign q_enable 280
def fixed_1352: Prop := c.Fixed 0 280 = 1
--Annotation: assign q_first 280
def fixed_1353: Prop := c.Fixed 1 280 = 0
--Annotation: assign q_last 280
def fixed_1354: Prop := c.Fixed 2 280 = 0
--Annotation: assign tag 280
def advice_0_280: Prop := c.Advice 0 280 = 0
--Annotation: assign index 280
def advice_1_280: Prop := c.Advice 1 280 = 0
--Annotation: assign is_code 280
def advice_2_280: Prop := c.Advice 2 280 = 0
--Annotation: assign value 280
def advice_3_280: Prop := c.Advice 3 280 = 0
--Annotation: assign push_data_left 280
def advice_13_280: Prop := c.Advice 13 280 = 0
--Annotation: assign length 280
def advice_15_280: Prop := c.Advice 15 280 = 0
--Annotation: assign push_data_size 280
def advice_16_280: Prop := c.Advice 16 280 = 0
--Annotation: assign value_rlc 280
def advice_14_280: Prop := c.Advice 14 280 = 0
--Annotation: assign code_hash 280
def advice_4_280: Prop := c.Advice 4 280 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 280
def advice_5_280: Prop := c.Advice 5 280 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_280: Prop := c.Advice 17 280 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_280: Prop := c.Advice 18 280 = 1^(-1)
--Annotation: assign q_enable 281
def fixed_1355: Prop := c.Fixed 0 281 = 1
--Annotation: assign q_first 281
def fixed_1356: Prop := c.Fixed 1 281 = 0
--Annotation: assign q_last 281
def fixed_1357: Prop := c.Fixed 2 281 = 0
--Annotation: assign tag 281
def advice_0_281: Prop := c.Advice 0 281 = 0
--Annotation: assign index 281
def advice_1_281: Prop := c.Advice 1 281 = 0
--Annotation: assign is_code 281
def advice_2_281: Prop := c.Advice 2 281 = 0
--Annotation: assign value 281
def advice_3_281: Prop := c.Advice 3 281 = 0
--Annotation: assign push_data_left 281
def advice_13_281: Prop := c.Advice 13 281 = 0
--Annotation: assign length 281
def advice_15_281: Prop := c.Advice 15 281 = 0
--Annotation: assign push_data_size 281
def advice_16_281: Prop := c.Advice 16 281 = 0
--Annotation: assign value_rlc 281
def advice_14_281: Prop := c.Advice 14 281 = 0
--Annotation: assign code_hash 281
def advice_4_281: Prop := c.Advice 4 281 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 281
def advice_5_281: Prop := c.Advice 5 281 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_281: Prop := c.Advice 17 281 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_281: Prop := c.Advice 18 281 = 1^(-1)
--Annotation: assign q_enable 282
def fixed_1358: Prop := c.Fixed 0 282 = 1
--Annotation: assign q_first 282
def fixed_1359: Prop := c.Fixed 1 282 = 0
--Annotation: assign q_last 282
def fixed_1360: Prop := c.Fixed 2 282 = 0
--Annotation: assign tag 282
def advice_0_282: Prop := c.Advice 0 282 = 0
--Annotation: assign index 282
def advice_1_282: Prop := c.Advice 1 282 = 0
--Annotation: assign is_code 282
def advice_2_282: Prop := c.Advice 2 282 = 0
--Annotation: assign value 282
def advice_3_282: Prop := c.Advice 3 282 = 0
--Annotation: assign push_data_left 282
def advice_13_282: Prop := c.Advice 13 282 = 0
--Annotation: assign length 282
def advice_15_282: Prop := c.Advice 15 282 = 0
--Annotation: assign push_data_size 282
def advice_16_282: Prop := c.Advice 16 282 = 0
--Annotation: assign value_rlc 282
def advice_14_282: Prop := c.Advice 14 282 = 0
--Annotation: assign code_hash 282
def advice_4_282: Prop := c.Advice 4 282 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 282
def advice_5_282: Prop := c.Advice 5 282 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_282: Prop := c.Advice 17 282 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_282: Prop := c.Advice 18 282 = 1^(-1)
--Annotation: assign q_enable 283
def fixed_1361: Prop := c.Fixed 0 283 = 1
--Annotation: assign q_first 283
def fixed_1362: Prop := c.Fixed 1 283 = 0
--Annotation: assign q_last 283
def fixed_1363: Prop := c.Fixed 2 283 = 0
--Annotation: assign tag 283
def advice_0_283: Prop := c.Advice 0 283 = 0
--Annotation: assign index 283
def advice_1_283: Prop := c.Advice 1 283 = 0
--Annotation: assign is_code 283
def advice_2_283: Prop := c.Advice 2 283 = 0
--Annotation: assign value 283
def advice_3_283: Prop := c.Advice 3 283 = 0
--Annotation: assign push_data_left 283
def advice_13_283: Prop := c.Advice 13 283 = 0
--Annotation: assign length 283
def advice_15_283: Prop := c.Advice 15 283 = 0
--Annotation: assign push_data_size 283
def advice_16_283: Prop := c.Advice 16 283 = 0
--Annotation: assign value_rlc 283
def advice_14_283: Prop := c.Advice 14 283 = 0
--Annotation: assign code_hash 283
def advice_4_283: Prop := c.Advice 4 283 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 283
def advice_5_283: Prop := c.Advice 5 283 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_283: Prop := c.Advice 17 283 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_283: Prop := c.Advice 18 283 = 1^(-1)
--Annotation: assign q_enable 284
def fixed_1364: Prop := c.Fixed 0 284 = 1
--Annotation: assign q_first 284
def fixed_1365: Prop := c.Fixed 1 284 = 0
--Annotation: assign q_last 284
def fixed_1366: Prop := c.Fixed 2 284 = 0
--Annotation: assign tag 284
def advice_0_284: Prop := c.Advice 0 284 = 0
--Annotation: assign index 284
def advice_1_284: Prop := c.Advice 1 284 = 0
--Annotation: assign is_code 284
def advice_2_284: Prop := c.Advice 2 284 = 0
--Annotation: assign value 284
def advice_3_284: Prop := c.Advice 3 284 = 0
--Annotation: assign push_data_left 284
def advice_13_284: Prop := c.Advice 13 284 = 0
--Annotation: assign length 284
def advice_15_284: Prop := c.Advice 15 284 = 0
--Annotation: assign push_data_size 284
def advice_16_284: Prop := c.Advice 16 284 = 0
--Annotation: assign value_rlc 284
def advice_14_284: Prop := c.Advice 14 284 = 0
--Annotation: assign code_hash 284
def advice_4_284: Prop := c.Advice 4 284 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 284
def advice_5_284: Prop := c.Advice 5 284 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_284: Prop := c.Advice 17 284 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_284: Prop := c.Advice 18 284 = 1^(-1)
--Annotation: assign q_enable 285
def fixed_1367: Prop := c.Fixed 0 285 = 1
--Annotation: assign q_first 285
def fixed_1368: Prop := c.Fixed 1 285 = 0
--Annotation: assign q_last 285
def fixed_1369: Prop := c.Fixed 2 285 = 0
--Annotation: assign tag 285
def advice_0_285: Prop := c.Advice 0 285 = 0
--Annotation: assign index 285
def advice_1_285: Prop := c.Advice 1 285 = 0
--Annotation: assign is_code 285
def advice_2_285: Prop := c.Advice 2 285 = 0
--Annotation: assign value 285
def advice_3_285: Prop := c.Advice 3 285 = 0
--Annotation: assign push_data_left 285
def advice_13_285: Prop := c.Advice 13 285 = 0
--Annotation: assign length 285
def advice_15_285: Prop := c.Advice 15 285 = 0
--Annotation: assign push_data_size 285
def advice_16_285: Prop := c.Advice 16 285 = 0
--Annotation: assign value_rlc 285
def advice_14_285: Prop := c.Advice 14 285 = 0
--Annotation: assign code_hash 285
def advice_4_285: Prop := c.Advice 4 285 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 285
def advice_5_285: Prop := c.Advice 5 285 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_285: Prop := c.Advice 17 285 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_285: Prop := c.Advice 18 285 = 1^(-1)
--Annotation: assign q_enable 286
def fixed_1370: Prop := c.Fixed 0 286 = 1
--Annotation: assign q_first 286
def fixed_1371: Prop := c.Fixed 1 286 = 0
--Annotation: assign q_last 286
def fixed_1372: Prop := c.Fixed 2 286 = 0
--Annotation: assign tag 286
def advice_0_286: Prop := c.Advice 0 286 = 0
--Annotation: assign index 286
def advice_1_286: Prop := c.Advice 1 286 = 0
--Annotation: assign is_code 286
def advice_2_286: Prop := c.Advice 2 286 = 0
--Annotation: assign value 286
def advice_3_286: Prop := c.Advice 3 286 = 0
--Annotation: assign push_data_left 286
def advice_13_286: Prop := c.Advice 13 286 = 0
--Annotation: assign length 286
def advice_15_286: Prop := c.Advice 15 286 = 0
--Annotation: assign push_data_size 286
def advice_16_286: Prop := c.Advice 16 286 = 0
--Annotation: assign value_rlc 286
def advice_14_286: Prop := c.Advice 14 286 = 0
--Annotation: assign code_hash 286
def advice_4_286: Prop := c.Advice 4 286 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 286
def advice_5_286: Prop := c.Advice 5 286 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_286: Prop := c.Advice 17 286 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_286: Prop := c.Advice 18 286 = 1^(-1)
--Annotation: assign q_enable 287
def fixed_1373: Prop := c.Fixed 0 287 = 1
--Annotation: assign q_first 287
def fixed_1374: Prop := c.Fixed 1 287 = 0
--Annotation: assign q_last 287
def fixed_1375: Prop := c.Fixed 2 287 = 0
--Annotation: assign tag 287
def advice_0_287: Prop := c.Advice 0 287 = 0
--Annotation: assign index 287
def advice_1_287: Prop := c.Advice 1 287 = 0
--Annotation: assign is_code 287
def advice_2_287: Prop := c.Advice 2 287 = 0
--Annotation: assign value 287
def advice_3_287: Prop := c.Advice 3 287 = 0
--Annotation: assign push_data_left 287
def advice_13_287: Prop := c.Advice 13 287 = 0
--Annotation: assign length 287
def advice_15_287: Prop := c.Advice 15 287 = 0
--Annotation: assign push_data_size 287
def advice_16_287: Prop := c.Advice 16 287 = 0
--Annotation: assign value_rlc 287
def advice_14_287: Prop := c.Advice 14 287 = 0
--Annotation: assign code_hash 287
def advice_4_287: Prop := c.Advice 4 287 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 287
def advice_5_287: Prop := c.Advice 5 287 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_287: Prop := c.Advice 17 287 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_287: Prop := c.Advice 18 287 = 1^(-1)
--Annotation: assign q_enable 288
def fixed_1376: Prop := c.Fixed 0 288 = 1
--Annotation: assign q_first 288
def fixed_1377: Prop := c.Fixed 1 288 = 0
--Annotation: assign q_last 288
def fixed_1378: Prop := c.Fixed 2 288 = 0
--Annotation: assign tag 288
def advice_0_288: Prop := c.Advice 0 288 = 0
--Annotation: assign index 288
def advice_1_288: Prop := c.Advice 1 288 = 0
--Annotation: assign is_code 288
def advice_2_288: Prop := c.Advice 2 288 = 0
--Annotation: assign value 288
def advice_3_288: Prop := c.Advice 3 288 = 0
--Annotation: assign push_data_left 288
def advice_13_288: Prop := c.Advice 13 288 = 0
--Annotation: assign length 288
def advice_15_288: Prop := c.Advice 15 288 = 0
--Annotation: assign push_data_size 288
def advice_16_288: Prop := c.Advice 16 288 = 0
--Annotation: assign value_rlc 288
def advice_14_288: Prop := c.Advice 14 288 = 0
--Annotation: assign code_hash 288
def advice_4_288: Prop := c.Advice 4 288 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 288
def advice_5_288: Prop := c.Advice 5 288 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_288: Prop := c.Advice 17 288 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_288: Prop := c.Advice 18 288 = 1^(-1)
--Annotation: assign q_enable 289
def fixed_1379: Prop := c.Fixed 0 289 = 1
--Annotation: assign q_first 289
def fixed_1380: Prop := c.Fixed 1 289 = 0
--Annotation: assign q_last 289
def fixed_1381: Prop := c.Fixed 2 289 = 0
--Annotation: assign tag 289
def advice_0_289: Prop := c.Advice 0 289 = 0
--Annotation: assign index 289
def advice_1_289: Prop := c.Advice 1 289 = 0
--Annotation: assign is_code 289
def advice_2_289: Prop := c.Advice 2 289 = 0
--Annotation: assign value 289
def advice_3_289: Prop := c.Advice 3 289 = 0
--Annotation: assign push_data_left 289
def advice_13_289: Prop := c.Advice 13 289 = 0
--Annotation: assign length 289
def advice_15_289: Prop := c.Advice 15 289 = 0
--Annotation: assign push_data_size 289
def advice_16_289: Prop := c.Advice 16 289 = 0
--Annotation: assign value_rlc 289
def advice_14_289: Prop := c.Advice 14 289 = 0
--Annotation: assign code_hash 289
def advice_4_289: Prop := c.Advice 4 289 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 289
def advice_5_289: Prop := c.Advice 5 289 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_289: Prop := c.Advice 17 289 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_289: Prop := c.Advice 18 289 = 1^(-1)
--Annotation: assign q_enable 290
def fixed_1382: Prop := c.Fixed 0 290 = 1
--Annotation: assign q_first 290
def fixed_1383: Prop := c.Fixed 1 290 = 0
--Annotation: assign q_last 290
def fixed_1384: Prop := c.Fixed 2 290 = 0
--Annotation: assign tag 290
def advice_0_290: Prop := c.Advice 0 290 = 0
--Annotation: assign index 290
def advice_1_290: Prop := c.Advice 1 290 = 0
--Annotation: assign is_code 290
def advice_2_290: Prop := c.Advice 2 290 = 0
--Annotation: assign value 290
def advice_3_290: Prop := c.Advice 3 290 = 0
--Annotation: assign push_data_left 290
def advice_13_290: Prop := c.Advice 13 290 = 0
--Annotation: assign length 290
def advice_15_290: Prop := c.Advice 15 290 = 0
--Annotation: assign push_data_size 290
def advice_16_290: Prop := c.Advice 16 290 = 0
--Annotation: assign value_rlc 290
def advice_14_290: Prop := c.Advice 14 290 = 0
--Annotation: assign code_hash 290
def advice_4_290: Prop := c.Advice 4 290 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 290
def advice_5_290: Prop := c.Advice 5 290 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_290: Prop := c.Advice 17 290 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_290: Prop := c.Advice 18 290 = 1^(-1)
--Annotation: assign q_enable 291
def fixed_1385: Prop := c.Fixed 0 291 = 1
--Annotation: assign q_first 291
def fixed_1386: Prop := c.Fixed 1 291 = 0
--Annotation: assign q_last 291
def fixed_1387: Prop := c.Fixed 2 291 = 0
--Annotation: assign tag 291
def advice_0_291: Prop := c.Advice 0 291 = 0
--Annotation: assign index 291
def advice_1_291: Prop := c.Advice 1 291 = 0
--Annotation: assign is_code 291
def advice_2_291: Prop := c.Advice 2 291 = 0
--Annotation: assign value 291
def advice_3_291: Prop := c.Advice 3 291 = 0
--Annotation: assign push_data_left 291
def advice_13_291: Prop := c.Advice 13 291 = 0
--Annotation: assign length 291
def advice_15_291: Prop := c.Advice 15 291 = 0
--Annotation: assign push_data_size 291
def advice_16_291: Prop := c.Advice 16 291 = 0
--Annotation: assign value_rlc 291
def advice_14_291: Prop := c.Advice 14 291 = 0
--Annotation: assign code_hash 291
def advice_4_291: Prop := c.Advice 4 291 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 291
def advice_5_291: Prop := c.Advice 5 291 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_291: Prop := c.Advice 17 291 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_291: Prop := c.Advice 18 291 = 1^(-1)
--Annotation: assign q_enable 292
def fixed_1388: Prop := c.Fixed 0 292 = 1
--Annotation: assign q_first 292
def fixed_1389: Prop := c.Fixed 1 292 = 0
--Annotation: assign q_last 292
def fixed_1390: Prop := c.Fixed 2 292 = 0
--Annotation: assign tag 292
def advice_0_292: Prop := c.Advice 0 292 = 0
--Annotation: assign index 292
def advice_1_292: Prop := c.Advice 1 292 = 0
--Annotation: assign is_code 292
def advice_2_292: Prop := c.Advice 2 292 = 0
--Annotation: assign value 292
def advice_3_292: Prop := c.Advice 3 292 = 0
--Annotation: assign push_data_left 292
def advice_13_292: Prop := c.Advice 13 292 = 0
--Annotation: assign length 292
def advice_15_292: Prop := c.Advice 15 292 = 0
--Annotation: assign push_data_size 292
def advice_16_292: Prop := c.Advice 16 292 = 0
--Annotation: assign value_rlc 292
def advice_14_292: Prop := c.Advice 14 292 = 0
--Annotation: assign code_hash 292
def advice_4_292: Prop := c.Advice 4 292 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 292
def advice_5_292: Prop := c.Advice 5 292 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_292: Prop := c.Advice 17 292 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_292: Prop := c.Advice 18 292 = 1^(-1)
--Annotation: assign q_enable 293
def fixed_1391: Prop := c.Fixed 0 293 = 1
--Annotation: assign q_first 293
def fixed_1392: Prop := c.Fixed 1 293 = 0
--Annotation: assign q_last 293
def fixed_1393: Prop := c.Fixed 2 293 = 0
--Annotation: assign tag 293
def advice_0_293: Prop := c.Advice 0 293 = 0
--Annotation: assign index 293
def advice_1_293: Prop := c.Advice 1 293 = 0
--Annotation: assign is_code 293
def advice_2_293: Prop := c.Advice 2 293 = 0
--Annotation: assign value 293
def advice_3_293: Prop := c.Advice 3 293 = 0
--Annotation: assign push_data_left 293
def advice_13_293: Prop := c.Advice 13 293 = 0
--Annotation: assign length 293
def advice_15_293: Prop := c.Advice 15 293 = 0
--Annotation: assign push_data_size 293
def advice_16_293: Prop := c.Advice 16 293 = 0
--Annotation: assign value_rlc 293
def advice_14_293: Prop := c.Advice 14 293 = 0
--Annotation: assign code_hash 293
def advice_4_293: Prop := c.Advice 4 293 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 293
def advice_5_293: Prop := c.Advice 5 293 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_293: Prop := c.Advice 17 293 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_293: Prop := c.Advice 18 293 = 1^(-1)
--Annotation: assign q_enable 294
def fixed_1394: Prop := c.Fixed 0 294 = 1
--Annotation: assign q_first 294
def fixed_1395: Prop := c.Fixed 1 294 = 0
--Annotation: assign q_last 294
def fixed_1396: Prop := c.Fixed 2 294 = 0
--Annotation: assign tag 294
def advice_0_294: Prop := c.Advice 0 294 = 0
--Annotation: assign index 294
def advice_1_294: Prop := c.Advice 1 294 = 0
--Annotation: assign is_code 294
def advice_2_294: Prop := c.Advice 2 294 = 0
--Annotation: assign value 294
def advice_3_294: Prop := c.Advice 3 294 = 0
--Annotation: assign push_data_left 294
def advice_13_294: Prop := c.Advice 13 294 = 0
--Annotation: assign length 294
def advice_15_294: Prop := c.Advice 15 294 = 0
--Annotation: assign push_data_size 294
def advice_16_294: Prop := c.Advice 16 294 = 0
--Annotation: assign value_rlc 294
def advice_14_294: Prop := c.Advice 14 294 = 0
--Annotation: assign code_hash 294
def advice_4_294: Prop := c.Advice 4 294 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 294
def advice_5_294: Prop := c.Advice 5 294 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_294: Prop := c.Advice 17 294 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_294: Prop := c.Advice 18 294 = 1^(-1)
--Annotation: assign q_enable 295
def fixed_1397: Prop := c.Fixed 0 295 = 1
--Annotation: assign q_first 295
def fixed_1398: Prop := c.Fixed 1 295 = 0
--Annotation: assign q_last 295
def fixed_1399: Prop := c.Fixed 2 295 = 0
--Annotation: assign tag 295
def advice_0_295: Prop := c.Advice 0 295 = 0
--Annotation: assign index 295
def advice_1_295: Prop := c.Advice 1 295 = 0
--Annotation: assign is_code 295
def advice_2_295: Prop := c.Advice 2 295 = 0
--Annotation: assign value 295
def advice_3_295: Prop := c.Advice 3 295 = 0
--Annotation: assign push_data_left 295
def advice_13_295: Prop := c.Advice 13 295 = 0
--Annotation: assign length 295
def advice_15_295: Prop := c.Advice 15 295 = 0
--Annotation: assign push_data_size 295
def advice_16_295: Prop := c.Advice 16 295 = 0
--Annotation: assign value_rlc 295
def advice_14_295: Prop := c.Advice 14 295 = 0
--Annotation: assign code_hash 295
def advice_4_295: Prop := c.Advice 4 295 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 295
def advice_5_295: Prop := c.Advice 5 295 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_295: Prop := c.Advice 17 295 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_295: Prop := c.Advice 18 295 = 1^(-1)
--Annotation: assign q_enable 296
def fixed_1400: Prop := c.Fixed 0 296 = 1
--Annotation: assign q_first 296
def fixed_1401: Prop := c.Fixed 1 296 = 0
--Annotation: assign q_last 296
def fixed_1402: Prop := c.Fixed 2 296 = 0
--Annotation: assign tag 296
def advice_0_296: Prop := c.Advice 0 296 = 0
--Annotation: assign index 296
def advice_1_296: Prop := c.Advice 1 296 = 0
--Annotation: assign is_code 296
def advice_2_296: Prop := c.Advice 2 296 = 0
--Annotation: assign value 296
def advice_3_296: Prop := c.Advice 3 296 = 0
--Annotation: assign push_data_left 296
def advice_13_296: Prop := c.Advice 13 296 = 0
--Annotation: assign length 296
def advice_15_296: Prop := c.Advice 15 296 = 0
--Annotation: assign push_data_size 296
def advice_16_296: Prop := c.Advice 16 296 = 0
--Annotation: assign value_rlc 296
def advice_14_296: Prop := c.Advice 14 296 = 0
--Annotation: assign code_hash 296
def advice_4_296: Prop := c.Advice 4 296 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 296
def advice_5_296: Prop := c.Advice 5 296 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_296: Prop := c.Advice 17 296 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_296: Prop := c.Advice 18 296 = 1^(-1)
--Annotation: assign q_enable 297
def fixed_1403: Prop := c.Fixed 0 297 = 1
--Annotation: assign q_first 297
def fixed_1404: Prop := c.Fixed 1 297 = 0
--Annotation: assign q_last 297
def fixed_1405: Prop := c.Fixed 2 297 = 0
--Annotation: assign tag 297
def advice_0_297: Prop := c.Advice 0 297 = 0
--Annotation: assign index 297
def advice_1_297: Prop := c.Advice 1 297 = 0
--Annotation: assign is_code 297
def advice_2_297: Prop := c.Advice 2 297 = 0
--Annotation: assign value 297
def advice_3_297: Prop := c.Advice 3 297 = 0
--Annotation: assign push_data_left 297
def advice_13_297: Prop := c.Advice 13 297 = 0
--Annotation: assign length 297
def advice_15_297: Prop := c.Advice 15 297 = 0
--Annotation: assign push_data_size 297
def advice_16_297: Prop := c.Advice 16 297 = 0
--Annotation: assign value_rlc 297
def advice_14_297: Prop := c.Advice 14 297 = 0
--Annotation: assign code_hash 297
def advice_4_297: Prop := c.Advice 4 297 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 297
def advice_5_297: Prop := c.Advice 5 297 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_297: Prop := c.Advice 17 297 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_297: Prop := c.Advice 18 297 = 1^(-1)
--Annotation: assign q_enable 298
def fixed_1406: Prop := c.Fixed 0 298 = 1
--Annotation: assign q_first 298
def fixed_1407: Prop := c.Fixed 1 298 = 0
--Annotation: assign q_last 298
def fixed_1408: Prop := c.Fixed 2 298 = 0
--Annotation: assign tag 298
def advice_0_298: Prop := c.Advice 0 298 = 0
--Annotation: assign index 298
def advice_1_298: Prop := c.Advice 1 298 = 0
--Annotation: assign is_code 298
def advice_2_298: Prop := c.Advice 2 298 = 0
--Annotation: assign value 298
def advice_3_298: Prop := c.Advice 3 298 = 0
--Annotation: assign push_data_left 298
def advice_13_298: Prop := c.Advice 13 298 = 0
--Annotation: assign length 298
def advice_15_298: Prop := c.Advice 15 298 = 0
--Annotation: assign push_data_size 298
def advice_16_298: Prop := c.Advice 16 298 = 0
--Annotation: assign value_rlc 298
def advice_14_298: Prop := c.Advice 14 298 = 0
--Annotation: assign code_hash 298
def advice_4_298: Prop := c.Advice 4 298 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 298
def advice_5_298: Prop := c.Advice 5 298 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_298: Prop := c.Advice 17 298 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_298: Prop := c.Advice 18 298 = 1^(-1)
--Annotation: assign q_enable 299
def fixed_1409: Prop := c.Fixed 0 299 = 1
--Annotation: assign q_first 299
def fixed_1410: Prop := c.Fixed 1 299 = 0
--Annotation: assign q_last 299
def fixed_1411: Prop := c.Fixed 2 299 = 0
--Annotation: assign tag 299
def advice_0_299: Prop := c.Advice 0 299 = 0
--Annotation: assign index 299
def advice_1_299: Prop := c.Advice 1 299 = 0
--Annotation: assign is_code 299
def advice_2_299: Prop := c.Advice 2 299 = 0
--Annotation: assign value 299
def advice_3_299: Prop := c.Advice 3 299 = 0
--Annotation: assign push_data_left 299
def advice_13_299: Prop := c.Advice 13 299 = 0
--Annotation: assign length 299
def advice_15_299: Prop := c.Advice 15 299 = 0
--Annotation: assign push_data_size 299
def advice_16_299: Prop := c.Advice 16 299 = 0
--Annotation: assign value_rlc 299
def advice_14_299: Prop := c.Advice 14 299 = 0
--Annotation: assign code_hash 299
def advice_4_299: Prop := c.Advice 4 299 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 299
def advice_5_299: Prop := c.Advice 5 299 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_299: Prop := c.Advice 17 299 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_299: Prop := c.Advice 18 299 = 1^(-1)
--Annotation: assign q_enable 300
def fixed_1412: Prop := c.Fixed 0 300 = 1
--Annotation: assign q_first 300
def fixed_1413: Prop := c.Fixed 1 300 = 0
--Annotation: assign q_last 300
def fixed_1414: Prop := c.Fixed 2 300 = 0
--Annotation: assign tag 300
def advice_0_300: Prop := c.Advice 0 300 = 0
--Annotation: assign index 300
def advice_1_300: Prop := c.Advice 1 300 = 0
--Annotation: assign is_code 300
def advice_2_300: Prop := c.Advice 2 300 = 0
--Annotation: assign value 300
def advice_3_300: Prop := c.Advice 3 300 = 0
--Annotation: assign push_data_left 300
def advice_13_300: Prop := c.Advice 13 300 = 0
--Annotation: assign length 300
def advice_15_300: Prop := c.Advice 15 300 = 0
--Annotation: assign push_data_size 300
def advice_16_300: Prop := c.Advice 16 300 = 0
--Annotation: assign value_rlc 300
def advice_14_300: Prop := c.Advice 14 300 = 0
--Annotation: assign code_hash 300
def advice_4_300: Prop := c.Advice 4 300 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 300
def advice_5_300: Prop := c.Advice 5 300 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_300: Prop := c.Advice 17 300 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_300: Prop := c.Advice 18 300 = 1^(-1)
--Annotation: assign q_enable 301
def fixed_1415: Prop := c.Fixed 0 301 = 1
--Annotation: assign q_first 301
def fixed_1416: Prop := c.Fixed 1 301 = 0
--Annotation: assign q_last 301
def fixed_1417: Prop := c.Fixed 2 301 = 0
--Annotation: assign tag 301
def advice_0_301: Prop := c.Advice 0 301 = 0
--Annotation: assign index 301
def advice_1_301: Prop := c.Advice 1 301 = 0
--Annotation: assign is_code 301
def advice_2_301: Prop := c.Advice 2 301 = 0
--Annotation: assign value 301
def advice_3_301: Prop := c.Advice 3 301 = 0
--Annotation: assign push_data_left 301
def advice_13_301: Prop := c.Advice 13 301 = 0
--Annotation: assign length 301
def advice_15_301: Prop := c.Advice 15 301 = 0
--Annotation: assign push_data_size 301
def advice_16_301: Prop := c.Advice 16 301 = 0
--Annotation: assign value_rlc 301
def advice_14_301: Prop := c.Advice 14 301 = 0
--Annotation: assign code_hash 301
def advice_4_301: Prop := c.Advice 4 301 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 301
def advice_5_301: Prop := c.Advice 5 301 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_301: Prop := c.Advice 17 301 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_301: Prop := c.Advice 18 301 = 1^(-1)
--Annotation: assign q_enable 302
def fixed_1418: Prop := c.Fixed 0 302 = 1
--Annotation: assign q_first 302
def fixed_1419: Prop := c.Fixed 1 302 = 0
--Annotation: assign q_last 302
def fixed_1420: Prop := c.Fixed 2 302 = 0
--Annotation: assign tag 302
def advice_0_302: Prop := c.Advice 0 302 = 0
--Annotation: assign index 302
def advice_1_302: Prop := c.Advice 1 302 = 0
--Annotation: assign is_code 302
def advice_2_302: Prop := c.Advice 2 302 = 0
--Annotation: assign value 302
def advice_3_302: Prop := c.Advice 3 302 = 0
--Annotation: assign push_data_left 302
def advice_13_302: Prop := c.Advice 13 302 = 0
--Annotation: assign length 302
def advice_15_302: Prop := c.Advice 15 302 = 0
--Annotation: assign push_data_size 302
def advice_16_302: Prop := c.Advice 16 302 = 0
--Annotation: assign value_rlc 302
def advice_14_302: Prop := c.Advice 14 302 = 0
--Annotation: assign code_hash 302
def advice_4_302: Prop := c.Advice 4 302 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 302
def advice_5_302: Prop := c.Advice 5 302 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_302: Prop := c.Advice 17 302 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_302: Prop := c.Advice 18 302 = 1^(-1)
--Annotation: assign q_enable 303
def fixed_1421: Prop := c.Fixed 0 303 = 1
--Annotation: assign q_first 303
def fixed_1422: Prop := c.Fixed 1 303 = 0
--Annotation: assign q_last 303
def fixed_1423: Prop := c.Fixed 2 303 = 0
--Annotation: assign tag 303
def advice_0_303: Prop := c.Advice 0 303 = 0
--Annotation: assign index 303
def advice_1_303: Prop := c.Advice 1 303 = 0
--Annotation: assign is_code 303
def advice_2_303: Prop := c.Advice 2 303 = 0
--Annotation: assign value 303
def advice_3_303: Prop := c.Advice 3 303 = 0
--Annotation: assign push_data_left 303
def advice_13_303: Prop := c.Advice 13 303 = 0
--Annotation: assign length 303
def advice_15_303: Prop := c.Advice 15 303 = 0
--Annotation: assign push_data_size 303
def advice_16_303: Prop := c.Advice 16 303 = 0
--Annotation: assign value_rlc 303
def advice_14_303: Prop := c.Advice 14 303 = 0
--Annotation: assign code_hash 303
def advice_4_303: Prop := c.Advice 4 303 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 303
def advice_5_303: Prop := c.Advice 5 303 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_303: Prop := c.Advice 17 303 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_303: Prop := c.Advice 18 303 = 1^(-1)
--Annotation: assign q_enable 304
def fixed_1424: Prop := c.Fixed 0 304 = 1
--Annotation: assign q_first 304
def fixed_1425: Prop := c.Fixed 1 304 = 0
--Annotation: assign q_last 304
def fixed_1426: Prop := c.Fixed 2 304 = 0
--Annotation: assign tag 304
def advice_0_304: Prop := c.Advice 0 304 = 0
--Annotation: assign index 304
def advice_1_304: Prop := c.Advice 1 304 = 0
--Annotation: assign is_code 304
def advice_2_304: Prop := c.Advice 2 304 = 0
--Annotation: assign value 304
def advice_3_304: Prop := c.Advice 3 304 = 0
--Annotation: assign push_data_left 304
def advice_13_304: Prop := c.Advice 13 304 = 0
--Annotation: assign length 304
def advice_15_304: Prop := c.Advice 15 304 = 0
--Annotation: assign push_data_size 304
def advice_16_304: Prop := c.Advice 16 304 = 0
--Annotation: assign value_rlc 304
def advice_14_304: Prop := c.Advice 14 304 = 0
--Annotation: assign code_hash 304
def advice_4_304: Prop := c.Advice 4 304 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 304
def advice_5_304: Prop := c.Advice 5 304 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_304: Prop := c.Advice 17 304 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_304: Prop := c.Advice 18 304 = 1^(-1)
--Annotation: assign q_enable 305
def fixed_1427: Prop := c.Fixed 0 305 = 1
--Annotation: assign q_first 305
def fixed_1428: Prop := c.Fixed 1 305 = 0
--Annotation: assign q_last 305
def fixed_1429: Prop := c.Fixed 2 305 = 0
--Annotation: assign tag 305
def advice_0_305: Prop := c.Advice 0 305 = 0
--Annotation: assign index 305
def advice_1_305: Prop := c.Advice 1 305 = 0
--Annotation: assign is_code 305
def advice_2_305: Prop := c.Advice 2 305 = 0
--Annotation: assign value 305
def advice_3_305: Prop := c.Advice 3 305 = 0
--Annotation: assign push_data_left 305
def advice_13_305: Prop := c.Advice 13 305 = 0
--Annotation: assign length 305
def advice_15_305: Prop := c.Advice 15 305 = 0
--Annotation: assign push_data_size 305
def advice_16_305: Prop := c.Advice 16 305 = 0
--Annotation: assign value_rlc 305
def advice_14_305: Prop := c.Advice 14 305 = 0
--Annotation: assign code_hash 305
def advice_4_305: Prop := c.Advice 4 305 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 305
def advice_5_305: Prop := c.Advice 5 305 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_305: Prop := c.Advice 17 305 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_305: Prop := c.Advice 18 305 = 1^(-1)
--Annotation: assign q_enable 306
def fixed_1430: Prop := c.Fixed 0 306 = 1
--Annotation: assign q_first 306
def fixed_1431: Prop := c.Fixed 1 306 = 0
--Annotation: assign q_last 306
def fixed_1432: Prop := c.Fixed 2 306 = 0
--Annotation: assign tag 306
def advice_0_306: Prop := c.Advice 0 306 = 0
--Annotation: assign index 306
def advice_1_306: Prop := c.Advice 1 306 = 0
--Annotation: assign is_code 306
def advice_2_306: Prop := c.Advice 2 306 = 0
--Annotation: assign value 306
def advice_3_306: Prop := c.Advice 3 306 = 0
--Annotation: assign push_data_left 306
def advice_13_306: Prop := c.Advice 13 306 = 0
--Annotation: assign length 306
def advice_15_306: Prop := c.Advice 15 306 = 0
--Annotation: assign push_data_size 306
def advice_16_306: Prop := c.Advice 16 306 = 0
--Annotation: assign value_rlc 306
def advice_14_306: Prop := c.Advice 14 306 = 0
--Annotation: assign code_hash 306
def advice_4_306: Prop := c.Advice 4 306 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 306
def advice_5_306: Prop := c.Advice 5 306 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_306: Prop := c.Advice 17 306 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_306: Prop := c.Advice 18 306 = 1^(-1)
--Annotation: assign q_enable 307
def fixed_1433: Prop := c.Fixed 0 307 = 1
--Annotation: assign q_first 307
def fixed_1434: Prop := c.Fixed 1 307 = 0
--Annotation: assign q_last 307
def fixed_1435: Prop := c.Fixed 2 307 = 0
--Annotation: assign tag 307
def advice_0_307: Prop := c.Advice 0 307 = 0
--Annotation: assign index 307
def advice_1_307: Prop := c.Advice 1 307 = 0
--Annotation: assign is_code 307
def advice_2_307: Prop := c.Advice 2 307 = 0
--Annotation: assign value 307
def advice_3_307: Prop := c.Advice 3 307 = 0
--Annotation: assign push_data_left 307
def advice_13_307: Prop := c.Advice 13 307 = 0
--Annotation: assign length 307
def advice_15_307: Prop := c.Advice 15 307 = 0
--Annotation: assign push_data_size 307
def advice_16_307: Prop := c.Advice 16 307 = 0
--Annotation: assign value_rlc 307
def advice_14_307: Prop := c.Advice 14 307 = 0
--Annotation: assign code_hash 307
def advice_4_307: Prop := c.Advice 4 307 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 307
def advice_5_307: Prop := c.Advice 5 307 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_307: Prop := c.Advice 17 307 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_307: Prop := c.Advice 18 307 = 1^(-1)
--Annotation: assign q_enable 308
def fixed_1436: Prop := c.Fixed 0 308 = 1
--Annotation: assign q_first 308
def fixed_1437: Prop := c.Fixed 1 308 = 0
--Annotation: assign q_last 308
def fixed_1438: Prop := c.Fixed 2 308 = 0
--Annotation: assign tag 308
def advice_0_308: Prop := c.Advice 0 308 = 0
--Annotation: assign index 308
def advice_1_308: Prop := c.Advice 1 308 = 0
--Annotation: assign is_code 308
def advice_2_308: Prop := c.Advice 2 308 = 0
--Annotation: assign value 308
def advice_3_308: Prop := c.Advice 3 308 = 0
--Annotation: assign push_data_left 308
def advice_13_308: Prop := c.Advice 13 308 = 0
--Annotation: assign length 308
def advice_15_308: Prop := c.Advice 15 308 = 0
--Annotation: assign push_data_size 308
def advice_16_308: Prop := c.Advice 16 308 = 0
--Annotation: assign value_rlc 308
def advice_14_308: Prop := c.Advice 14 308 = 0
--Annotation: assign code_hash 308
def advice_4_308: Prop := c.Advice 4 308 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 308
def advice_5_308: Prop := c.Advice 5 308 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_308: Prop := c.Advice 17 308 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_308: Prop := c.Advice 18 308 = 1^(-1)
--Annotation: assign q_enable 309
def fixed_1439: Prop := c.Fixed 0 309 = 1
--Annotation: assign q_first 309
def fixed_1440: Prop := c.Fixed 1 309 = 0
--Annotation: assign q_last 309
def fixed_1441: Prop := c.Fixed 2 309 = 0
--Annotation: assign tag 309
def advice_0_309: Prop := c.Advice 0 309 = 0
--Annotation: assign index 309
def advice_1_309: Prop := c.Advice 1 309 = 0
--Annotation: assign is_code 309
def advice_2_309: Prop := c.Advice 2 309 = 0
--Annotation: assign value 309
def advice_3_309: Prop := c.Advice 3 309 = 0
--Annotation: assign push_data_left 309
def advice_13_309: Prop := c.Advice 13 309 = 0
--Annotation: assign length 309
def advice_15_309: Prop := c.Advice 15 309 = 0
--Annotation: assign push_data_size 309
def advice_16_309: Prop := c.Advice 16 309 = 0
--Annotation: assign value_rlc 309
def advice_14_309: Prop := c.Advice 14 309 = 0
--Annotation: assign code_hash 309
def advice_4_309: Prop := c.Advice 4 309 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 309
def advice_5_309: Prop := c.Advice 5 309 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_309: Prop := c.Advice 17 309 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_309: Prop := c.Advice 18 309 = 1^(-1)
--Annotation: assign q_enable 310
def fixed_1442: Prop := c.Fixed 0 310 = 1
--Annotation: assign q_first 310
def fixed_1443: Prop := c.Fixed 1 310 = 0
--Annotation: assign q_last 310
def fixed_1444: Prop := c.Fixed 2 310 = 0
--Annotation: assign tag 310
def advice_0_310: Prop := c.Advice 0 310 = 0
--Annotation: assign index 310
def advice_1_310: Prop := c.Advice 1 310 = 0
--Annotation: assign is_code 310
def advice_2_310: Prop := c.Advice 2 310 = 0
--Annotation: assign value 310
def advice_3_310: Prop := c.Advice 3 310 = 0
--Annotation: assign push_data_left 310
def advice_13_310: Prop := c.Advice 13 310 = 0
--Annotation: assign length 310
def advice_15_310: Prop := c.Advice 15 310 = 0
--Annotation: assign push_data_size 310
def advice_16_310: Prop := c.Advice 16 310 = 0
--Annotation: assign value_rlc 310
def advice_14_310: Prop := c.Advice 14 310 = 0
--Annotation: assign code_hash 310
def advice_4_310: Prop := c.Advice 4 310 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 310
def advice_5_310: Prop := c.Advice 5 310 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_310: Prop := c.Advice 17 310 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_310: Prop := c.Advice 18 310 = 1^(-1)
--Annotation: assign q_enable 311
def fixed_1445: Prop := c.Fixed 0 311 = 1
--Annotation: assign q_first 311
def fixed_1446: Prop := c.Fixed 1 311 = 0
--Annotation: assign q_last 311
def fixed_1447: Prop := c.Fixed 2 311 = 0
--Annotation: assign tag 311
def advice_0_311: Prop := c.Advice 0 311 = 0
--Annotation: assign index 311
def advice_1_311: Prop := c.Advice 1 311 = 0
--Annotation: assign is_code 311
def advice_2_311: Prop := c.Advice 2 311 = 0
--Annotation: assign value 311
def advice_3_311: Prop := c.Advice 3 311 = 0
--Annotation: assign push_data_left 311
def advice_13_311: Prop := c.Advice 13 311 = 0
--Annotation: assign length 311
def advice_15_311: Prop := c.Advice 15 311 = 0
--Annotation: assign push_data_size 311
def advice_16_311: Prop := c.Advice 16 311 = 0
--Annotation: assign value_rlc 311
def advice_14_311: Prop := c.Advice 14 311 = 0
--Annotation: assign code_hash 311
def advice_4_311: Prop := c.Advice 4 311 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 311
def advice_5_311: Prop := c.Advice 5 311 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_311: Prop := c.Advice 17 311 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_311: Prop := c.Advice 18 311 = 1^(-1)
--Annotation: assign q_enable 312
def fixed_1448: Prop := c.Fixed 0 312 = 1
--Annotation: assign q_first 312
def fixed_1449: Prop := c.Fixed 1 312 = 0
--Annotation: assign q_last 312
def fixed_1450: Prop := c.Fixed 2 312 = 0
--Annotation: assign tag 312
def advice_0_312: Prop := c.Advice 0 312 = 0
--Annotation: assign index 312
def advice_1_312: Prop := c.Advice 1 312 = 0
--Annotation: assign is_code 312
def advice_2_312: Prop := c.Advice 2 312 = 0
--Annotation: assign value 312
def advice_3_312: Prop := c.Advice 3 312 = 0
--Annotation: assign push_data_left 312
def advice_13_312: Prop := c.Advice 13 312 = 0
--Annotation: assign length 312
def advice_15_312: Prop := c.Advice 15 312 = 0
--Annotation: assign push_data_size 312
def advice_16_312: Prop := c.Advice 16 312 = 0
--Annotation: assign value_rlc 312
def advice_14_312: Prop := c.Advice 14 312 = 0
--Annotation: assign code_hash 312
def advice_4_312: Prop := c.Advice 4 312 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 312
def advice_5_312: Prop := c.Advice 5 312 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_312: Prop := c.Advice 17 312 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_312: Prop := c.Advice 18 312 = 1^(-1)
--Annotation: assign q_enable 313
def fixed_1451: Prop := c.Fixed 0 313 = 1
--Annotation: assign q_first 313
def fixed_1452: Prop := c.Fixed 1 313 = 0
--Annotation: assign q_last 313
def fixed_1453: Prop := c.Fixed 2 313 = 0
--Annotation: assign tag 313
def advice_0_313: Prop := c.Advice 0 313 = 0
--Annotation: assign index 313
def advice_1_313: Prop := c.Advice 1 313 = 0
--Annotation: assign is_code 313
def advice_2_313: Prop := c.Advice 2 313 = 0
--Annotation: assign value 313
def advice_3_313: Prop := c.Advice 3 313 = 0
--Annotation: assign push_data_left 313
def advice_13_313: Prop := c.Advice 13 313 = 0
--Annotation: assign length 313
def advice_15_313: Prop := c.Advice 15 313 = 0
--Annotation: assign push_data_size 313
def advice_16_313: Prop := c.Advice 16 313 = 0
--Annotation: assign value_rlc 313
def advice_14_313: Prop := c.Advice 14 313 = 0
--Annotation: assign code_hash 313
def advice_4_313: Prop := c.Advice 4 313 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 313
def advice_5_313: Prop := c.Advice 5 313 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_313: Prop := c.Advice 17 313 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_313: Prop := c.Advice 18 313 = 1^(-1)
--Annotation: assign q_enable 314
def fixed_1454: Prop := c.Fixed 0 314 = 1
--Annotation: assign q_first 314
def fixed_1455: Prop := c.Fixed 1 314 = 0
--Annotation: assign q_last 314
def fixed_1456: Prop := c.Fixed 2 314 = 0
--Annotation: assign tag 314
def advice_0_314: Prop := c.Advice 0 314 = 0
--Annotation: assign index 314
def advice_1_314: Prop := c.Advice 1 314 = 0
--Annotation: assign is_code 314
def advice_2_314: Prop := c.Advice 2 314 = 0
--Annotation: assign value 314
def advice_3_314: Prop := c.Advice 3 314 = 0
--Annotation: assign push_data_left 314
def advice_13_314: Prop := c.Advice 13 314 = 0
--Annotation: assign length 314
def advice_15_314: Prop := c.Advice 15 314 = 0
--Annotation: assign push_data_size 314
def advice_16_314: Prop := c.Advice 16 314 = 0
--Annotation: assign value_rlc 314
def advice_14_314: Prop := c.Advice 14 314 = 0
--Annotation: assign code_hash 314
def advice_4_314: Prop := c.Advice 4 314 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 314
def advice_5_314: Prop := c.Advice 5 314 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_314: Prop := c.Advice 17 314 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_314: Prop := c.Advice 18 314 = 1^(-1)
--Annotation: assign q_enable 315
def fixed_1457: Prop := c.Fixed 0 315 = 1
--Annotation: assign q_first 315
def fixed_1458: Prop := c.Fixed 1 315 = 0
--Annotation: assign q_last 315
def fixed_1459: Prop := c.Fixed 2 315 = 0
--Annotation: assign tag 315
def advice_0_315: Prop := c.Advice 0 315 = 0
--Annotation: assign index 315
def advice_1_315: Prop := c.Advice 1 315 = 0
--Annotation: assign is_code 315
def advice_2_315: Prop := c.Advice 2 315 = 0
--Annotation: assign value 315
def advice_3_315: Prop := c.Advice 3 315 = 0
--Annotation: assign push_data_left 315
def advice_13_315: Prop := c.Advice 13 315 = 0
--Annotation: assign length 315
def advice_15_315: Prop := c.Advice 15 315 = 0
--Annotation: assign push_data_size 315
def advice_16_315: Prop := c.Advice 16 315 = 0
--Annotation: assign value_rlc 315
def advice_14_315: Prop := c.Advice 14 315 = 0
--Annotation: assign code_hash 315
def advice_4_315: Prop := c.Advice 4 315 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 315
def advice_5_315: Prop := c.Advice 5 315 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_315: Prop := c.Advice 17 315 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_315: Prop := c.Advice 18 315 = 1^(-1)
--Annotation: assign q_enable 316
def fixed_1460: Prop := c.Fixed 0 316 = 1
--Annotation: assign q_first 316
def fixed_1461: Prop := c.Fixed 1 316 = 0
--Annotation: assign q_last 316
def fixed_1462: Prop := c.Fixed 2 316 = 0
--Annotation: assign tag 316
def advice_0_316: Prop := c.Advice 0 316 = 0
--Annotation: assign index 316
def advice_1_316: Prop := c.Advice 1 316 = 0
--Annotation: assign is_code 316
def advice_2_316: Prop := c.Advice 2 316 = 0
--Annotation: assign value 316
def advice_3_316: Prop := c.Advice 3 316 = 0
--Annotation: assign push_data_left 316
def advice_13_316: Prop := c.Advice 13 316 = 0
--Annotation: assign length 316
def advice_15_316: Prop := c.Advice 15 316 = 0
--Annotation: assign push_data_size 316
def advice_16_316: Prop := c.Advice 16 316 = 0
--Annotation: assign value_rlc 316
def advice_14_316: Prop := c.Advice 14 316 = 0
--Annotation: assign code_hash 316
def advice_4_316: Prop := c.Advice 4 316 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 316
def advice_5_316: Prop := c.Advice 5 316 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_316: Prop := c.Advice 17 316 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_316: Prop := c.Advice 18 316 = 1^(-1)
--Annotation: assign q_enable 317
def fixed_1463: Prop := c.Fixed 0 317 = 1
--Annotation: assign q_first 317
def fixed_1464: Prop := c.Fixed 1 317 = 0
--Annotation: assign q_last 317
def fixed_1465: Prop := c.Fixed 2 317 = 0
--Annotation: assign tag 317
def advice_0_317: Prop := c.Advice 0 317 = 0
--Annotation: assign index 317
def advice_1_317: Prop := c.Advice 1 317 = 0
--Annotation: assign is_code 317
def advice_2_317: Prop := c.Advice 2 317 = 0
--Annotation: assign value 317
def advice_3_317: Prop := c.Advice 3 317 = 0
--Annotation: assign push_data_left 317
def advice_13_317: Prop := c.Advice 13 317 = 0
--Annotation: assign length 317
def advice_15_317: Prop := c.Advice 15 317 = 0
--Annotation: assign push_data_size 317
def advice_16_317: Prop := c.Advice 16 317 = 0
--Annotation: assign value_rlc 317
def advice_14_317: Prop := c.Advice 14 317 = 0
--Annotation: assign code_hash 317
def advice_4_317: Prop := c.Advice 4 317 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 317
def advice_5_317: Prop := c.Advice 5 317 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_317: Prop := c.Advice 17 317 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_317: Prop := c.Advice 18 317 = 1^(-1)
--Annotation: assign q_enable 318
def fixed_1466: Prop := c.Fixed 0 318 = 1
--Annotation: assign q_first 318
def fixed_1467: Prop := c.Fixed 1 318 = 0
--Annotation: assign q_last 318
def fixed_1468: Prop := c.Fixed 2 318 = 0
--Annotation: assign tag 318
def advice_0_318: Prop := c.Advice 0 318 = 0
--Annotation: assign index 318
def advice_1_318: Prop := c.Advice 1 318 = 0
--Annotation: assign is_code 318
def advice_2_318: Prop := c.Advice 2 318 = 0
--Annotation: assign value 318
def advice_3_318: Prop := c.Advice 3 318 = 0
--Annotation: assign push_data_left 318
def advice_13_318: Prop := c.Advice 13 318 = 0
--Annotation: assign length 318
def advice_15_318: Prop := c.Advice 15 318 = 0
--Annotation: assign push_data_size 318
def advice_16_318: Prop := c.Advice 16 318 = 0
--Annotation: assign value_rlc 318
def advice_14_318: Prop := c.Advice 14 318 = 0
--Annotation: assign code_hash 318
def advice_4_318: Prop := c.Advice 4 318 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 318
def advice_5_318: Prop := c.Advice 5 318 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_318: Prop := c.Advice 17 318 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_318: Prop := c.Advice 18 318 = 1^(-1)
--Annotation: assign q_enable 319
def fixed_1469: Prop := c.Fixed 0 319 = 1
--Annotation: assign q_first 319
def fixed_1470: Prop := c.Fixed 1 319 = 0
--Annotation: assign q_last 319
def fixed_1471: Prop := c.Fixed 2 319 = 0
--Annotation: assign tag 319
def advice_0_319: Prop := c.Advice 0 319 = 0
--Annotation: assign index 319
def advice_1_319: Prop := c.Advice 1 319 = 0
--Annotation: assign is_code 319
def advice_2_319: Prop := c.Advice 2 319 = 0
--Annotation: assign value 319
def advice_3_319: Prop := c.Advice 3 319 = 0
--Annotation: assign push_data_left 319
def advice_13_319: Prop := c.Advice 13 319 = 0
--Annotation: assign length 319
def advice_15_319: Prop := c.Advice 15 319 = 0
--Annotation: assign push_data_size 319
def advice_16_319: Prop := c.Advice 16 319 = 0
--Annotation: assign value_rlc 319
def advice_14_319: Prop := c.Advice 14 319 = 0
--Annotation: assign code_hash 319
def advice_4_319: Prop := c.Advice 4 319 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 319
def advice_5_319: Prop := c.Advice 5 319 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_319: Prop := c.Advice 17 319 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_319: Prop := c.Advice 18 319 = 1^(-1)
--Annotation: assign q_enable 320
def fixed_1472: Prop := c.Fixed 0 320 = 1
--Annotation: assign q_first 320
def fixed_1473: Prop := c.Fixed 1 320 = 0
--Annotation: assign q_last 320
def fixed_1474: Prop := c.Fixed 2 320 = 0
--Annotation: assign tag 320
def advice_0_320: Prop := c.Advice 0 320 = 0
--Annotation: assign index 320
def advice_1_320: Prop := c.Advice 1 320 = 0
--Annotation: assign is_code 320
def advice_2_320: Prop := c.Advice 2 320 = 0
--Annotation: assign value 320
def advice_3_320: Prop := c.Advice 3 320 = 0
--Annotation: assign push_data_left 320
def advice_13_320: Prop := c.Advice 13 320 = 0
--Annotation: assign length 320
def advice_15_320: Prop := c.Advice 15 320 = 0
--Annotation: assign push_data_size 320
def advice_16_320: Prop := c.Advice 16 320 = 0
--Annotation: assign value_rlc 320
def advice_14_320: Prop := c.Advice 14 320 = 0
--Annotation: assign code_hash 320
def advice_4_320: Prop := c.Advice 4 320 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 320
def advice_5_320: Prop := c.Advice 5 320 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_320: Prop := c.Advice 17 320 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_320: Prop := c.Advice 18 320 = 1^(-1)
--Annotation: assign q_enable 321
def fixed_1475: Prop := c.Fixed 0 321 = 1
--Annotation: assign q_first 321
def fixed_1476: Prop := c.Fixed 1 321 = 0
--Annotation: assign q_last 321
def fixed_1477: Prop := c.Fixed 2 321 = 0
--Annotation: assign tag 321
def advice_0_321: Prop := c.Advice 0 321 = 0
--Annotation: assign index 321
def advice_1_321: Prop := c.Advice 1 321 = 0
--Annotation: assign is_code 321
def advice_2_321: Prop := c.Advice 2 321 = 0
--Annotation: assign value 321
def advice_3_321: Prop := c.Advice 3 321 = 0
--Annotation: assign push_data_left 321
def advice_13_321: Prop := c.Advice 13 321 = 0
--Annotation: assign length 321
def advice_15_321: Prop := c.Advice 15 321 = 0
--Annotation: assign push_data_size 321
def advice_16_321: Prop := c.Advice 16 321 = 0
--Annotation: assign value_rlc 321
def advice_14_321: Prop := c.Advice 14 321 = 0
--Annotation: assign code_hash 321
def advice_4_321: Prop := c.Advice 4 321 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 321
def advice_5_321: Prop := c.Advice 5 321 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_321: Prop := c.Advice 17 321 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_321: Prop := c.Advice 18 321 = 1^(-1)
--Annotation: assign q_enable 322
def fixed_1478: Prop := c.Fixed 0 322 = 1
--Annotation: assign q_first 322
def fixed_1479: Prop := c.Fixed 1 322 = 0
--Annotation: assign q_last 322
def fixed_1480: Prop := c.Fixed 2 322 = 0
--Annotation: assign tag 322
def advice_0_322: Prop := c.Advice 0 322 = 0
--Annotation: assign index 322
def advice_1_322: Prop := c.Advice 1 322 = 0
--Annotation: assign is_code 322
def advice_2_322: Prop := c.Advice 2 322 = 0
--Annotation: assign value 322
def advice_3_322: Prop := c.Advice 3 322 = 0
--Annotation: assign push_data_left 322
def advice_13_322: Prop := c.Advice 13 322 = 0
--Annotation: assign length 322
def advice_15_322: Prop := c.Advice 15 322 = 0
--Annotation: assign push_data_size 322
def advice_16_322: Prop := c.Advice 16 322 = 0
--Annotation: assign value_rlc 322
def advice_14_322: Prop := c.Advice 14 322 = 0
--Annotation: assign code_hash 322
def advice_4_322: Prop := c.Advice 4 322 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 322
def advice_5_322: Prop := c.Advice 5 322 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_322: Prop := c.Advice 17 322 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_322: Prop := c.Advice 18 322 = 1^(-1)
--Annotation: assign q_enable 323
def fixed_1481: Prop := c.Fixed 0 323 = 1
--Annotation: assign q_first 323
def fixed_1482: Prop := c.Fixed 1 323 = 0
--Annotation: assign q_last 323
def fixed_1483: Prop := c.Fixed 2 323 = 0
--Annotation: assign tag 323
def advice_0_323: Prop := c.Advice 0 323 = 0
--Annotation: assign index 323
def advice_1_323: Prop := c.Advice 1 323 = 0
--Annotation: assign is_code 323
def advice_2_323: Prop := c.Advice 2 323 = 0
--Annotation: assign value 323
def advice_3_323: Prop := c.Advice 3 323 = 0
--Annotation: assign push_data_left 323
def advice_13_323: Prop := c.Advice 13 323 = 0
--Annotation: assign length 323
def advice_15_323: Prop := c.Advice 15 323 = 0
--Annotation: assign push_data_size 323
def advice_16_323: Prop := c.Advice 16 323 = 0
--Annotation: assign value_rlc 323
def advice_14_323: Prop := c.Advice 14 323 = 0
--Annotation: assign code_hash 323
def advice_4_323: Prop := c.Advice 4 323 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 323
def advice_5_323: Prop := c.Advice 5 323 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_323: Prop := c.Advice 17 323 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_323: Prop := c.Advice 18 323 = 1^(-1)
--Annotation: assign q_enable 324
def fixed_1484: Prop := c.Fixed 0 324 = 1
--Annotation: assign q_first 324
def fixed_1485: Prop := c.Fixed 1 324 = 0
--Annotation: assign q_last 324
def fixed_1486: Prop := c.Fixed 2 324 = 0
--Annotation: assign tag 324
def advice_0_324: Prop := c.Advice 0 324 = 0
--Annotation: assign index 324
def advice_1_324: Prop := c.Advice 1 324 = 0
--Annotation: assign is_code 324
def advice_2_324: Prop := c.Advice 2 324 = 0
--Annotation: assign value 324
def advice_3_324: Prop := c.Advice 3 324 = 0
--Annotation: assign push_data_left 324
def advice_13_324: Prop := c.Advice 13 324 = 0
--Annotation: assign length 324
def advice_15_324: Prop := c.Advice 15 324 = 0
--Annotation: assign push_data_size 324
def advice_16_324: Prop := c.Advice 16 324 = 0
--Annotation: assign value_rlc 324
def advice_14_324: Prop := c.Advice 14 324 = 0
--Annotation: assign code_hash 324
def advice_4_324: Prop := c.Advice 4 324 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 324
def advice_5_324: Prop := c.Advice 5 324 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_324: Prop := c.Advice 17 324 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_324: Prop := c.Advice 18 324 = 1^(-1)
--Annotation: assign q_enable 325
def fixed_1487: Prop := c.Fixed 0 325 = 1
--Annotation: assign q_first 325
def fixed_1488: Prop := c.Fixed 1 325 = 0
--Annotation: assign q_last 325
def fixed_1489: Prop := c.Fixed 2 325 = 0
--Annotation: assign tag 325
def advice_0_325: Prop := c.Advice 0 325 = 0
--Annotation: assign index 325
def advice_1_325: Prop := c.Advice 1 325 = 0
--Annotation: assign is_code 325
def advice_2_325: Prop := c.Advice 2 325 = 0
--Annotation: assign value 325
def advice_3_325: Prop := c.Advice 3 325 = 0
--Annotation: assign push_data_left 325
def advice_13_325: Prop := c.Advice 13 325 = 0
--Annotation: assign length 325
def advice_15_325: Prop := c.Advice 15 325 = 0
--Annotation: assign push_data_size 325
def advice_16_325: Prop := c.Advice 16 325 = 0
--Annotation: assign value_rlc 325
def advice_14_325: Prop := c.Advice 14 325 = 0
--Annotation: assign code_hash 325
def advice_4_325: Prop := c.Advice 4 325 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 325
def advice_5_325: Prop := c.Advice 5 325 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_325: Prop := c.Advice 17 325 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_325: Prop := c.Advice 18 325 = 1^(-1)
--Annotation: assign q_enable 326
def fixed_1490: Prop := c.Fixed 0 326 = 1
--Annotation: assign q_first 326
def fixed_1491: Prop := c.Fixed 1 326 = 0
--Annotation: assign q_last 326
def fixed_1492: Prop := c.Fixed 2 326 = 0
--Annotation: assign tag 326
def advice_0_326: Prop := c.Advice 0 326 = 0
--Annotation: assign index 326
def advice_1_326: Prop := c.Advice 1 326 = 0
--Annotation: assign is_code 326
def advice_2_326: Prop := c.Advice 2 326 = 0
--Annotation: assign value 326
def advice_3_326: Prop := c.Advice 3 326 = 0
--Annotation: assign push_data_left 326
def advice_13_326: Prop := c.Advice 13 326 = 0
--Annotation: assign length 326
def advice_15_326: Prop := c.Advice 15 326 = 0
--Annotation: assign push_data_size 326
def advice_16_326: Prop := c.Advice 16 326 = 0
--Annotation: assign value_rlc 326
def advice_14_326: Prop := c.Advice 14 326 = 0
--Annotation: assign code_hash 326
def advice_4_326: Prop := c.Advice 4 326 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 326
def advice_5_326: Prop := c.Advice 5 326 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_326: Prop := c.Advice 17 326 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_326: Prop := c.Advice 18 326 = 1^(-1)
--Annotation: assign q_enable 327
def fixed_1493: Prop := c.Fixed 0 327 = 1
--Annotation: assign q_first 327
def fixed_1494: Prop := c.Fixed 1 327 = 0
--Annotation: assign q_last 327
def fixed_1495: Prop := c.Fixed 2 327 = 0
--Annotation: assign tag 327
def advice_0_327: Prop := c.Advice 0 327 = 0
--Annotation: assign index 327
def advice_1_327: Prop := c.Advice 1 327 = 0
--Annotation: assign is_code 327
def advice_2_327: Prop := c.Advice 2 327 = 0
--Annotation: assign value 327
def advice_3_327: Prop := c.Advice 3 327 = 0
--Annotation: assign push_data_left 327
def advice_13_327: Prop := c.Advice 13 327 = 0
--Annotation: assign length 327
def advice_15_327: Prop := c.Advice 15 327 = 0
--Annotation: assign push_data_size 327
def advice_16_327: Prop := c.Advice 16 327 = 0
--Annotation: assign value_rlc 327
def advice_14_327: Prop := c.Advice 14 327 = 0
--Annotation: assign code_hash 327
def advice_4_327: Prop := c.Advice 4 327 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 327
def advice_5_327: Prop := c.Advice 5 327 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_327: Prop := c.Advice 17 327 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_327: Prop := c.Advice 18 327 = 1^(-1)
--Annotation: assign q_enable 328
def fixed_1496: Prop := c.Fixed 0 328 = 1
--Annotation: assign q_first 328
def fixed_1497: Prop := c.Fixed 1 328 = 0
--Annotation: assign q_last 328
def fixed_1498: Prop := c.Fixed 2 328 = 0
--Annotation: assign tag 328
def advice_0_328: Prop := c.Advice 0 328 = 0
--Annotation: assign index 328
def advice_1_328: Prop := c.Advice 1 328 = 0
--Annotation: assign is_code 328
def advice_2_328: Prop := c.Advice 2 328 = 0
--Annotation: assign value 328
def advice_3_328: Prop := c.Advice 3 328 = 0
--Annotation: assign push_data_left 328
def advice_13_328: Prop := c.Advice 13 328 = 0
--Annotation: assign length 328
def advice_15_328: Prop := c.Advice 15 328 = 0
--Annotation: assign push_data_size 328
def advice_16_328: Prop := c.Advice 16 328 = 0
--Annotation: assign value_rlc 328
def advice_14_328: Prop := c.Advice 14 328 = 0
--Annotation: assign code_hash 328
def advice_4_328: Prop := c.Advice 4 328 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 328
def advice_5_328: Prop := c.Advice 5 328 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_328: Prop := c.Advice 17 328 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_328: Prop := c.Advice 18 328 = 1^(-1)
--Annotation: assign q_enable 329
def fixed_1499: Prop := c.Fixed 0 329 = 1
--Annotation: assign q_first 329
def fixed_1500: Prop := c.Fixed 1 329 = 0
--Annotation: assign q_last 329
def fixed_1501: Prop := c.Fixed 2 329 = 0
--Annotation: assign tag 329
def advice_0_329: Prop := c.Advice 0 329 = 0
--Annotation: assign index 329
def advice_1_329: Prop := c.Advice 1 329 = 0
--Annotation: assign is_code 329
def advice_2_329: Prop := c.Advice 2 329 = 0
--Annotation: assign value 329
def advice_3_329: Prop := c.Advice 3 329 = 0
--Annotation: assign push_data_left 329
def advice_13_329: Prop := c.Advice 13 329 = 0
--Annotation: assign length 329
def advice_15_329: Prop := c.Advice 15 329 = 0
--Annotation: assign push_data_size 329
def advice_16_329: Prop := c.Advice 16 329 = 0
--Annotation: assign value_rlc 329
def advice_14_329: Prop := c.Advice 14 329 = 0
--Annotation: assign code_hash 329
def advice_4_329: Prop := c.Advice 4 329 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 329
def advice_5_329: Prop := c.Advice 5 329 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_329: Prop := c.Advice 17 329 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_329: Prop := c.Advice 18 329 = 1^(-1)
--Annotation: assign q_enable 330
def fixed_1502: Prop := c.Fixed 0 330 = 1
--Annotation: assign q_first 330
def fixed_1503: Prop := c.Fixed 1 330 = 0
--Annotation: assign q_last 330
def fixed_1504: Prop := c.Fixed 2 330 = 0
--Annotation: assign tag 330
def advice_0_330: Prop := c.Advice 0 330 = 0
--Annotation: assign index 330
def advice_1_330: Prop := c.Advice 1 330 = 0
--Annotation: assign is_code 330
def advice_2_330: Prop := c.Advice 2 330 = 0
--Annotation: assign value 330
def advice_3_330: Prop := c.Advice 3 330 = 0
--Annotation: assign push_data_left 330
def advice_13_330: Prop := c.Advice 13 330 = 0
--Annotation: assign length 330
def advice_15_330: Prop := c.Advice 15 330 = 0
--Annotation: assign push_data_size 330
def advice_16_330: Prop := c.Advice 16 330 = 0
--Annotation: assign value_rlc 330
def advice_14_330: Prop := c.Advice 14 330 = 0
--Annotation: assign code_hash 330
def advice_4_330: Prop := c.Advice 4 330 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 330
def advice_5_330: Prop := c.Advice 5 330 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_330: Prop := c.Advice 17 330 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_330: Prop := c.Advice 18 330 = 1^(-1)
--Annotation: assign q_enable 331
def fixed_1505: Prop := c.Fixed 0 331 = 1
--Annotation: assign q_first 331
def fixed_1506: Prop := c.Fixed 1 331 = 0
--Annotation: assign q_last 331
def fixed_1507: Prop := c.Fixed 2 331 = 0
--Annotation: assign tag 331
def advice_0_331: Prop := c.Advice 0 331 = 0
--Annotation: assign index 331
def advice_1_331: Prop := c.Advice 1 331 = 0
--Annotation: assign is_code 331
def advice_2_331: Prop := c.Advice 2 331 = 0
--Annotation: assign value 331
def advice_3_331: Prop := c.Advice 3 331 = 0
--Annotation: assign push_data_left 331
def advice_13_331: Prop := c.Advice 13 331 = 0
--Annotation: assign length 331
def advice_15_331: Prop := c.Advice 15 331 = 0
--Annotation: assign push_data_size 331
def advice_16_331: Prop := c.Advice 16 331 = 0
--Annotation: assign value_rlc 331
def advice_14_331: Prop := c.Advice 14 331 = 0
--Annotation: assign code_hash 331
def advice_4_331: Prop := c.Advice 4 331 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 331
def advice_5_331: Prop := c.Advice 5 331 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_331: Prop := c.Advice 17 331 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_331: Prop := c.Advice 18 331 = 1^(-1)
--Annotation: assign q_enable 332
def fixed_1508: Prop := c.Fixed 0 332 = 1
--Annotation: assign q_first 332
def fixed_1509: Prop := c.Fixed 1 332 = 0
--Annotation: assign q_last 332
def fixed_1510: Prop := c.Fixed 2 332 = 0
--Annotation: assign tag 332
def advice_0_332: Prop := c.Advice 0 332 = 0
--Annotation: assign index 332
def advice_1_332: Prop := c.Advice 1 332 = 0
--Annotation: assign is_code 332
def advice_2_332: Prop := c.Advice 2 332 = 0
--Annotation: assign value 332
def advice_3_332: Prop := c.Advice 3 332 = 0
--Annotation: assign push_data_left 332
def advice_13_332: Prop := c.Advice 13 332 = 0
--Annotation: assign length 332
def advice_15_332: Prop := c.Advice 15 332 = 0
--Annotation: assign push_data_size 332
def advice_16_332: Prop := c.Advice 16 332 = 0
--Annotation: assign value_rlc 332
def advice_14_332: Prop := c.Advice 14 332 = 0
--Annotation: assign code_hash 332
def advice_4_332: Prop := c.Advice 4 332 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 332
def advice_5_332: Prop := c.Advice 5 332 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_332: Prop := c.Advice 17 332 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_332: Prop := c.Advice 18 332 = 1^(-1)
--Annotation: assign q_enable 333
def fixed_1511: Prop := c.Fixed 0 333 = 1
--Annotation: assign q_first 333
def fixed_1512: Prop := c.Fixed 1 333 = 0
--Annotation: assign q_last 333
def fixed_1513: Prop := c.Fixed 2 333 = 0
--Annotation: assign tag 333
def advice_0_333: Prop := c.Advice 0 333 = 0
--Annotation: assign index 333
def advice_1_333: Prop := c.Advice 1 333 = 0
--Annotation: assign is_code 333
def advice_2_333: Prop := c.Advice 2 333 = 0
--Annotation: assign value 333
def advice_3_333: Prop := c.Advice 3 333 = 0
--Annotation: assign push_data_left 333
def advice_13_333: Prop := c.Advice 13 333 = 0
--Annotation: assign length 333
def advice_15_333: Prop := c.Advice 15 333 = 0
--Annotation: assign push_data_size 333
def advice_16_333: Prop := c.Advice 16 333 = 0
--Annotation: assign value_rlc 333
def advice_14_333: Prop := c.Advice 14 333 = 0
--Annotation: assign code_hash 333
def advice_4_333: Prop := c.Advice 4 333 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 333
def advice_5_333: Prop := c.Advice 5 333 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_333: Prop := c.Advice 17 333 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_333: Prop := c.Advice 18 333 = 1^(-1)
--Annotation: assign q_enable 334
def fixed_1514: Prop := c.Fixed 0 334 = 1
--Annotation: assign q_first 334
def fixed_1515: Prop := c.Fixed 1 334 = 0
--Annotation: assign q_last 334
def fixed_1516: Prop := c.Fixed 2 334 = 0
--Annotation: assign tag 334
def advice_0_334: Prop := c.Advice 0 334 = 0
--Annotation: assign index 334
def advice_1_334: Prop := c.Advice 1 334 = 0
--Annotation: assign is_code 334
def advice_2_334: Prop := c.Advice 2 334 = 0
--Annotation: assign value 334
def advice_3_334: Prop := c.Advice 3 334 = 0
--Annotation: assign push_data_left 334
def advice_13_334: Prop := c.Advice 13 334 = 0
--Annotation: assign length 334
def advice_15_334: Prop := c.Advice 15 334 = 0
--Annotation: assign push_data_size 334
def advice_16_334: Prop := c.Advice 16 334 = 0
--Annotation: assign value_rlc 334
def advice_14_334: Prop := c.Advice 14 334 = 0
--Annotation: assign code_hash 334
def advice_4_334: Prop := c.Advice 4 334 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 334
def advice_5_334: Prop := c.Advice 5 334 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_334: Prop := c.Advice 17 334 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_334: Prop := c.Advice 18 334 = 1^(-1)
--Annotation: assign q_enable 335
def fixed_1517: Prop := c.Fixed 0 335 = 1
--Annotation: assign q_first 335
def fixed_1518: Prop := c.Fixed 1 335 = 0
--Annotation: assign q_last 335
def fixed_1519: Prop := c.Fixed 2 335 = 0
--Annotation: assign tag 335
def advice_0_335: Prop := c.Advice 0 335 = 0
--Annotation: assign index 335
def advice_1_335: Prop := c.Advice 1 335 = 0
--Annotation: assign is_code 335
def advice_2_335: Prop := c.Advice 2 335 = 0
--Annotation: assign value 335
def advice_3_335: Prop := c.Advice 3 335 = 0
--Annotation: assign push_data_left 335
def advice_13_335: Prop := c.Advice 13 335 = 0
--Annotation: assign length 335
def advice_15_335: Prop := c.Advice 15 335 = 0
--Annotation: assign push_data_size 335
def advice_16_335: Prop := c.Advice 16 335 = 0
--Annotation: assign value_rlc 335
def advice_14_335: Prop := c.Advice 14 335 = 0
--Annotation: assign code_hash 335
def advice_4_335: Prop := c.Advice 4 335 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 335
def advice_5_335: Prop := c.Advice 5 335 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_335: Prop := c.Advice 17 335 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_335: Prop := c.Advice 18 335 = 1^(-1)
--Annotation: assign q_enable 336
def fixed_1520: Prop := c.Fixed 0 336 = 1
--Annotation: assign q_first 336
def fixed_1521: Prop := c.Fixed 1 336 = 0
--Annotation: assign q_last 336
def fixed_1522: Prop := c.Fixed 2 336 = 0
--Annotation: assign tag 336
def advice_0_336: Prop := c.Advice 0 336 = 0
--Annotation: assign index 336
def advice_1_336: Prop := c.Advice 1 336 = 0
--Annotation: assign is_code 336
def advice_2_336: Prop := c.Advice 2 336 = 0
--Annotation: assign value 336
def advice_3_336: Prop := c.Advice 3 336 = 0
--Annotation: assign push_data_left 336
def advice_13_336: Prop := c.Advice 13 336 = 0
--Annotation: assign length 336
def advice_15_336: Prop := c.Advice 15 336 = 0
--Annotation: assign push_data_size 336
def advice_16_336: Prop := c.Advice 16 336 = 0
--Annotation: assign value_rlc 336
def advice_14_336: Prop := c.Advice 14 336 = 0
--Annotation: assign code_hash 336
def advice_4_336: Prop := c.Advice 4 336 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 336
def advice_5_336: Prop := c.Advice 5 336 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_336: Prop := c.Advice 17 336 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_336: Prop := c.Advice 18 336 = 1^(-1)
--Annotation: assign q_enable 337
def fixed_1523: Prop := c.Fixed 0 337 = 1
--Annotation: assign q_first 337
def fixed_1524: Prop := c.Fixed 1 337 = 0
--Annotation: assign q_last 337
def fixed_1525: Prop := c.Fixed 2 337 = 0
--Annotation: assign tag 337
def advice_0_337: Prop := c.Advice 0 337 = 0
--Annotation: assign index 337
def advice_1_337: Prop := c.Advice 1 337 = 0
--Annotation: assign is_code 337
def advice_2_337: Prop := c.Advice 2 337 = 0
--Annotation: assign value 337
def advice_3_337: Prop := c.Advice 3 337 = 0
--Annotation: assign push_data_left 337
def advice_13_337: Prop := c.Advice 13 337 = 0
--Annotation: assign length 337
def advice_15_337: Prop := c.Advice 15 337 = 0
--Annotation: assign push_data_size 337
def advice_16_337: Prop := c.Advice 16 337 = 0
--Annotation: assign value_rlc 337
def advice_14_337: Prop := c.Advice 14 337 = 0
--Annotation: assign code_hash 337
def advice_4_337: Prop := c.Advice 4 337 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 337
def advice_5_337: Prop := c.Advice 5 337 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_337: Prop := c.Advice 17 337 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_337: Prop := c.Advice 18 337 = 1^(-1)
--Annotation: assign q_enable 338
def fixed_1526: Prop := c.Fixed 0 338 = 1
--Annotation: assign q_first 338
def fixed_1527: Prop := c.Fixed 1 338 = 0
--Annotation: assign q_last 338
def fixed_1528: Prop := c.Fixed 2 338 = 0
--Annotation: assign tag 338
def advice_0_338: Prop := c.Advice 0 338 = 0
--Annotation: assign index 338
def advice_1_338: Prop := c.Advice 1 338 = 0
--Annotation: assign is_code 338
def advice_2_338: Prop := c.Advice 2 338 = 0
--Annotation: assign value 338
def advice_3_338: Prop := c.Advice 3 338 = 0
--Annotation: assign push_data_left 338
def advice_13_338: Prop := c.Advice 13 338 = 0
--Annotation: assign length 338
def advice_15_338: Prop := c.Advice 15 338 = 0
--Annotation: assign push_data_size 338
def advice_16_338: Prop := c.Advice 16 338 = 0
--Annotation: assign value_rlc 338
def advice_14_338: Prop := c.Advice 14 338 = 0
--Annotation: assign code_hash 338
def advice_4_338: Prop := c.Advice 4 338 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 338
def advice_5_338: Prop := c.Advice 5 338 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_338: Prop := c.Advice 17 338 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_338: Prop := c.Advice 18 338 = 1^(-1)
--Annotation: assign q_enable 339
def fixed_1529: Prop := c.Fixed 0 339 = 1
--Annotation: assign q_first 339
def fixed_1530: Prop := c.Fixed 1 339 = 0
--Annotation: assign q_last 339
def fixed_1531: Prop := c.Fixed 2 339 = 0
--Annotation: assign tag 339
def advice_0_339: Prop := c.Advice 0 339 = 0
--Annotation: assign index 339
def advice_1_339: Prop := c.Advice 1 339 = 0
--Annotation: assign is_code 339
def advice_2_339: Prop := c.Advice 2 339 = 0
--Annotation: assign value 339
def advice_3_339: Prop := c.Advice 3 339 = 0
--Annotation: assign push_data_left 339
def advice_13_339: Prop := c.Advice 13 339 = 0
--Annotation: assign length 339
def advice_15_339: Prop := c.Advice 15 339 = 0
--Annotation: assign push_data_size 339
def advice_16_339: Prop := c.Advice 16 339 = 0
--Annotation: assign value_rlc 339
def advice_14_339: Prop := c.Advice 14 339 = 0
--Annotation: assign code_hash 339
def advice_4_339: Prop := c.Advice 4 339 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 339
def advice_5_339: Prop := c.Advice 5 339 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_339: Prop := c.Advice 17 339 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_339: Prop := c.Advice 18 339 = 1^(-1)
--Annotation: assign q_enable 340
def fixed_1532: Prop := c.Fixed 0 340 = 1
--Annotation: assign q_first 340
def fixed_1533: Prop := c.Fixed 1 340 = 0
--Annotation: assign q_last 340
def fixed_1534: Prop := c.Fixed 2 340 = 0
--Annotation: assign tag 340
def advice_0_340: Prop := c.Advice 0 340 = 0
--Annotation: assign index 340
def advice_1_340: Prop := c.Advice 1 340 = 0
--Annotation: assign is_code 340
def advice_2_340: Prop := c.Advice 2 340 = 0
--Annotation: assign value 340
def advice_3_340: Prop := c.Advice 3 340 = 0
--Annotation: assign push_data_left 340
def advice_13_340: Prop := c.Advice 13 340 = 0
--Annotation: assign length 340
def advice_15_340: Prop := c.Advice 15 340 = 0
--Annotation: assign push_data_size 340
def advice_16_340: Prop := c.Advice 16 340 = 0
--Annotation: assign value_rlc 340
def advice_14_340: Prop := c.Advice 14 340 = 0
--Annotation: assign code_hash 340
def advice_4_340: Prop := c.Advice 4 340 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 340
def advice_5_340: Prop := c.Advice 5 340 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_340: Prop := c.Advice 17 340 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_340: Prop := c.Advice 18 340 = 1^(-1)
--Annotation: assign q_enable 341
def fixed_1535: Prop := c.Fixed 0 341 = 1
--Annotation: assign q_first 341
def fixed_1536: Prop := c.Fixed 1 341 = 0
--Annotation: assign q_last 341
def fixed_1537: Prop := c.Fixed 2 341 = 0
--Annotation: assign tag 341
def advice_0_341: Prop := c.Advice 0 341 = 0
--Annotation: assign index 341
def advice_1_341: Prop := c.Advice 1 341 = 0
--Annotation: assign is_code 341
def advice_2_341: Prop := c.Advice 2 341 = 0
--Annotation: assign value 341
def advice_3_341: Prop := c.Advice 3 341 = 0
--Annotation: assign push_data_left 341
def advice_13_341: Prop := c.Advice 13 341 = 0
--Annotation: assign length 341
def advice_15_341: Prop := c.Advice 15 341 = 0
--Annotation: assign push_data_size 341
def advice_16_341: Prop := c.Advice 16 341 = 0
--Annotation: assign value_rlc 341
def advice_14_341: Prop := c.Advice 14 341 = 0
--Annotation: assign code_hash 341
def advice_4_341: Prop := c.Advice 4 341 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 341
def advice_5_341: Prop := c.Advice 5 341 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_341: Prop := c.Advice 17 341 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_341: Prop := c.Advice 18 341 = 1^(-1)
--Annotation: assign q_enable 342
def fixed_1538: Prop := c.Fixed 0 342 = 1
--Annotation: assign q_first 342
def fixed_1539: Prop := c.Fixed 1 342 = 0
--Annotation: assign q_last 342
def fixed_1540: Prop := c.Fixed 2 342 = 0
--Annotation: assign tag 342
def advice_0_342: Prop := c.Advice 0 342 = 0
--Annotation: assign index 342
def advice_1_342: Prop := c.Advice 1 342 = 0
--Annotation: assign is_code 342
def advice_2_342: Prop := c.Advice 2 342 = 0
--Annotation: assign value 342
def advice_3_342: Prop := c.Advice 3 342 = 0
--Annotation: assign push_data_left 342
def advice_13_342: Prop := c.Advice 13 342 = 0
--Annotation: assign length 342
def advice_15_342: Prop := c.Advice 15 342 = 0
--Annotation: assign push_data_size 342
def advice_16_342: Prop := c.Advice 16 342 = 0
--Annotation: assign value_rlc 342
def advice_14_342: Prop := c.Advice 14 342 = 0
--Annotation: assign code_hash 342
def advice_4_342: Prop := c.Advice 4 342 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 342
def advice_5_342: Prop := c.Advice 5 342 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_342: Prop := c.Advice 17 342 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_342: Prop := c.Advice 18 342 = 1^(-1)
--Annotation: assign q_enable 343
def fixed_1541: Prop := c.Fixed 0 343 = 1
--Annotation: assign q_first 343
def fixed_1542: Prop := c.Fixed 1 343 = 0
--Annotation: assign q_last 343
def fixed_1543: Prop := c.Fixed 2 343 = 0
--Annotation: assign tag 343
def advice_0_343: Prop := c.Advice 0 343 = 0
--Annotation: assign index 343
def advice_1_343: Prop := c.Advice 1 343 = 0
--Annotation: assign is_code 343
def advice_2_343: Prop := c.Advice 2 343 = 0
--Annotation: assign value 343
def advice_3_343: Prop := c.Advice 3 343 = 0
--Annotation: assign push_data_left 343
def advice_13_343: Prop := c.Advice 13 343 = 0
--Annotation: assign length 343
def advice_15_343: Prop := c.Advice 15 343 = 0
--Annotation: assign push_data_size 343
def advice_16_343: Prop := c.Advice 16 343 = 0
--Annotation: assign value_rlc 343
def advice_14_343: Prop := c.Advice 14 343 = 0
--Annotation: assign code_hash 343
def advice_4_343: Prop := c.Advice 4 343 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 343
def advice_5_343: Prop := c.Advice 5 343 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_343: Prop := c.Advice 17 343 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_343: Prop := c.Advice 18 343 = 1^(-1)
--Annotation: assign q_enable 344
def fixed_1544: Prop := c.Fixed 0 344 = 1
--Annotation: assign q_first 344
def fixed_1545: Prop := c.Fixed 1 344 = 0
--Annotation: assign q_last 344
def fixed_1546: Prop := c.Fixed 2 344 = 0
--Annotation: assign tag 344
def advice_0_344: Prop := c.Advice 0 344 = 0
--Annotation: assign index 344
def advice_1_344: Prop := c.Advice 1 344 = 0
--Annotation: assign is_code 344
def advice_2_344: Prop := c.Advice 2 344 = 0
--Annotation: assign value 344
def advice_3_344: Prop := c.Advice 3 344 = 0
--Annotation: assign push_data_left 344
def advice_13_344: Prop := c.Advice 13 344 = 0
--Annotation: assign length 344
def advice_15_344: Prop := c.Advice 15 344 = 0
--Annotation: assign push_data_size 344
def advice_16_344: Prop := c.Advice 16 344 = 0
--Annotation: assign value_rlc 344
def advice_14_344: Prop := c.Advice 14 344 = 0
--Annotation: assign code_hash 344
def advice_4_344: Prop := c.Advice 4 344 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 344
def advice_5_344: Prop := c.Advice 5 344 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_344: Prop := c.Advice 17 344 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_344: Prop := c.Advice 18 344 = 1^(-1)
--Annotation: assign q_enable 345
def fixed_1547: Prop := c.Fixed 0 345 = 1
--Annotation: assign q_first 345
def fixed_1548: Prop := c.Fixed 1 345 = 0
--Annotation: assign q_last 345
def fixed_1549: Prop := c.Fixed 2 345 = 0
--Annotation: assign tag 345
def advice_0_345: Prop := c.Advice 0 345 = 0
--Annotation: assign index 345
def advice_1_345: Prop := c.Advice 1 345 = 0
--Annotation: assign is_code 345
def advice_2_345: Prop := c.Advice 2 345 = 0
--Annotation: assign value 345
def advice_3_345: Prop := c.Advice 3 345 = 0
--Annotation: assign push_data_left 345
def advice_13_345: Prop := c.Advice 13 345 = 0
--Annotation: assign length 345
def advice_15_345: Prop := c.Advice 15 345 = 0
--Annotation: assign push_data_size 345
def advice_16_345: Prop := c.Advice 16 345 = 0
--Annotation: assign value_rlc 345
def advice_14_345: Prop := c.Advice 14 345 = 0
--Annotation: assign code_hash 345
def advice_4_345: Prop := c.Advice 4 345 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 345
def advice_5_345: Prop := c.Advice 5 345 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_345: Prop := c.Advice 17 345 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_345: Prop := c.Advice 18 345 = 1^(-1)
--Annotation: assign q_enable 346
def fixed_1550: Prop := c.Fixed 0 346 = 1
--Annotation: assign q_first 346
def fixed_1551: Prop := c.Fixed 1 346 = 0
--Annotation: assign q_last 346
def fixed_1552: Prop := c.Fixed 2 346 = 0
--Annotation: assign tag 346
def advice_0_346: Prop := c.Advice 0 346 = 0
--Annotation: assign index 346
def advice_1_346: Prop := c.Advice 1 346 = 0
--Annotation: assign is_code 346
def advice_2_346: Prop := c.Advice 2 346 = 0
--Annotation: assign value 346
def advice_3_346: Prop := c.Advice 3 346 = 0
--Annotation: assign push_data_left 346
def advice_13_346: Prop := c.Advice 13 346 = 0
--Annotation: assign length 346
def advice_15_346: Prop := c.Advice 15 346 = 0
--Annotation: assign push_data_size 346
def advice_16_346: Prop := c.Advice 16 346 = 0
--Annotation: assign value_rlc 346
def advice_14_346: Prop := c.Advice 14 346 = 0
--Annotation: assign code_hash 346
def advice_4_346: Prop := c.Advice 4 346 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 346
def advice_5_346: Prop := c.Advice 5 346 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_346: Prop := c.Advice 17 346 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_346: Prop := c.Advice 18 346 = 1^(-1)
--Annotation: assign q_enable 347
def fixed_1553: Prop := c.Fixed 0 347 = 1
--Annotation: assign q_first 347
def fixed_1554: Prop := c.Fixed 1 347 = 0
--Annotation: assign q_last 347
def fixed_1555: Prop := c.Fixed 2 347 = 0
--Annotation: assign tag 347
def advice_0_347: Prop := c.Advice 0 347 = 0
--Annotation: assign index 347
def advice_1_347: Prop := c.Advice 1 347 = 0
--Annotation: assign is_code 347
def advice_2_347: Prop := c.Advice 2 347 = 0
--Annotation: assign value 347
def advice_3_347: Prop := c.Advice 3 347 = 0
--Annotation: assign push_data_left 347
def advice_13_347: Prop := c.Advice 13 347 = 0
--Annotation: assign length 347
def advice_15_347: Prop := c.Advice 15 347 = 0
--Annotation: assign push_data_size 347
def advice_16_347: Prop := c.Advice 16 347 = 0
--Annotation: assign value_rlc 347
def advice_14_347: Prop := c.Advice 14 347 = 0
--Annotation: assign code_hash 347
def advice_4_347: Prop := c.Advice 4 347 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 347
def advice_5_347: Prop := c.Advice 5 347 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_347: Prop := c.Advice 17 347 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_347: Prop := c.Advice 18 347 = 1^(-1)
--Annotation: assign q_enable 348
def fixed_1556: Prop := c.Fixed 0 348 = 1
--Annotation: assign q_first 348
def fixed_1557: Prop := c.Fixed 1 348 = 0
--Annotation: assign q_last 348
def fixed_1558: Prop := c.Fixed 2 348 = 0
--Annotation: assign tag 348
def advice_0_348: Prop := c.Advice 0 348 = 0
--Annotation: assign index 348
def advice_1_348: Prop := c.Advice 1 348 = 0
--Annotation: assign is_code 348
def advice_2_348: Prop := c.Advice 2 348 = 0
--Annotation: assign value 348
def advice_3_348: Prop := c.Advice 3 348 = 0
--Annotation: assign push_data_left 348
def advice_13_348: Prop := c.Advice 13 348 = 0
--Annotation: assign length 348
def advice_15_348: Prop := c.Advice 15 348 = 0
--Annotation: assign push_data_size 348
def advice_16_348: Prop := c.Advice 16 348 = 0
--Annotation: assign value_rlc 348
def advice_14_348: Prop := c.Advice 14 348 = 0
--Annotation: assign code_hash 348
def advice_4_348: Prop := c.Advice 4 348 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 348
def advice_5_348: Prop := c.Advice 5 348 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_348: Prop := c.Advice 17 348 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_348: Prop := c.Advice 18 348 = 1^(-1)
--Annotation: assign q_enable 349
def fixed_1559: Prop := c.Fixed 0 349 = 1
--Annotation: assign q_first 349
def fixed_1560: Prop := c.Fixed 1 349 = 0
--Annotation: assign q_last 349
def fixed_1561: Prop := c.Fixed 2 349 = 0
--Annotation: assign tag 349
def advice_0_349: Prop := c.Advice 0 349 = 0
--Annotation: assign index 349
def advice_1_349: Prop := c.Advice 1 349 = 0
--Annotation: assign is_code 349
def advice_2_349: Prop := c.Advice 2 349 = 0
--Annotation: assign value 349
def advice_3_349: Prop := c.Advice 3 349 = 0
--Annotation: assign push_data_left 349
def advice_13_349: Prop := c.Advice 13 349 = 0
--Annotation: assign length 349
def advice_15_349: Prop := c.Advice 15 349 = 0
--Annotation: assign push_data_size 349
def advice_16_349: Prop := c.Advice 16 349 = 0
--Annotation: assign value_rlc 349
def advice_14_349: Prop := c.Advice 14 349 = 0
--Annotation: assign code_hash 349
def advice_4_349: Prop := c.Advice 4 349 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 349
def advice_5_349: Prop := c.Advice 5 349 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_349: Prop := c.Advice 17 349 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_349: Prop := c.Advice 18 349 = 1^(-1)
--Annotation: assign q_enable 350
def fixed_1562: Prop := c.Fixed 0 350 = 1
--Annotation: assign q_first 350
def fixed_1563: Prop := c.Fixed 1 350 = 0
--Annotation: assign q_last 350
def fixed_1564: Prop := c.Fixed 2 350 = 0
--Annotation: assign tag 350
def advice_0_350: Prop := c.Advice 0 350 = 0
--Annotation: assign index 350
def advice_1_350: Prop := c.Advice 1 350 = 0
--Annotation: assign is_code 350
def advice_2_350: Prop := c.Advice 2 350 = 0
--Annotation: assign value 350
def advice_3_350: Prop := c.Advice 3 350 = 0
--Annotation: assign push_data_left 350
def advice_13_350: Prop := c.Advice 13 350 = 0
--Annotation: assign length 350
def advice_15_350: Prop := c.Advice 15 350 = 0
--Annotation: assign push_data_size 350
def advice_16_350: Prop := c.Advice 16 350 = 0
--Annotation: assign value_rlc 350
def advice_14_350: Prop := c.Advice 14 350 = 0
--Annotation: assign code_hash 350
def advice_4_350: Prop := c.Advice 4 350 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 350
def advice_5_350: Prop := c.Advice 5 350 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_350: Prop := c.Advice 17 350 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_350: Prop := c.Advice 18 350 = 1^(-1)
--Annotation: assign q_enable 351
def fixed_1565: Prop := c.Fixed 0 351 = 1
--Annotation: assign q_first 351
def fixed_1566: Prop := c.Fixed 1 351 = 0
--Annotation: assign q_last 351
def fixed_1567: Prop := c.Fixed 2 351 = 0
--Annotation: assign tag 351
def advice_0_351: Prop := c.Advice 0 351 = 0
--Annotation: assign index 351
def advice_1_351: Prop := c.Advice 1 351 = 0
--Annotation: assign is_code 351
def advice_2_351: Prop := c.Advice 2 351 = 0
--Annotation: assign value 351
def advice_3_351: Prop := c.Advice 3 351 = 0
--Annotation: assign push_data_left 351
def advice_13_351: Prop := c.Advice 13 351 = 0
--Annotation: assign length 351
def advice_15_351: Prop := c.Advice 15 351 = 0
--Annotation: assign push_data_size 351
def advice_16_351: Prop := c.Advice 16 351 = 0
--Annotation: assign value_rlc 351
def advice_14_351: Prop := c.Advice 14 351 = 0
--Annotation: assign code_hash 351
def advice_4_351: Prop := c.Advice 4 351 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 351
def advice_5_351: Prop := c.Advice 5 351 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_351: Prop := c.Advice 17 351 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_351: Prop := c.Advice 18 351 = 1^(-1)
--Annotation: assign q_enable 352
def fixed_1568: Prop := c.Fixed 0 352 = 1
--Annotation: assign q_first 352
def fixed_1569: Prop := c.Fixed 1 352 = 0
--Annotation: assign q_last 352
def fixed_1570: Prop := c.Fixed 2 352 = 0
--Annotation: assign tag 352
def advice_0_352: Prop := c.Advice 0 352 = 0
--Annotation: assign index 352
def advice_1_352: Prop := c.Advice 1 352 = 0
--Annotation: assign is_code 352
def advice_2_352: Prop := c.Advice 2 352 = 0
--Annotation: assign value 352
def advice_3_352: Prop := c.Advice 3 352 = 0
--Annotation: assign push_data_left 352
def advice_13_352: Prop := c.Advice 13 352 = 0
--Annotation: assign length 352
def advice_15_352: Prop := c.Advice 15 352 = 0
--Annotation: assign push_data_size 352
def advice_16_352: Prop := c.Advice 16 352 = 0
--Annotation: assign value_rlc 352
def advice_14_352: Prop := c.Advice 14 352 = 0
--Annotation: assign code_hash 352
def advice_4_352: Prop := c.Advice 4 352 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 352
def advice_5_352: Prop := c.Advice 5 352 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_352: Prop := c.Advice 17 352 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_352: Prop := c.Advice 18 352 = 1^(-1)
--Annotation: assign q_enable 353
def fixed_1571: Prop := c.Fixed 0 353 = 1
--Annotation: assign q_first 353
def fixed_1572: Prop := c.Fixed 1 353 = 0
--Annotation: assign q_last 353
def fixed_1573: Prop := c.Fixed 2 353 = 0
--Annotation: assign tag 353
def advice_0_353: Prop := c.Advice 0 353 = 0
--Annotation: assign index 353
def advice_1_353: Prop := c.Advice 1 353 = 0
--Annotation: assign is_code 353
def advice_2_353: Prop := c.Advice 2 353 = 0
--Annotation: assign value 353
def advice_3_353: Prop := c.Advice 3 353 = 0
--Annotation: assign push_data_left 353
def advice_13_353: Prop := c.Advice 13 353 = 0
--Annotation: assign length 353
def advice_15_353: Prop := c.Advice 15 353 = 0
--Annotation: assign push_data_size 353
def advice_16_353: Prop := c.Advice 16 353 = 0
--Annotation: assign value_rlc 353
def advice_14_353: Prop := c.Advice 14 353 = 0
--Annotation: assign code_hash 353
def advice_4_353: Prop := c.Advice 4 353 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 353
def advice_5_353: Prop := c.Advice 5 353 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_353: Prop := c.Advice 17 353 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_353: Prop := c.Advice 18 353 = 1^(-1)
--Annotation: assign q_enable 354
def fixed_1574: Prop := c.Fixed 0 354 = 1
--Annotation: assign q_first 354
def fixed_1575: Prop := c.Fixed 1 354 = 0
--Annotation: assign q_last 354
def fixed_1576: Prop := c.Fixed 2 354 = 0
--Annotation: assign tag 354
def advice_0_354: Prop := c.Advice 0 354 = 0
--Annotation: assign index 354
def advice_1_354: Prop := c.Advice 1 354 = 0
--Annotation: assign is_code 354
def advice_2_354: Prop := c.Advice 2 354 = 0
--Annotation: assign value 354
def advice_3_354: Prop := c.Advice 3 354 = 0
--Annotation: assign push_data_left 354
def advice_13_354: Prop := c.Advice 13 354 = 0
--Annotation: assign length 354
def advice_15_354: Prop := c.Advice 15 354 = 0
--Annotation: assign push_data_size 354
def advice_16_354: Prop := c.Advice 16 354 = 0
--Annotation: assign value_rlc 354
def advice_14_354: Prop := c.Advice 14 354 = 0
--Annotation: assign code_hash 354
def advice_4_354: Prop := c.Advice 4 354 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 354
def advice_5_354: Prop := c.Advice 5 354 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_354: Prop := c.Advice 17 354 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_354: Prop := c.Advice 18 354 = 1^(-1)
--Annotation: assign q_enable 355
def fixed_1577: Prop := c.Fixed 0 355 = 1
--Annotation: assign q_first 355
def fixed_1578: Prop := c.Fixed 1 355 = 0
--Annotation: assign q_last 355
def fixed_1579: Prop := c.Fixed 2 355 = 0
--Annotation: assign tag 355
def advice_0_355: Prop := c.Advice 0 355 = 0
--Annotation: assign index 355
def advice_1_355: Prop := c.Advice 1 355 = 0
--Annotation: assign is_code 355
def advice_2_355: Prop := c.Advice 2 355 = 0
--Annotation: assign value 355
def advice_3_355: Prop := c.Advice 3 355 = 0
--Annotation: assign push_data_left 355
def advice_13_355: Prop := c.Advice 13 355 = 0
--Annotation: assign length 355
def advice_15_355: Prop := c.Advice 15 355 = 0
--Annotation: assign push_data_size 355
def advice_16_355: Prop := c.Advice 16 355 = 0
--Annotation: assign value_rlc 355
def advice_14_355: Prop := c.Advice 14 355 = 0
--Annotation: assign code_hash 355
def advice_4_355: Prop := c.Advice 4 355 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 355
def advice_5_355: Prop := c.Advice 5 355 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_355: Prop := c.Advice 17 355 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_355: Prop := c.Advice 18 355 = 1^(-1)
--Annotation: assign q_enable 356
def fixed_1580: Prop := c.Fixed 0 356 = 1
--Annotation: assign q_first 356
def fixed_1581: Prop := c.Fixed 1 356 = 0
--Annotation: assign q_last 356
def fixed_1582: Prop := c.Fixed 2 356 = 0
--Annotation: assign tag 356
def advice_0_356: Prop := c.Advice 0 356 = 0
--Annotation: assign index 356
def advice_1_356: Prop := c.Advice 1 356 = 0
--Annotation: assign is_code 356
def advice_2_356: Prop := c.Advice 2 356 = 0
--Annotation: assign value 356
def advice_3_356: Prop := c.Advice 3 356 = 0
--Annotation: assign push_data_left 356
def advice_13_356: Prop := c.Advice 13 356 = 0
--Annotation: assign length 356
def advice_15_356: Prop := c.Advice 15 356 = 0
--Annotation: assign push_data_size 356
def advice_16_356: Prop := c.Advice 16 356 = 0
--Annotation: assign value_rlc 356
def advice_14_356: Prop := c.Advice 14 356 = 0
--Annotation: assign code_hash 356
def advice_4_356: Prop := c.Advice 4 356 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 356
def advice_5_356: Prop := c.Advice 5 356 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_356: Prop := c.Advice 17 356 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_356: Prop := c.Advice 18 356 = 1^(-1)
--Annotation: assign q_enable 357
def fixed_1583: Prop := c.Fixed 0 357 = 1
--Annotation: assign q_first 357
def fixed_1584: Prop := c.Fixed 1 357 = 0
--Annotation: assign q_last 357
def fixed_1585: Prop := c.Fixed 2 357 = 0
--Annotation: assign tag 357
def advice_0_357: Prop := c.Advice 0 357 = 0
--Annotation: assign index 357
def advice_1_357: Prop := c.Advice 1 357 = 0
--Annotation: assign is_code 357
def advice_2_357: Prop := c.Advice 2 357 = 0
--Annotation: assign value 357
def advice_3_357: Prop := c.Advice 3 357 = 0
--Annotation: assign push_data_left 357
def advice_13_357: Prop := c.Advice 13 357 = 0
--Annotation: assign length 357
def advice_15_357: Prop := c.Advice 15 357 = 0
--Annotation: assign push_data_size 357
def advice_16_357: Prop := c.Advice 16 357 = 0
--Annotation: assign value_rlc 357
def advice_14_357: Prop := c.Advice 14 357 = 0
--Annotation: assign code_hash 357
def advice_4_357: Prop := c.Advice 4 357 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 357
def advice_5_357: Prop := c.Advice 5 357 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_357: Prop := c.Advice 17 357 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_357: Prop := c.Advice 18 357 = 1^(-1)
--Annotation: assign q_enable 358
def fixed_1586: Prop := c.Fixed 0 358 = 1
--Annotation: assign q_first 358
def fixed_1587: Prop := c.Fixed 1 358 = 0
--Annotation: assign q_last 358
def fixed_1588: Prop := c.Fixed 2 358 = 0
--Annotation: assign tag 358
def advice_0_358: Prop := c.Advice 0 358 = 0
--Annotation: assign index 358
def advice_1_358: Prop := c.Advice 1 358 = 0
--Annotation: assign is_code 358
def advice_2_358: Prop := c.Advice 2 358 = 0
--Annotation: assign value 358
def advice_3_358: Prop := c.Advice 3 358 = 0
--Annotation: assign push_data_left 358
def advice_13_358: Prop := c.Advice 13 358 = 0
--Annotation: assign length 358
def advice_15_358: Prop := c.Advice 15 358 = 0
--Annotation: assign push_data_size 358
def advice_16_358: Prop := c.Advice 16 358 = 0
--Annotation: assign value_rlc 358
def advice_14_358: Prop := c.Advice 14 358 = 0
--Annotation: assign code_hash 358
def advice_4_358: Prop := c.Advice 4 358 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 358
def advice_5_358: Prop := c.Advice 5 358 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_358: Prop := c.Advice 17 358 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_358: Prop := c.Advice 18 358 = 1^(-1)
--Annotation: assign q_enable 359
def fixed_1589: Prop := c.Fixed 0 359 = 1
--Annotation: assign q_first 359
def fixed_1590: Prop := c.Fixed 1 359 = 0
--Annotation: assign q_last 359
def fixed_1591: Prop := c.Fixed 2 359 = 0
--Annotation: assign tag 359
def advice_0_359: Prop := c.Advice 0 359 = 0
--Annotation: assign index 359
def advice_1_359: Prop := c.Advice 1 359 = 0
--Annotation: assign is_code 359
def advice_2_359: Prop := c.Advice 2 359 = 0
--Annotation: assign value 359
def advice_3_359: Prop := c.Advice 3 359 = 0
--Annotation: assign push_data_left 359
def advice_13_359: Prop := c.Advice 13 359 = 0
--Annotation: assign length 359
def advice_15_359: Prop := c.Advice 15 359 = 0
--Annotation: assign push_data_size 359
def advice_16_359: Prop := c.Advice 16 359 = 0
--Annotation: assign value_rlc 359
def advice_14_359: Prop := c.Advice 14 359 = 0
--Annotation: assign code_hash 359
def advice_4_359: Prop := c.Advice 4 359 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 359
def advice_5_359: Prop := c.Advice 5 359 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_359: Prop := c.Advice 17 359 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_359: Prop := c.Advice 18 359 = 1^(-1)
--Annotation: assign q_enable 360
def fixed_1592: Prop := c.Fixed 0 360 = 1
--Annotation: assign q_first 360
def fixed_1593: Prop := c.Fixed 1 360 = 0
--Annotation: assign q_last 360
def fixed_1594: Prop := c.Fixed 2 360 = 0
--Annotation: assign tag 360
def advice_0_360: Prop := c.Advice 0 360 = 0
--Annotation: assign index 360
def advice_1_360: Prop := c.Advice 1 360 = 0
--Annotation: assign is_code 360
def advice_2_360: Prop := c.Advice 2 360 = 0
--Annotation: assign value 360
def advice_3_360: Prop := c.Advice 3 360 = 0
--Annotation: assign push_data_left 360
def advice_13_360: Prop := c.Advice 13 360 = 0
--Annotation: assign length 360
def advice_15_360: Prop := c.Advice 15 360 = 0
--Annotation: assign push_data_size 360
def advice_16_360: Prop := c.Advice 16 360 = 0
--Annotation: assign value_rlc 360
def advice_14_360: Prop := c.Advice 14 360 = 0
--Annotation: assign code_hash 360
def advice_4_360: Prop := c.Advice 4 360 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 360
def advice_5_360: Prop := c.Advice 5 360 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_360: Prop := c.Advice 17 360 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_360: Prop := c.Advice 18 360 = 1^(-1)
--Annotation: assign q_enable 361
def fixed_1595: Prop := c.Fixed 0 361 = 1
--Annotation: assign q_first 361
def fixed_1596: Prop := c.Fixed 1 361 = 0
--Annotation: assign q_last 361
def fixed_1597: Prop := c.Fixed 2 361 = 0
--Annotation: assign tag 361
def advice_0_361: Prop := c.Advice 0 361 = 0
--Annotation: assign index 361
def advice_1_361: Prop := c.Advice 1 361 = 0
--Annotation: assign is_code 361
def advice_2_361: Prop := c.Advice 2 361 = 0
--Annotation: assign value 361
def advice_3_361: Prop := c.Advice 3 361 = 0
--Annotation: assign push_data_left 361
def advice_13_361: Prop := c.Advice 13 361 = 0
--Annotation: assign length 361
def advice_15_361: Prop := c.Advice 15 361 = 0
--Annotation: assign push_data_size 361
def advice_16_361: Prop := c.Advice 16 361 = 0
--Annotation: assign value_rlc 361
def advice_14_361: Prop := c.Advice 14 361 = 0
--Annotation: assign code_hash 361
def advice_4_361: Prop := c.Advice 4 361 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 361
def advice_5_361: Prop := c.Advice 5 361 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_361: Prop := c.Advice 17 361 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_361: Prop := c.Advice 18 361 = 1^(-1)
--Annotation: assign q_enable 362
def fixed_1598: Prop := c.Fixed 0 362 = 1
--Annotation: assign q_first 362
def fixed_1599: Prop := c.Fixed 1 362 = 0
--Annotation: assign q_last 362
def fixed_1600: Prop := c.Fixed 2 362 = 0
--Annotation: assign tag 362
def advice_0_362: Prop := c.Advice 0 362 = 0
--Annotation: assign index 362
def advice_1_362: Prop := c.Advice 1 362 = 0
--Annotation: assign is_code 362
def advice_2_362: Prop := c.Advice 2 362 = 0
--Annotation: assign value 362
def advice_3_362: Prop := c.Advice 3 362 = 0
--Annotation: assign push_data_left 362
def advice_13_362: Prop := c.Advice 13 362 = 0
--Annotation: assign length 362
def advice_15_362: Prop := c.Advice 15 362 = 0
--Annotation: assign push_data_size 362
def advice_16_362: Prop := c.Advice 16 362 = 0
--Annotation: assign value_rlc 362
def advice_14_362: Prop := c.Advice 14 362 = 0
--Annotation: assign code_hash 362
def advice_4_362: Prop := c.Advice 4 362 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 362
def advice_5_362: Prop := c.Advice 5 362 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_362: Prop := c.Advice 17 362 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_362: Prop := c.Advice 18 362 = 1^(-1)
--Annotation: assign q_enable 363
def fixed_1601: Prop := c.Fixed 0 363 = 1
--Annotation: assign q_first 363
def fixed_1602: Prop := c.Fixed 1 363 = 0
--Annotation: assign q_last 363
def fixed_1603: Prop := c.Fixed 2 363 = 0
--Annotation: assign tag 363
def advice_0_363: Prop := c.Advice 0 363 = 0
--Annotation: assign index 363
def advice_1_363: Prop := c.Advice 1 363 = 0
--Annotation: assign is_code 363
def advice_2_363: Prop := c.Advice 2 363 = 0
--Annotation: assign value 363
def advice_3_363: Prop := c.Advice 3 363 = 0
--Annotation: assign push_data_left 363
def advice_13_363: Prop := c.Advice 13 363 = 0
--Annotation: assign length 363
def advice_15_363: Prop := c.Advice 15 363 = 0
--Annotation: assign push_data_size 363
def advice_16_363: Prop := c.Advice 16 363 = 0
--Annotation: assign value_rlc 363
def advice_14_363: Prop := c.Advice 14 363 = 0
--Annotation: assign code_hash 363
def advice_4_363: Prop := c.Advice 4 363 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 363
def advice_5_363: Prop := c.Advice 5 363 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_363: Prop := c.Advice 17 363 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_363: Prop := c.Advice 18 363 = 1^(-1)
--Annotation: assign q_enable 364
def fixed_1604: Prop := c.Fixed 0 364 = 1
--Annotation: assign q_first 364
def fixed_1605: Prop := c.Fixed 1 364 = 0
--Annotation: assign q_last 364
def fixed_1606: Prop := c.Fixed 2 364 = 0
--Annotation: assign tag 364
def advice_0_364: Prop := c.Advice 0 364 = 0
--Annotation: assign index 364
def advice_1_364: Prop := c.Advice 1 364 = 0
--Annotation: assign is_code 364
def advice_2_364: Prop := c.Advice 2 364 = 0
--Annotation: assign value 364
def advice_3_364: Prop := c.Advice 3 364 = 0
--Annotation: assign push_data_left 364
def advice_13_364: Prop := c.Advice 13 364 = 0
--Annotation: assign length 364
def advice_15_364: Prop := c.Advice 15 364 = 0
--Annotation: assign push_data_size 364
def advice_16_364: Prop := c.Advice 16 364 = 0
--Annotation: assign value_rlc 364
def advice_14_364: Prop := c.Advice 14 364 = 0
--Annotation: assign code_hash 364
def advice_4_364: Prop := c.Advice 4 364 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 364
def advice_5_364: Prop := c.Advice 5 364 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_364: Prop := c.Advice 17 364 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_364: Prop := c.Advice 18 364 = 1^(-1)
--Annotation: assign q_enable 365
def fixed_1607: Prop := c.Fixed 0 365 = 1
--Annotation: assign q_first 365
def fixed_1608: Prop := c.Fixed 1 365 = 0
--Annotation: assign q_last 365
def fixed_1609: Prop := c.Fixed 2 365 = 0
--Annotation: assign tag 365
def advice_0_365: Prop := c.Advice 0 365 = 0
--Annotation: assign index 365
def advice_1_365: Prop := c.Advice 1 365 = 0
--Annotation: assign is_code 365
def advice_2_365: Prop := c.Advice 2 365 = 0
--Annotation: assign value 365
def advice_3_365: Prop := c.Advice 3 365 = 0
--Annotation: assign push_data_left 365
def advice_13_365: Prop := c.Advice 13 365 = 0
--Annotation: assign length 365
def advice_15_365: Prop := c.Advice 15 365 = 0
--Annotation: assign push_data_size 365
def advice_16_365: Prop := c.Advice 16 365 = 0
--Annotation: assign value_rlc 365
def advice_14_365: Prop := c.Advice 14 365 = 0
--Annotation: assign code_hash 365
def advice_4_365: Prop := c.Advice 4 365 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 365
def advice_5_365: Prop := c.Advice 5 365 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_365: Prop := c.Advice 17 365 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_365: Prop := c.Advice 18 365 = 1^(-1)
--Annotation: assign q_enable 366
def fixed_1610: Prop := c.Fixed 0 366 = 1
--Annotation: assign q_first 366
def fixed_1611: Prop := c.Fixed 1 366 = 0
--Annotation: assign q_last 366
def fixed_1612: Prop := c.Fixed 2 366 = 0
--Annotation: assign tag 366
def advice_0_366: Prop := c.Advice 0 366 = 0
--Annotation: assign index 366
def advice_1_366: Prop := c.Advice 1 366 = 0
--Annotation: assign is_code 366
def advice_2_366: Prop := c.Advice 2 366 = 0
--Annotation: assign value 366
def advice_3_366: Prop := c.Advice 3 366 = 0
--Annotation: assign push_data_left 366
def advice_13_366: Prop := c.Advice 13 366 = 0
--Annotation: assign length 366
def advice_15_366: Prop := c.Advice 15 366 = 0
--Annotation: assign push_data_size 366
def advice_16_366: Prop := c.Advice 16 366 = 0
--Annotation: assign value_rlc 366
def advice_14_366: Prop := c.Advice 14 366 = 0
--Annotation: assign code_hash 366
def advice_4_366: Prop := c.Advice 4 366 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 366
def advice_5_366: Prop := c.Advice 5 366 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_366: Prop := c.Advice 17 366 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_366: Prop := c.Advice 18 366 = 1^(-1)
--Annotation: assign q_enable 367
def fixed_1613: Prop := c.Fixed 0 367 = 1
--Annotation: assign q_first 367
def fixed_1614: Prop := c.Fixed 1 367 = 0
--Annotation: assign q_last 367
def fixed_1615: Prop := c.Fixed 2 367 = 0
--Annotation: assign tag 367
def advice_0_367: Prop := c.Advice 0 367 = 0
--Annotation: assign index 367
def advice_1_367: Prop := c.Advice 1 367 = 0
--Annotation: assign is_code 367
def advice_2_367: Prop := c.Advice 2 367 = 0
--Annotation: assign value 367
def advice_3_367: Prop := c.Advice 3 367 = 0
--Annotation: assign push_data_left 367
def advice_13_367: Prop := c.Advice 13 367 = 0
--Annotation: assign length 367
def advice_15_367: Prop := c.Advice 15 367 = 0
--Annotation: assign push_data_size 367
def advice_16_367: Prop := c.Advice 16 367 = 0
--Annotation: assign value_rlc 367
def advice_14_367: Prop := c.Advice 14 367 = 0
--Annotation: assign code_hash 367
def advice_4_367: Prop := c.Advice 4 367 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 367
def advice_5_367: Prop := c.Advice 5 367 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_367: Prop := c.Advice 17 367 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_367: Prop := c.Advice 18 367 = 1^(-1)
--Annotation: assign q_enable 368
def fixed_1616: Prop := c.Fixed 0 368 = 1
--Annotation: assign q_first 368
def fixed_1617: Prop := c.Fixed 1 368 = 0
--Annotation: assign q_last 368
def fixed_1618: Prop := c.Fixed 2 368 = 0
--Annotation: assign tag 368
def advice_0_368: Prop := c.Advice 0 368 = 0
--Annotation: assign index 368
def advice_1_368: Prop := c.Advice 1 368 = 0
--Annotation: assign is_code 368
def advice_2_368: Prop := c.Advice 2 368 = 0
--Annotation: assign value 368
def advice_3_368: Prop := c.Advice 3 368 = 0
--Annotation: assign push_data_left 368
def advice_13_368: Prop := c.Advice 13 368 = 0
--Annotation: assign length 368
def advice_15_368: Prop := c.Advice 15 368 = 0
--Annotation: assign push_data_size 368
def advice_16_368: Prop := c.Advice 16 368 = 0
--Annotation: assign value_rlc 368
def advice_14_368: Prop := c.Advice 14 368 = 0
--Annotation: assign code_hash 368
def advice_4_368: Prop := c.Advice 4 368 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 368
def advice_5_368: Prop := c.Advice 5 368 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_368: Prop := c.Advice 17 368 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_368: Prop := c.Advice 18 368 = 1^(-1)
--Annotation: assign q_enable 369
def fixed_1619: Prop := c.Fixed 0 369 = 1
--Annotation: assign q_first 369
def fixed_1620: Prop := c.Fixed 1 369 = 0
--Annotation: assign q_last 369
def fixed_1621: Prop := c.Fixed 2 369 = 0
--Annotation: assign tag 369
def advice_0_369: Prop := c.Advice 0 369 = 0
--Annotation: assign index 369
def advice_1_369: Prop := c.Advice 1 369 = 0
--Annotation: assign is_code 369
def advice_2_369: Prop := c.Advice 2 369 = 0
--Annotation: assign value 369
def advice_3_369: Prop := c.Advice 3 369 = 0
--Annotation: assign push_data_left 369
def advice_13_369: Prop := c.Advice 13 369 = 0
--Annotation: assign length 369
def advice_15_369: Prop := c.Advice 15 369 = 0
--Annotation: assign push_data_size 369
def advice_16_369: Prop := c.Advice 16 369 = 0
--Annotation: assign value_rlc 369
def advice_14_369: Prop := c.Advice 14 369 = 0
--Annotation: assign code_hash 369
def advice_4_369: Prop := c.Advice 4 369 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 369
def advice_5_369: Prop := c.Advice 5 369 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_369: Prop := c.Advice 17 369 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_369: Prop := c.Advice 18 369 = 1^(-1)
--Annotation: assign q_enable 370
def fixed_1622: Prop := c.Fixed 0 370 = 1
--Annotation: assign q_first 370
def fixed_1623: Prop := c.Fixed 1 370 = 0
--Annotation: assign q_last 370
def fixed_1624: Prop := c.Fixed 2 370 = 0
--Annotation: assign tag 370
def advice_0_370: Prop := c.Advice 0 370 = 0
--Annotation: assign index 370
def advice_1_370: Prop := c.Advice 1 370 = 0
--Annotation: assign is_code 370
def advice_2_370: Prop := c.Advice 2 370 = 0
--Annotation: assign value 370
def advice_3_370: Prop := c.Advice 3 370 = 0
--Annotation: assign push_data_left 370
def advice_13_370: Prop := c.Advice 13 370 = 0
--Annotation: assign length 370
def advice_15_370: Prop := c.Advice 15 370 = 0
--Annotation: assign push_data_size 370
def advice_16_370: Prop := c.Advice 16 370 = 0
--Annotation: assign value_rlc 370
def advice_14_370: Prop := c.Advice 14 370 = 0
--Annotation: assign code_hash 370
def advice_4_370: Prop := c.Advice 4 370 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 370
def advice_5_370: Prop := c.Advice 5 370 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_370: Prop := c.Advice 17 370 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_370: Prop := c.Advice 18 370 = 1^(-1)
--Annotation: assign q_enable 371
def fixed_1625: Prop := c.Fixed 0 371 = 1
--Annotation: assign q_first 371
def fixed_1626: Prop := c.Fixed 1 371 = 0
--Annotation: assign q_last 371
def fixed_1627: Prop := c.Fixed 2 371 = 0
--Annotation: assign tag 371
def advice_0_371: Prop := c.Advice 0 371 = 0
--Annotation: assign index 371
def advice_1_371: Prop := c.Advice 1 371 = 0
--Annotation: assign is_code 371
def advice_2_371: Prop := c.Advice 2 371 = 0
--Annotation: assign value 371
def advice_3_371: Prop := c.Advice 3 371 = 0
--Annotation: assign push_data_left 371
def advice_13_371: Prop := c.Advice 13 371 = 0
--Annotation: assign length 371
def advice_15_371: Prop := c.Advice 15 371 = 0
--Annotation: assign push_data_size 371
def advice_16_371: Prop := c.Advice 16 371 = 0
--Annotation: assign value_rlc 371
def advice_14_371: Prop := c.Advice 14 371 = 0
--Annotation: assign code_hash 371
def advice_4_371: Prop := c.Advice 4 371 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 371
def advice_5_371: Prop := c.Advice 5 371 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_371: Prop := c.Advice 17 371 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_371: Prop := c.Advice 18 371 = 1^(-1)
--Annotation: assign q_enable 372
def fixed_1628: Prop := c.Fixed 0 372 = 1
--Annotation: assign q_first 372
def fixed_1629: Prop := c.Fixed 1 372 = 0
--Annotation: assign q_last 372
def fixed_1630: Prop := c.Fixed 2 372 = 0
--Annotation: assign tag 372
def advice_0_372: Prop := c.Advice 0 372 = 0
--Annotation: assign index 372
def advice_1_372: Prop := c.Advice 1 372 = 0
--Annotation: assign is_code 372
def advice_2_372: Prop := c.Advice 2 372 = 0
--Annotation: assign value 372
def advice_3_372: Prop := c.Advice 3 372 = 0
--Annotation: assign push_data_left 372
def advice_13_372: Prop := c.Advice 13 372 = 0
--Annotation: assign length 372
def advice_15_372: Prop := c.Advice 15 372 = 0
--Annotation: assign push_data_size 372
def advice_16_372: Prop := c.Advice 16 372 = 0
--Annotation: assign value_rlc 372
def advice_14_372: Prop := c.Advice 14 372 = 0
--Annotation: assign code_hash 372
def advice_4_372: Prop := c.Advice 4 372 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 372
def advice_5_372: Prop := c.Advice 5 372 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_372: Prop := c.Advice 17 372 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_372: Prop := c.Advice 18 372 = 1^(-1)
--Annotation: assign q_enable 373
def fixed_1631: Prop := c.Fixed 0 373 = 1
--Annotation: assign q_first 373
def fixed_1632: Prop := c.Fixed 1 373 = 0
--Annotation: assign q_last 373
def fixed_1633: Prop := c.Fixed 2 373 = 0
--Annotation: assign tag 373
def advice_0_373: Prop := c.Advice 0 373 = 0
--Annotation: assign index 373
def advice_1_373: Prop := c.Advice 1 373 = 0
--Annotation: assign is_code 373
def advice_2_373: Prop := c.Advice 2 373 = 0
--Annotation: assign value 373
def advice_3_373: Prop := c.Advice 3 373 = 0
--Annotation: assign push_data_left 373
def advice_13_373: Prop := c.Advice 13 373 = 0
--Annotation: assign length 373
def advice_15_373: Prop := c.Advice 15 373 = 0
--Annotation: assign push_data_size 373
def advice_16_373: Prop := c.Advice 16 373 = 0
--Annotation: assign value_rlc 373
def advice_14_373: Prop := c.Advice 14 373 = 0
--Annotation: assign code_hash 373
def advice_4_373: Prop := c.Advice 4 373 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 373
def advice_5_373: Prop := c.Advice 5 373 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_373: Prop := c.Advice 17 373 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_373: Prop := c.Advice 18 373 = 1^(-1)
--Annotation: assign q_enable 374
def fixed_1634: Prop := c.Fixed 0 374 = 1
--Annotation: assign q_first 374
def fixed_1635: Prop := c.Fixed 1 374 = 0
--Annotation: assign q_last 374
def fixed_1636: Prop := c.Fixed 2 374 = 0
--Annotation: assign tag 374
def advice_0_374: Prop := c.Advice 0 374 = 0
--Annotation: assign index 374
def advice_1_374: Prop := c.Advice 1 374 = 0
--Annotation: assign is_code 374
def advice_2_374: Prop := c.Advice 2 374 = 0
--Annotation: assign value 374
def advice_3_374: Prop := c.Advice 3 374 = 0
--Annotation: assign push_data_left 374
def advice_13_374: Prop := c.Advice 13 374 = 0
--Annotation: assign length 374
def advice_15_374: Prop := c.Advice 15 374 = 0
--Annotation: assign push_data_size 374
def advice_16_374: Prop := c.Advice 16 374 = 0
--Annotation: assign value_rlc 374
def advice_14_374: Prop := c.Advice 14 374 = 0
--Annotation: assign code_hash 374
def advice_4_374: Prop := c.Advice 4 374 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 374
def advice_5_374: Prop := c.Advice 5 374 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_374: Prop := c.Advice 17 374 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_374: Prop := c.Advice 18 374 = 1^(-1)
--Annotation: assign q_enable 375
def fixed_1637: Prop := c.Fixed 0 375 = 1
--Annotation: assign q_first 375
def fixed_1638: Prop := c.Fixed 1 375 = 0
--Annotation: assign q_last 375
def fixed_1639: Prop := c.Fixed 2 375 = 0
--Annotation: assign tag 375
def advice_0_375: Prop := c.Advice 0 375 = 0
--Annotation: assign index 375
def advice_1_375: Prop := c.Advice 1 375 = 0
--Annotation: assign is_code 375
def advice_2_375: Prop := c.Advice 2 375 = 0
--Annotation: assign value 375
def advice_3_375: Prop := c.Advice 3 375 = 0
--Annotation: assign push_data_left 375
def advice_13_375: Prop := c.Advice 13 375 = 0
--Annotation: assign length 375
def advice_15_375: Prop := c.Advice 15 375 = 0
--Annotation: assign push_data_size 375
def advice_16_375: Prop := c.Advice 16 375 = 0
--Annotation: assign value_rlc 375
def advice_14_375: Prop := c.Advice 14 375 = 0
--Annotation: assign code_hash 375
def advice_4_375: Prop := c.Advice 4 375 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 375
def advice_5_375: Prop := c.Advice 5 375 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_375: Prop := c.Advice 17 375 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_375: Prop := c.Advice 18 375 = 1^(-1)
--Annotation: assign q_enable 376
def fixed_1640: Prop := c.Fixed 0 376 = 1
--Annotation: assign q_first 376
def fixed_1641: Prop := c.Fixed 1 376 = 0
--Annotation: assign q_last 376
def fixed_1642: Prop := c.Fixed 2 376 = 0
--Annotation: assign tag 376
def advice_0_376: Prop := c.Advice 0 376 = 0
--Annotation: assign index 376
def advice_1_376: Prop := c.Advice 1 376 = 0
--Annotation: assign is_code 376
def advice_2_376: Prop := c.Advice 2 376 = 0
--Annotation: assign value 376
def advice_3_376: Prop := c.Advice 3 376 = 0
--Annotation: assign push_data_left 376
def advice_13_376: Prop := c.Advice 13 376 = 0
--Annotation: assign length 376
def advice_15_376: Prop := c.Advice 15 376 = 0
--Annotation: assign push_data_size 376
def advice_16_376: Prop := c.Advice 16 376 = 0
--Annotation: assign value_rlc 376
def advice_14_376: Prop := c.Advice 14 376 = 0
--Annotation: assign code_hash 376
def advice_4_376: Prop := c.Advice 4 376 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 376
def advice_5_376: Prop := c.Advice 5 376 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_376: Prop := c.Advice 17 376 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_376: Prop := c.Advice 18 376 = 1^(-1)
--Annotation: assign q_enable 377
def fixed_1643: Prop := c.Fixed 0 377 = 1
--Annotation: assign q_first 377
def fixed_1644: Prop := c.Fixed 1 377 = 0
--Annotation: assign q_last 377
def fixed_1645: Prop := c.Fixed 2 377 = 0
--Annotation: assign tag 377
def advice_0_377: Prop := c.Advice 0 377 = 0
--Annotation: assign index 377
def advice_1_377: Prop := c.Advice 1 377 = 0
--Annotation: assign is_code 377
def advice_2_377: Prop := c.Advice 2 377 = 0
--Annotation: assign value 377
def advice_3_377: Prop := c.Advice 3 377 = 0
--Annotation: assign push_data_left 377
def advice_13_377: Prop := c.Advice 13 377 = 0
--Annotation: assign length 377
def advice_15_377: Prop := c.Advice 15 377 = 0
--Annotation: assign push_data_size 377
def advice_16_377: Prop := c.Advice 16 377 = 0
--Annotation: assign value_rlc 377
def advice_14_377: Prop := c.Advice 14 377 = 0
--Annotation: assign code_hash 377
def advice_4_377: Prop := c.Advice 4 377 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 377
def advice_5_377: Prop := c.Advice 5 377 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_377: Prop := c.Advice 17 377 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_377: Prop := c.Advice 18 377 = 1^(-1)
--Annotation: assign q_enable 378
def fixed_1646: Prop := c.Fixed 0 378 = 1
--Annotation: assign q_first 378
def fixed_1647: Prop := c.Fixed 1 378 = 0
--Annotation: assign q_last 378
def fixed_1648: Prop := c.Fixed 2 378 = 0
--Annotation: assign tag 378
def advice_0_378: Prop := c.Advice 0 378 = 0
--Annotation: assign index 378
def advice_1_378: Prop := c.Advice 1 378 = 0
--Annotation: assign is_code 378
def advice_2_378: Prop := c.Advice 2 378 = 0
--Annotation: assign value 378
def advice_3_378: Prop := c.Advice 3 378 = 0
--Annotation: assign push_data_left 378
def advice_13_378: Prop := c.Advice 13 378 = 0
--Annotation: assign length 378
def advice_15_378: Prop := c.Advice 15 378 = 0
--Annotation: assign push_data_size 378
def advice_16_378: Prop := c.Advice 16 378 = 0
--Annotation: assign value_rlc 378
def advice_14_378: Prop := c.Advice 14 378 = 0
--Annotation: assign code_hash 378
def advice_4_378: Prop := c.Advice 4 378 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 378
def advice_5_378: Prop := c.Advice 5 378 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_378: Prop := c.Advice 17 378 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_378: Prop := c.Advice 18 378 = 1^(-1)
--Annotation: assign q_enable 379
def fixed_1649: Prop := c.Fixed 0 379 = 1
--Annotation: assign q_first 379
def fixed_1650: Prop := c.Fixed 1 379 = 0
--Annotation: assign q_last 379
def fixed_1651: Prop := c.Fixed 2 379 = 0
--Annotation: assign tag 379
def advice_0_379: Prop := c.Advice 0 379 = 0
--Annotation: assign index 379
def advice_1_379: Prop := c.Advice 1 379 = 0
--Annotation: assign is_code 379
def advice_2_379: Prop := c.Advice 2 379 = 0
--Annotation: assign value 379
def advice_3_379: Prop := c.Advice 3 379 = 0
--Annotation: assign push_data_left 379
def advice_13_379: Prop := c.Advice 13 379 = 0
--Annotation: assign length 379
def advice_15_379: Prop := c.Advice 15 379 = 0
--Annotation: assign push_data_size 379
def advice_16_379: Prop := c.Advice 16 379 = 0
--Annotation: assign value_rlc 379
def advice_14_379: Prop := c.Advice 14 379 = 0
--Annotation: assign code_hash 379
def advice_4_379: Prop := c.Advice 4 379 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 379
def advice_5_379: Prop := c.Advice 5 379 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_379: Prop := c.Advice 17 379 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_379: Prop := c.Advice 18 379 = 1^(-1)
--Annotation: assign q_enable 380
def fixed_1652: Prop := c.Fixed 0 380 = 1
--Annotation: assign q_first 380
def fixed_1653: Prop := c.Fixed 1 380 = 0
--Annotation: assign q_last 380
def fixed_1654: Prop := c.Fixed 2 380 = 0
--Annotation: assign tag 380
def advice_0_380: Prop := c.Advice 0 380 = 0
--Annotation: assign index 380
def advice_1_380: Prop := c.Advice 1 380 = 0
--Annotation: assign is_code 380
def advice_2_380: Prop := c.Advice 2 380 = 0
--Annotation: assign value 380
def advice_3_380: Prop := c.Advice 3 380 = 0
--Annotation: assign push_data_left 380
def advice_13_380: Prop := c.Advice 13 380 = 0
--Annotation: assign length 380
def advice_15_380: Prop := c.Advice 15 380 = 0
--Annotation: assign push_data_size 380
def advice_16_380: Prop := c.Advice 16 380 = 0
--Annotation: assign value_rlc 380
def advice_14_380: Prop := c.Advice 14 380 = 0
--Annotation: assign code_hash 380
def advice_4_380: Prop := c.Advice 4 380 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 380
def advice_5_380: Prop := c.Advice 5 380 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_380: Prop := c.Advice 17 380 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_380: Prop := c.Advice 18 380 = 1^(-1)
--Annotation: assign q_enable 381
def fixed_1655: Prop := c.Fixed 0 381 = 1
--Annotation: assign q_first 381
def fixed_1656: Prop := c.Fixed 1 381 = 0
--Annotation: assign q_last 381
def fixed_1657: Prop := c.Fixed 2 381 = 0
--Annotation: assign tag 381
def advice_0_381: Prop := c.Advice 0 381 = 0
--Annotation: assign index 381
def advice_1_381: Prop := c.Advice 1 381 = 0
--Annotation: assign is_code 381
def advice_2_381: Prop := c.Advice 2 381 = 0
--Annotation: assign value 381
def advice_3_381: Prop := c.Advice 3 381 = 0
--Annotation: assign push_data_left 381
def advice_13_381: Prop := c.Advice 13 381 = 0
--Annotation: assign length 381
def advice_15_381: Prop := c.Advice 15 381 = 0
--Annotation: assign push_data_size 381
def advice_16_381: Prop := c.Advice 16 381 = 0
--Annotation: assign value_rlc 381
def advice_14_381: Prop := c.Advice 14 381 = 0
--Annotation: assign code_hash 381
def advice_4_381: Prop := c.Advice 4 381 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 381
def advice_5_381: Prop := c.Advice 5 381 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_381: Prop := c.Advice 17 381 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_381: Prop := c.Advice 18 381 = 1^(-1)
--Annotation: assign q_enable 382
def fixed_1658: Prop := c.Fixed 0 382 = 1
--Annotation: assign q_first 382
def fixed_1659: Prop := c.Fixed 1 382 = 0
--Annotation: assign q_last 382
def fixed_1660: Prop := c.Fixed 2 382 = 0
--Annotation: assign tag 382
def advice_0_382: Prop := c.Advice 0 382 = 0
--Annotation: assign index 382
def advice_1_382: Prop := c.Advice 1 382 = 0
--Annotation: assign is_code 382
def advice_2_382: Prop := c.Advice 2 382 = 0
--Annotation: assign value 382
def advice_3_382: Prop := c.Advice 3 382 = 0
--Annotation: assign push_data_left 382
def advice_13_382: Prop := c.Advice 13 382 = 0
--Annotation: assign length 382
def advice_15_382: Prop := c.Advice 15 382 = 0
--Annotation: assign push_data_size 382
def advice_16_382: Prop := c.Advice 16 382 = 0
--Annotation: assign value_rlc 382
def advice_14_382: Prop := c.Advice 14 382 = 0
--Annotation: assign code_hash 382
def advice_4_382: Prop := c.Advice 4 382 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 382
def advice_5_382: Prop := c.Advice 5 382 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_382: Prop := c.Advice 17 382 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_382: Prop := c.Advice 18 382 = 1^(-1)
--Annotation: assign q_enable 383
def fixed_1661: Prop := c.Fixed 0 383 = 1
--Annotation: assign q_first 383
def fixed_1662: Prop := c.Fixed 1 383 = 0
--Annotation: assign q_last 383
def fixed_1663: Prop := c.Fixed 2 383 = 0
--Annotation: assign tag 383
def advice_0_383: Prop := c.Advice 0 383 = 0
--Annotation: assign index 383
def advice_1_383: Prop := c.Advice 1 383 = 0
--Annotation: assign is_code 383
def advice_2_383: Prop := c.Advice 2 383 = 0
--Annotation: assign value 383
def advice_3_383: Prop := c.Advice 3 383 = 0
--Annotation: assign push_data_left 383
def advice_13_383: Prop := c.Advice 13 383 = 0
--Annotation: assign length 383
def advice_15_383: Prop := c.Advice 15 383 = 0
--Annotation: assign push_data_size 383
def advice_16_383: Prop := c.Advice 16 383 = 0
--Annotation: assign value_rlc 383
def advice_14_383: Prop := c.Advice 14 383 = 0
--Annotation: assign code_hash 383
def advice_4_383: Prop := c.Advice 4 383 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 383
def advice_5_383: Prop := c.Advice 5 383 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_383: Prop := c.Advice 17 383 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_383: Prop := c.Advice 18 383 = 1^(-1)
--Annotation: assign q_enable 384
def fixed_1664: Prop := c.Fixed 0 384 = 1
--Annotation: assign q_first 384
def fixed_1665: Prop := c.Fixed 1 384 = 0
--Annotation: assign q_last 384
def fixed_1666: Prop := c.Fixed 2 384 = 0
--Annotation: assign tag 384
def advice_0_384: Prop := c.Advice 0 384 = 0
--Annotation: assign index 384
def advice_1_384: Prop := c.Advice 1 384 = 0
--Annotation: assign is_code 384
def advice_2_384: Prop := c.Advice 2 384 = 0
--Annotation: assign value 384
def advice_3_384: Prop := c.Advice 3 384 = 0
--Annotation: assign push_data_left 384
def advice_13_384: Prop := c.Advice 13 384 = 0
--Annotation: assign length 384
def advice_15_384: Prop := c.Advice 15 384 = 0
--Annotation: assign push_data_size 384
def advice_16_384: Prop := c.Advice 16 384 = 0
--Annotation: assign value_rlc 384
def advice_14_384: Prop := c.Advice 14 384 = 0
--Annotation: assign code_hash 384
def advice_4_384: Prop := c.Advice 4 384 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 384
def advice_5_384: Prop := c.Advice 5 384 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_384: Prop := c.Advice 17 384 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_384: Prop := c.Advice 18 384 = 1^(-1)
--Annotation: assign q_enable 385
def fixed_1667: Prop := c.Fixed 0 385 = 1
--Annotation: assign q_first 385
def fixed_1668: Prop := c.Fixed 1 385 = 0
--Annotation: assign q_last 385
def fixed_1669: Prop := c.Fixed 2 385 = 0
--Annotation: assign tag 385
def advice_0_385: Prop := c.Advice 0 385 = 0
--Annotation: assign index 385
def advice_1_385: Prop := c.Advice 1 385 = 0
--Annotation: assign is_code 385
def advice_2_385: Prop := c.Advice 2 385 = 0
--Annotation: assign value 385
def advice_3_385: Prop := c.Advice 3 385 = 0
--Annotation: assign push_data_left 385
def advice_13_385: Prop := c.Advice 13 385 = 0
--Annotation: assign length 385
def advice_15_385: Prop := c.Advice 15 385 = 0
--Annotation: assign push_data_size 385
def advice_16_385: Prop := c.Advice 16 385 = 0
--Annotation: assign value_rlc 385
def advice_14_385: Prop := c.Advice 14 385 = 0
--Annotation: assign code_hash 385
def advice_4_385: Prop := c.Advice 4 385 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 385
def advice_5_385: Prop := c.Advice 5 385 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_385: Prop := c.Advice 17 385 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_385: Prop := c.Advice 18 385 = 1^(-1)
--Annotation: assign q_enable 386
def fixed_1670: Prop := c.Fixed 0 386 = 1
--Annotation: assign q_first 386
def fixed_1671: Prop := c.Fixed 1 386 = 0
--Annotation: assign q_last 386
def fixed_1672: Prop := c.Fixed 2 386 = 0
--Annotation: assign tag 386
def advice_0_386: Prop := c.Advice 0 386 = 0
--Annotation: assign index 386
def advice_1_386: Prop := c.Advice 1 386 = 0
--Annotation: assign is_code 386
def advice_2_386: Prop := c.Advice 2 386 = 0
--Annotation: assign value 386
def advice_3_386: Prop := c.Advice 3 386 = 0
--Annotation: assign push_data_left 386
def advice_13_386: Prop := c.Advice 13 386 = 0
--Annotation: assign length 386
def advice_15_386: Prop := c.Advice 15 386 = 0
--Annotation: assign push_data_size 386
def advice_16_386: Prop := c.Advice 16 386 = 0
--Annotation: assign value_rlc 386
def advice_14_386: Prop := c.Advice 14 386 = 0
--Annotation: assign code_hash 386
def advice_4_386: Prop := c.Advice 4 386 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 386
def advice_5_386: Prop := c.Advice 5 386 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_386: Prop := c.Advice 17 386 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_386: Prop := c.Advice 18 386 = 1^(-1)
--Annotation: assign q_enable 387
def fixed_1673: Prop := c.Fixed 0 387 = 1
--Annotation: assign q_first 387
def fixed_1674: Prop := c.Fixed 1 387 = 0
--Annotation: assign q_last 387
def fixed_1675: Prop := c.Fixed 2 387 = 0
--Annotation: assign tag 387
def advice_0_387: Prop := c.Advice 0 387 = 0
--Annotation: assign index 387
def advice_1_387: Prop := c.Advice 1 387 = 0
--Annotation: assign is_code 387
def advice_2_387: Prop := c.Advice 2 387 = 0
--Annotation: assign value 387
def advice_3_387: Prop := c.Advice 3 387 = 0
--Annotation: assign push_data_left 387
def advice_13_387: Prop := c.Advice 13 387 = 0
--Annotation: assign length 387
def advice_15_387: Prop := c.Advice 15 387 = 0
--Annotation: assign push_data_size 387
def advice_16_387: Prop := c.Advice 16 387 = 0
--Annotation: assign value_rlc 387
def advice_14_387: Prop := c.Advice 14 387 = 0
--Annotation: assign code_hash 387
def advice_4_387: Prop := c.Advice 4 387 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 387
def advice_5_387: Prop := c.Advice 5 387 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_387: Prop := c.Advice 17 387 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_387: Prop := c.Advice 18 387 = 1^(-1)
--Annotation: assign q_enable 388
def fixed_1676: Prop := c.Fixed 0 388 = 1
--Annotation: assign q_first 388
def fixed_1677: Prop := c.Fixed 1 388 = 0
--Annotation: assign q_last 388
def fixed_1678: Prop := c.Fixed 2 388 = 0
--Annotation: assign tag 388
def advice_0_388: Prop := c.Advice 0 388 = 0
--Annotation: assign index 388
def advice_1_388: Prop := c.Advice 1 388 = 0
--Annotation: assign is_code 388
def advice_2_388: Prop := c.Advice 2 388 = 0
--Annotation: assign value 388
def advice_3_388: Prop := c.Advice 3 388 = 0
--Annotation: assign push_data_left 388
def advice_13_388: Prop := c.Advice 13 388 = 0
--Annotation: assign length 388
def advice_15_388: Prop := c.Advice 15 388 = 0
--Annotation: assign push_data_size 388
def advice_16_388: Prop := c.Advice 16 388 = 0
--Annotation: assign value_rlc 388
def advice_14_388: Prop := c.Advice 14 388 = 0
--Annotation: assign code_hash 388
def advice_4_388: Prop := c.Advice 4 388 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 388
def advice_5_388: Prop := c.Advice 5 388 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_388: Prop := c.Advice 17 388 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_388: Prop := c.Advice 18 388 = 1^(-1)
--Annotation: assign q_enable 389
def fixed_1679: Prop := c.Fixed 0 389 = 1
--Annotation: assign q_first 389
def fixed_1680: Prop := c.Fixed 1 389 = 0
--Annotation: assign q_last 389
def fixed_1681: Prop := c.Fixed 2 389 = 0
--Annotation: assign tag 389
def advice_0_389: Prop := c.Advice 0 389 = 0
--Annotation: assign index 389
def advice_1_389: Prop := c.Advice 1 389 = 0
--Annotation: assign is_code 389
def advice_2_389: Prop := c.Advice 2 389 = 0
--Annotation: assign value 389
def advice_3_389: Prop := c.Advice 3 389 = 0
--Annotation: assign push_data_left 389
def advice_13_389: Prop := c.Advice 13 389 = 0
--Annotation: assign length 389
def advice_15_389: Prop := c.Advice 15 389 = 0
--Annotation: assign push_data_size 389
def advice_16_389: Prop := c.Advice 16 389 = 0
--Annotation: assign value_rlc 389
def advice_14_389: Prop := c.Advice 14 389 = 0
--Annotation: assign code_hash 389
def advice_4_389: Prop := c.Advice 4 389 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 389
def advice_5_389: Prop := c.Advice 5 389 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_389: Prop := c.Advice 17 389 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_389: Prop := c.Advice 18 389 = 1^(-1)
--Annotation: assign q_enable 390
def fixed_1682: Prop := c.Fixed 0 390 = 1
--Annotation: assign q_first 390
def fixed_1683: Prop := c.Fixed 1 390 = 0
--Annotation: assign q_last 390
def fixed_1684: Prop := c.Fixed 2 390 = 0
--Annotation: assign tag 390
def advice_0_390: Prop := c.Advice 0 390 = 0
--Annotation: assign index 390
def advice_1_390: Prop := c.Advice 1 390 = 0
--Annotation: assign is_code 390
def advice_2_390: Prop := c.Advice 2 390 = 0
--Annotation: assign value 390
def advice_3_390: Prop := c.Advice 3 390 = 0
--Annotation: assign push_data_left 390
def advice_13_390: Prop := c.Advice 13 390 = 0
--Annotation: assign length 390
def advice_15_390: Prop := c.Advice 15 390 = 0
--Annotation: assign push_data_size 390
def advice_16_390: Prop := c.Advice 16 390 = 0
--Annotation: assign value_rlc 390
def advice_14_390: Prop := c.Advice 14 390 = 0
--Annotation: assign code_hash 390
def advice_4_390: Prop := c.Advice 4 390 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 390
def advice_5_390: Prop := c.Advice 5 390 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_390: Prop := c.Advice 17 390 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_390: Prop := c.Advice 18 390 = 1^(-1)
--Annotation: assign q_enable 391
def fixed_1685: Prop := c.Fixed 0 391 = 1
--Annotation: assign q_first 391
def fixed_1686: Prop := c.Fixed 1 391 = 0
--Annotation: assign q_last 391
def fixed_1687: Prop := c.Fixed 2 391 = 0
--Annotation: assign tag 391
def advice_0_391: Prop := c.Advice 0 391 = 0
--Annotation: assign index 391
def advice_1_391: Prop := c.Advice 1 391 = 0
--Annotation: assign is_code 391
def advice_2_391: Prop := c.Advice 2 391 = 0
--Annotation: assign value 391
def advice_3_391: Prop := c.Advice 3 391 = 0
--Annotation: assign push_data_left 391
def advice_13_391: Prop := c.Advice 13 391 = 0
--Annotation: assign length 391
def advice_15_391: Prop := c.Advice 15 391 = 0
--Annotation: assign push_data_size 391
def advice_16_391: Prop := c.Advice 16 391 = 0
--Annotation: assign value_rlc 391
def advice_14_391: Prop := c.Advice 14 391 = 0
--Annotation: assign code_hash 391
def advice_4_391: Prop := c.Advice 4 391 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 391
def advice_5_391: Prop := c.Advice 5 391 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_391: Prop := c.Advice 17 391 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_391: Prop := c.Advice 18 391 = 1^(-1)
--Annotation: assign q_enable 392
def fixed_1688: Prop := c.Fixed 0 392 = 1
--Annotation: assign q_first 392
def fixed_1689: Prop := c.Fixed 1 392 = 0
--Annotation: assign q_last 392
def fixed_1690: Prop := c.Fixed 2 392 = 0
--Annotation: assign tag 392
def advice_0_392: Prop := c.Advice 0 392 = 0
--Annotation: assign index 392
def advice_1_392: Prop := c.Advice 1 392 = 0
--Annotation: assign is_code 392
def advice_2_392: Prop := c.Advice 2 392 = 0
--Annotation: assign value 392
def advice_3_392: Prop := c.Advice 3 392 = 0
--Annotation: assign push_data_left 392
def advice_13_392: Prop := c.Advice 13 392 = 0
--Annotation: assign length 392
def advice_15_392: Prop := c.Advice 15 392 = 0
--Annotation: assign push_data_size 392
def advice_16_392: Prop := c.Advice 16 392 = 0
--Annotation: assign value_rlc 392
def advice_14_392: Prop := c.Advice 14 392 = 0
--Annotation: assign code_hash 392
def advice_4_392: Prop := c.Advice 4 392 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 392
def advice_5_392: Prop := c.Advice 5 392 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_392: Prop := c.Advice 17 392 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_392: Prop := c.Advice 18 392 = 1^(-1)
--Annotation: assign q_enable 393
def fixed_1691: Prop := c.Fixed 0 393 = 1
--Annotation: assign q_first 393
def fixed_1692: Prop := c.Fixed 1 393 = 0
--Annotation: assign q_last 393
def fixed_1693: Prop := c.Fixed 2 393 = 0
--Annotation: assign tag 393
def advice_0_393: Prop := c.Advice 0 393 = 0
--Annotation: assign index 393
def advice_1_393: Prop := c.Advice 1 393 = 0
--Annotation: assign is_code 393
def advice_2_393: Prop := c.Advice 2 393 = 0
--Annotation: assign value 393
def advice_3_393: Prop := c.Advice 3 393 = 0
--Annotation: assign push_data_left 393
def advice_13_393: Prop := c.Advice 13 393 = 0
--Annotation: assign length 393
def advice_15_393: Prop := c.Advice 15 393 = 0
--Annotation: assign push_data_size 393
def advice_16_393: Prop := c.Advice 16 393 = 0
--Annotation: assign value_rlc 393
def advice_14_393: Prop := c.Advice 14 393 = 0
--Annotation: assign code_hash 393
def advice_4_393: Prop := c.Advice 4 393 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 393
def advice_5_393: Prop := c.Advice 5 393 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_393: Prop := c.Advice 17 393 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_393: Prop := c.Advice 18 393 = 1^(-1)
--Annotation: assign q_enable 394
def fixed_1694: Prop := c.Fixed 0 394 = 1
--Annotation: assign q_first 394
def fixed_1695: Prop := c.Fixed 1 394 = 0
--Annotation: assign q_last 394
def fixed_1696: Prop := c.Fixed 2 394 = 0
--Annotation: assign tag 394
def advice_0_394: Prop := c.Advice 0 394 = 0
--Annotation: assign index 394
def advice_1_394: Prop := c.Advice 1 394 = 0
--Annotation: assign is_code 394
def advice_2_394: Prop := c.Advice 2 394 = 0
--Annotation: assign value 394
def advice_3_394: Prop := c.Advice 3 394 = 0
--Annotation: assign push_data_left 394
def advice_13_394: Prop := c.Advice 13 394 = 0
--Annotation: assign length 394
def advice_15_394: Prop := c.Advice 15 394 = 0
--Annotation: assign push_data_size 394
def advice_16_394: Prop := c.Advice 16 394 = 0
--Annotation: assign value_rlc 394
def advice_14_394: Prop := c.Advice 14 394 = 0
--Annotation: assign code_hash 394
def advice_4_394: Prop := c.Advice 4 394 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 394
def advice_5_394: Prop := c.Advice 5 394 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_394: Prop := c.Advice 17 394 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_394: Prop := c.Advice 18 394 = 1^(-1)
--Annotation: assign q_enable 395
def fixed_1697: Prop := c.Fixed 0 395 = 1
--Annotation: assign q_first 395
def fixed_1698: Prop := c.Fixed 1 395 = 0
--Annotation: assign q_last 395
def fixed_1699: Prop := c.Fixed 2 395 = 0
--Annotation: assign tag 395
def advice_0_395: Prop := c.Advice 0 395 = 0
--Annotation: assign index 395
def advice_1_395: Prop := c.Advice 1 395 = 0
--Annotation: assign is_code 395
def advice_2_395: Prop := c.Advice 2 395 = 0
--Annotation: assign value 395
def advice_3_395: Prop := c.Advice 3 395 = 0
--Annotation: assign push_data_left 395
def advice_13_395: Prop := c.Advice 13 395 = 0
--Annotation: assign length 395
def advice_15_395: Prop := c.Advice 15 395 = 0
--Annotation: assign push_data_size 395
def advice_16_395: Prop := c.Advice 16 395 = 0
--Annotation: assign value_rlc 395
def advice_14_395: Prop := c.Advice 14 395 = 0
--Annotation: assign code_hash 395
def advice_4_395: Prop := c.Advice 4 395 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 395
def advice_5_395: Prop := c.Advice 5 395 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_395: Prop := c.Advice 17 395 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_395: Prop := c.Advice 18 395 = 1^(-1)
--Annotation: assign q_enable 396
def fixed_1700: Prop := c.Fixed 0 396 = 1
--Annotation: assign q_first 396
def fixed_1701: Prop := c.Fixed 1 396 = 0
--Annotation: assign q_last 396
def fixed_1702: Prop := c.Fixed 2 396 = 0
--Annotation: assign tag 396
def advice_0_396: Prop := c.Advice 0 396 = 0
--Annotation: assign index 396
def advice_1_396: Prop := c.Advice 1 396 = 0
--Annotation: assign is_code 396
def advice_2_396: Prop := c.Advice 2 396 = 0
--Annotation: assign value 396
def advice_3_396: Prop := c.Advice 3 396 = 0
--Annotation: assign push_data_left 396
def advice_13_396: Prop := c.Advice 13 396 = 0
--Annotation: assign length 396
def advice_15_396: Prop := c.Advice 15 396 = 0
--Annotation: assign push_data_size 396
def advice_16_396: Prop := c.Advice 16 396 = 0
--Annotation: assign value_rlc 396
def advice_14_396: Prop := c.Advice 14 396 = 0
--Annotation: assign code_hash 396
def advice_4_396: Prop := c.Advice 4 396 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 396
def advice_5_396: Prop := c.Advice 5 396 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_396: Prop := c.Advice 17 396 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_396: Prop := c.Advice 18 396 = 1^(-1)
--Annotation: assign q_enable 397
def fixed_1703: Prop := c.Fixed 0 397 = 1
--Annotation: assign q_first 397
def fixed_1704: Prop := c.Fixed 1 397 = 0
--Annotation: assign q_last 397
def fixed_1705: Prop := c.Fixed 2 397 = 0
--Annotation: assign tag 397
def advice_0_397: Prop := c.Advice 0 397 = 0
--Annotation: assign index 397
def advice_1_397: Prop := c.Advice 1 397 = 0
--Annotation: assign is_code 397
def advice_2_397: Prop := c.Advice 2 397 = 0
--Annotation: assign value 397
def advice_3_397: Prop := c.Advice 3 397 = 0
--Annotation: assign push_data_left 397
def advice_13_397: Prop := c.Advice 13 397 = 0
--Annotation: assign length 397
def advice_15_397: Prop := c.Advice 15 397 = 0
--Annotation: assign push_data_size 397
def advice_16_397: Prop := c.Advice 16 397 = 0
--Annotation: assign value_rlc 397
def advice_14_397: Prop := c.Advice 14 397 = 0
--Annotation: assign code_hash 397
def advice_4_397: Prop := c.Advice 4 397 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 397
def advice_5_397: Prop := c.Advice 5 397 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_397: Prop := c.Advice 17 397 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_397: Prop := c.Advice 18 397 = 1^(-1)
--Annotation: assign q_enable 398
def fixed_1706: Prop := c.Fixed 0 398 = 1
--Annotation: assign q_first 398
def fixed_1707: Prop := c.Fixed 1 398 = 0
--Annotation: assign q_last 398
def fixed_1708: Prop := c.Fixed 2 398 = 0
--Annotation: assign tag 398
def advice_0_398: Prop := c.Advice 0 398 = 0
--Annotation: assign index 398
def advice_1_398: Prop := c.Advice 1 398 = 0
--Annotation: assign is_code 398
def advice_2_398: Prop := c.Advice 2 398 = 0
--Annotation: assign value 398
def advice_3_398: Prop := c.Advice 3 398 = 0
--Annotation: assign push_data_left 398
def advice_13_398: Prop := c.Advice 13 398 = 0
--Annotation: assign length 398
def advice_15_398: Prop := c.Advice 15 398 = 0
--Annotation: assign push_data_size 398
def advice_16_398: Prop := c.Advice 16 398 = 0
--Annotation: assign value_rlc 398
def advice_14_398: Prop := c.Advice 14 398 = 0
--Annotation: assign code_hash 398
def advice_4_398: Prop := c.Advice 4 398 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 398
def advice_5_398: Prop := c.Advice 5 398 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_398: Prop := c.Advice 17 398 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_398: Prop := c.Advice 18 398 = 1^(-1)
--Annotation: assign q_enable 399
def fixed_1709: Prop := c.Fixed 0 399 = 1
--Annotation: assign q_first 399
def fixed_1710: Prop := c.Fixed 1 399 = 0
--Annotation: assign q_last 399
def fixed_1711: Prop := c.Fixed 2 399 = 0
--Annotation: assign tag 399
def advice_0_399: Prop := c.Advice 0 399 = 0
--Annotation: assign index 399
def advice_1_399: Prop := c.Advice 1 399 = 0
--Annotation: assign is_code 399
def advice_2_399: Prop := c.Advice 2 399 = 0
--Annotation: assign value 399
def advice_3_399: Prop := c.Advice 3 399 = 0
--Annotation: assign push_data_left 399
def advice_13_399: Prop := c.Advice 13 399 = 0
--Annotation: assign length 399
def advice_15_399: Prop := c.Advice 15 399 = 0
--Annotation: assign push_data_size 399
def advice_16_399: Prop := c.Advice 16 399 = 0
--Annotation: assign value_rlc 399
def advice_14_399: Prop := c.Advice 14 399 = 0
--Annotation: assign code_hash 399
def advice_4_399: Prop := c.Advice 4 399 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 399
def advice_5_399: Prop := c.Advice 5 399 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_399: Prop := c.Advice 17 399 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_399: Prop := c.Advice 18 399 = 1^(-1)
--Annotation: assign q_enable 400
def fixed_1712: Prop := c.Fixed 0 400 = 1
--Annotation: assign q_first 400
def fixed_1713: Prop := c.Fixed 1 400 = 0
--Annotation: assign q_last 400
def fixed_1714: Prop := c.Fixed 2 400 = 0
--Annotation: assign tag 400
def advice_0_400: Prop := c.Advice 0 400 = 0
--Annotation: assign index 400
def advice_1_400: Prop := c.Advice 1 400 = 0
--Annotation: assign is_code 400
def advice_2_400: Prop := c.Advice 2 400 = 0
--Annotation: assign value 400
def advice_3_400: Prop := c.Advice 3 400 = 0
--Annotation: assign push_data_left 400
def advice_13_400: Prop := c.Advice 13 400 = 0
--Annotation: assign length 400
def advice_15_400: Prop := c.Advice 15 400 = 0
--Annotation: assign push_data_size 400
def advice_16_400: Prop := c.Advice 16 400 = 0
--Annotation: assign value_rlc 400
def advice_14_400: Prop := c.Advice 14 400 = 0
--Annotation: assign code_hash 400
def advice_4_400: Prop := c.Advice 4 400 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 400
def advice_5_400: Prop := c.Advice 5 400 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_400: Prop := c.Advice 17 400 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_400: Prop := c.Advice 18 400 = 1^(-1)
--Annotation: assign q_enable 401
def fixed_1715: Prop := c.Fixed 0 401 = 1
--Annotation: assign q_first 401
def fixed_1716: Prop := c.Fixed 1 401 = 0
--Annotation: assign q_last 401
def fixed_1717: Prop := c.Fixed 2 401 = 0
--Annotation: assign tag 401
def advice_0_401: Prop := c.Advice 0 401 = 0
--Annotation: assign index 401
def advice_1_401: Prop := c.Advice 1 401 = 0
--Annotation: assign is_code 401
def advice_2_401: Prop := c.Advice 2 401 = 0
--Annotation: assign value 401
def advice_3_401: Prop := c.Advice 3 401 = 0
--Annotation: assign push_data_left 401
def advice_13_401: Prop := c.Advice 13 401 = 0
--Annotation: assign length 401
def advice_15_401: Prop := c.Advice 15 401 = 0
--Annotation: assign push_data_size 401
def advice_16_401: Prop := c.Advice 16 401 = 0
--Annotation: assign value_rlc 401
def advice_14_401: Prop := c.Advice 14 401 = 0
--Annotation: assign code_hash 401
def advice_4_401: Prop := c.Advice 4 401 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 401
def advice_5_401: Prop := c.Advice 5 401 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_401: Prop := c.Advice 17 401 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_401: Prop := c.Advice 18 401 = 1^(-1)
--Annotation: assign q_enable 402
def fixed_1718: Prop := c.Fixed 0 402 = 1
--Annotation: assign q_first 402
def fixed_1719: Prop := c.Fixed 1 402 = 0
--Annotation: assign q_last 402
def fixed_1720: Prop := c.Fixed 2 402 = 0
--Annotation: assign tag 402
def advice_0_402: Prop := c.Advice 0 402 = 0
--Annotation: assign index 402
def advice_1_402: Prop := c.Advice 1 402 = 0
--Annotation: assign is_code 402
def advice_2_402: Prop := c.Advice 2 402 = 0
--Annotation: assign value 402
def advice_3_402: Prop := c.Advice 3 402 = 0
--Annotation: assign push_data_left 402
def advice_13_402: Prop := c.Advice 13 402 = 0
--Annotation: assign length 402
def advice_15_402: Prop := c.Advice 15 402 = 0
--Annotation: assign push_data_size 402
def advice_16_402: Prop := c.Advice 16 402 = 0
--Annotation: assign value_rlc 402
def advice_14_402: Prop := c.Advice 14 402 = 0
--Annotation: assign code_hash 402
def advice_4_402: Prop := c.Advice 4 402 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 402
def advice_5_402: Prop := c.Advice 5 402 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_402: Prop := c.Advice 17 402 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_402: Prop := c.Advice 18 402 = 1^(-1)
--Annotation: assign q_enable 403
def fixed_1721: Prop := c.Fixed 0 403 = 1
--Annotation: assign q_first 403
def fixed_1722: Prop := c.Fixed 1 403 = 0
--Annotation: assign q_last 403
def fixed_1723: Prop := c.Fixed 2 403 = 0
--Annotation: assign tag 403
def advice_0_403: Prop := c.Advice 0 403 = 0
--Annotation: assign index 403
def advice_1_403: Prop := c.Advice 1 403 = 0
--Annotation: assign is_code 403
def advice_2_403: Prop := c.Advice 2 403 = 0
--Annotation: assign value 403
def advice_3_403: Prop := c.Advice 3 403 = 0
--Annotation: assign push_data_left 403
def advice_13_403: Prop := c.Advice 13 403 = 0
--Annotation: assign length 403
def advice_15_403: Prop := c.Advice 15 403 = 0
--Annotation: assign push_data_size 403
def advice_16_403: Prop := c.Advice 16 403 = 0
--Annotation: assign value_rlc 403
def advice_14_403: Prop := c.Advice 14 403 = 0
--Annotation: assign code_hash 403
def advice_4_403: Prop := c.Advice 4 403 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 403
def advice_5_403: Prop := c.Advice 5 403 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_403: Prop := c.Advice 17 403 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_403: Prop := c.Advice 18 403 = 1^(-1)
--Annotation: assign q_enable 404
def fixed_1724: Prop := c.Fixed 0 404 = 1
--Annotation: assign q_first 404
def fixed_1725: Prop := c.Fixed 1 404 = 0
--Annotation: assign q_last 404
def fixed_1726: Prop := c.Fixed 2 404 = 0
--Annotation: assign tag 404
def advice_0_404: Prop := c.Advice 0 404 = 0
--Annotation: assign index 404
def advice_1_404: Prop := c.Advice 1 404 = 0
--Annotation: assign is_code 404
def advice_2_404: Prop := c.Advice 2 404 = 0
--Annotation: assign value 404
def advice_3_404: Prop := c.Advice 3 404 = 0
--Annotation: assign push_data_left 404
def advice_13_404: Prop := c.Advice 13 404 = 0
--Annotation: assign length 404
def advice_15_404: Prop := c.Advice 15 404 = 0
--Annotation: assign push_data_size 404
def advice_16_404: Prop := c.Advice 16 404 = 0
--Annotation: assign value_rlc 404
def advice_14_404: Prop := c.Advice 14 404 = 0
--Annotation: assign code_hash 404
def advice_4_404: Prop := c.Advice 4 404 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 404
def advice_5_404: Prop := c.Advice 5 404 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_404: Prop := c.Advice 17 404 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_404: Prop := c.Advice 18 404 = 1^(-1)
--Annotation: assign q_enable 405
def fixed_1727: Prop := c.Fixed 0 405 = 1
--Annotation: assign q_first 405
def fixed_1728: Prop := c.Fixed 1 405 = 0
--Annotation: assign q_last 405
def fixed_1729: Prop := c.Fixed 2 405 = 0
--Annotation: assign tag 405
def advice_0_405: Prop := c.Advice 0 405 = 0
--Annotation: assign index 405
def advice_1_405: Prop := c.Advice 1 405 = 0
--Annotation: assign is_code 405
def advice_2_405: Prop := c.Advice 2 405 = 0
--Annotation: assign value 405
def advice_3_405: Prop := c.Advice 3 405 = 0
--Annotation: assign push_data_left 405
def advice_13_405: Prop := c.Advice 13 405 = 0
--Annotation: assign length 405
def advice_15_405: Prop := c.Advice 15 405 = 0
--Annotation: assign push_data_size 405
def advice_16_405: Prop := c.Advice 16 405 = 0
--Annotation: assign value_rlc 405
def advice_14_405: Prop := c.Advice 14 405 = 0
--Annotation: assign code_hash 405
def advice_4_405: Prop := c.Advice 4 405 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 405
def advice_5_405: Prop := c.Advice 5 405 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_405: Prop := c.Advice 17 405 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_405: Prop := c.Advice 18 405 = 1^(-1)
--Annotation: assign q_enable 406
def fixed_1730: Prop := c.Fixed 0 406 = 1
--Annotation: assign q_first 406
def fixed_1731: Prop := c.Fixed 1 406 = 0
--Annotation: assign q_last 406
def fixed_1732: Prop := c.Fixed 2 406 = 0
--Annotation: assign tag 406
def advice_0_406: Prop := c.Advice 0 406 = 0
--Annotation: assign index 406
def advice_1_406: Prop := c.Advice 1 406 = 0
--Annotation: assign is_code 406
def advice_2_406: Prop := c.Advice 2 406 = 0
--Annotation: assign value 406
def advice_3_406: Prop := c.Advice 3 406 = 0
--Annotation: assign push_data_left 406
def advice_13_406: Prop := c.Advice 13 406 = 0
--Annotation: assign length 406
def advice_15_406: Prop := c.Advice 15 406 = 0
--Annotation: assign push_data_size 406
def advice_16_406: Prop := c.Advice 16 406 = 0
--Annotation: assign value_rlc 406
def advice_14_406: Prop := c.Advice 14 406 = 0
--Annotation: assign code_hash 406
def advice_4_406: Prop := c.Advice 4 406 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 406
def advice_5_406: Prop := c.Advice 5 406 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_406: Prop := c.Advice 17 406 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_406: Prop := c.Advice 18 406 = 1^(-1)
--Annotation: assign q_enable 407
def fixed_1733: Prop := c.Fixed 0 407 = 1
--Annotation: assign q_first 407
def fixed_1734: Prop := c.Fixed 1 407 = 0
--Annotation: assign q_last 407
def fixed_1735: Prop := c.Fixed 2 407 = 0
--Annotation: assign tag 407
def advice_0_407: Prop := c.Advice 0 407 = 0
--Annotation: assign index 407
def advice_1_407: Prop := c.Advice 1 407 = 0
--Annotation: assign is_code 407
def advice_2_407: Prop := c.Advice 2 407 = 0
--Annotation: assign value 407
def advice_3_407: Prop := c.Advice 3 407 = 0
--Annotation: assign push_data_left 407
def advice_13_407: Prop := c.Advice 13 407 = 0
--Annotation: assign length 407
def advice_15_407: Prop := c.Advice 15 407 = 0
--Annotation: assign push_data_size 407
def advice_16_407: Prop := c.Advice 16 407 = 0
--Annotation: assign value_rlc 407
def advice_14_407: Prop := c.Advice 14 407 = 0
--Annotation: assign code_hash 407
def advice_4_407: Prop := c.Advice 4 407 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 407
def advice_5_407: Prop := c.Advice 5 407 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_407: Prop := c.Advice 17 407 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_407: Prop := c.Advice 18 407 = 1^(-1)
--Annotation: assign q_enable 408
def fixed_1736: Prop := c.Fixed 0 408 = 1
--Annotation: assign q_first 408
def fixed_1737: Prop := c.Fixed 1 408 = 0
--Annotation: assign q_last 408
def fixed_1738: Prop := c.Fixed 2 408 = 0
--Annotation: assign tag 408
def advice_0_408: Prop := c.Advice 0 408 = 0
--Annotation: assign index 408
def advice_1_408: Prop := c.Advice 1 408 = 0
--Annotation: assign is_code 408
def advice_2_408: Prop := c.Advice 2 408 = 0
--Annotation: assign value 408
def advice_3_408: Prop := c.Advice 3 408 = 0
--Annotation: assign push_data_left 408
def advice_13_408: Prop := c.Advice 13 408 = 0
--Annotation: assign length 408
def advice_15_408: Prop := c.Advice 15 408 = 0
--Annotation: assign push_data_size 408
def advice_16_408: Prop := c.Advice 16 408 = 0
--Annotation: assign value_rlc 408
def advice_14_408: Prop := c.Advice 14 408 = 0
--Annotation: assign code_hash 408
def advice_4_408: Prop := c.Advice 4 408 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 408
def advice_5_408: Prop := c.Advice 5 408 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_408: Prop := c.Advice 17 408 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_408: Prop := c.Advice 18 408 = 1^(-1)
--Annotation: assign q_enable 409
def fixed_1739: Prop := c.Fixed 0 409 = 1
--Annotation: assign q_first 409
def fixed_1740: Prop := c.Fixed 1 409 = 0
--Annotation: assign q_last 409
def fixed_1741: Prop := c.Fixed 2 409 = 0
--Annotation: assign tag 409
def advice_0_409: Prop := c.Advice 0 409 = 0
--Annotation: assign index 409
def advice_1_409: Prop := c.Advice 1 409 = 0
--Annotation: assign is_code 409
def advice_2_409: Prop := c.Advice 2 409 = 0
--Annotation: assign value 409
def advice_3_409: Prop := c.Advice 3 409 = 0
--Annotation: assign push_data_left 409
def advice_13_409: Prop := c.Advice 13 409 = 0
--Annotation: assign length 409
def advice_15_409: Prop := c.Advice 15 409 = 0
--Annotation: assign push_data_size 409
def advice_16_409: Prop := c.Advice 16 409 = 0
--Annotation: assign value_rlc 409
def advice_14_409: Prop := c.Advice 14 409 = 0
--Annotation: assign code_hash 409
def advice_4_409: Prop := c.Advice 4 409 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 409
def advice_5_409: Prop := c.Advice 5 409 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_409: Prop := c.Advice 17 409 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_409: Prop := c.Advice 18 409 = 1^(-1)
--Annotation: assign q_enable 410
def fixed_1742: Prop := c.Fixed 0 410 = 1
--Annotation: assign q_first 410
def fixed_1743: Prop := c.Fixed 1 410 = 0
--Annotation: assign q_last 410
def fixed_1744: Prop := c.Fixed 2 410 = 0
--Annotation: assign tag 410
def advice_0_410: Prop := c.Advice 0 410 = 0
--Annotation: assign index 410
def advice_1_410: Prop := c.Advice 1 410 = 0
--Annotation: assign is_code 410
def advice_2_410: Prop := c.Advice 2 410 = 0
--Annotation: assign value 410
def advice_3_410: Prop := c.Advice 3 410 = 0
--Annotation: assign push_data_left 410
def advice_13_410: Prop := c.Advice 13 410 = 0
--Annotation: assign length 410
def advice_15_410: Prop := c.Advice 15 410 = 0
--Annotation: assign push_data_size 410
def advice_16_410: Prop := c.Advice 16 410 = 0
--Annotation: assign value_rlc 410
def advice_14_410: Prop := c.Advice 14 410 = 0
--Annotation: assign code_hash 410
def advice_4_410: Prop := c.Advice 4 410 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 410
def advice_5_410: Prop := c.Advice 5 410 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_410: Prop := c.Advice 17 410 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_410: Prop := c.Advice 18 410 = 1^(-1)
--Annotation: assign q_enable 411
def fixed_1745: Prop := c.Fixed 0 411 = 1
--Annotation: assign q_first 411
def fixed_1746: Prop := c.Fixed 1 411 = 0
--Annotation: assign q_last 411
def fixed_1747: Prop := c.Fixed 2 411 = 0
--Annotation: assign tag 411
def advice_0_411: Prop := c.Advice 0 411 = 0
--Annotation: assign index 411
def advice_1_411: Prop := c.Advice 1 411 = 0
--Annotation: assign is_code 411
def advice_2_411: Prop := c.Advice 2 411 = 0
--Annotation: assign value 411
def advice_3_411: Prop := c.Advice 3 411 = 0
--Annotation: assign push_data_left 411
def advice_13_411: Prop := c.Advice 13 411 = 0
--Annotation: assign length 411
def advice_15_411: Prop := c.Advice 15 411 = 0
--Annotation: assign push_data_size 411
def advice_16_411: Prop := c.Advice 16 411 = 0
--Annotation: assign value_rlc 411
def advice_14_411: Prop := c.Advice 14 411 = 0
--Annotation: assign code_hash 411
def advice_4_411: Prop := c.Advice 4 411 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 411
def advice_5_411: Prop := c.Advice 5 411 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_411: Prop := c.Advice 17 411 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_411: Prop := c.Advice 18 411 = 1^(-1)
--Annotation: assign q_enable 412
def fixed_1748: Prop := c.Fixed 0 412 = 1
--Annotation: assign q_first 412
def fixed_1749: Prop := c.Fixed 1 412 = 0
--Annotation: assign q_last 412
def fixed_1750: Prop := c.Fixed 2 412 = 0
--Annotation: assign tag 412
def advice_0_412: Prop := c.Advice 0 412 = 0
--Annotation: assign index 412
def advice_1_412: Prop := c.Advice 1 412 = 0
--Annotation: assign is_code 412
def advice_2_412: Prop := c.Advice 2 412 = 0
--Annotation: assign value 412
def advice_3_412: Prop := c.Advice 3 412 = 0
--Annotation: assign push_data_left 412
def advice_13_412: Prop := c.Advice 13 412 = 0
--Annotation: assign length 412
def advice_15_412: Prop := c.Advice 15 412 = 0
--Annotation: assign push_data_size 412
def advice_16_412: Prop := c.Advice 16 412 = 0
--Annotation: assign value_rlc 412
def advice_14_412: Prop := c.Advice 14 412 = 0
--Annotation: assign code_hash 412
def advice_4_412: Prop := c.Advice 4 412 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 412
def advice_5_412: Prop := c.Advice 5 412 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_412: Prop := c.Advice 17 412 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_412: Prop := c.Advice 18 412 = 1^(-1)
--Annotation: assign q_enable 413
def fixed_1751: Prop := c.Fixed 0 413 = 1
--Annotation: assign q_first 413
def fixed_1752: Prop := c.Fixed 1 413 = 0
--Annotation: assign q_last 413
def fixed_1753: Prop := c.Fixed 2 413 = 0
--Annotation: assign tag 413
def advice_0_413: Prop := c.Advice 0 413 = 0
--Annotation: assign index 413
def advice_1_413: Prop := c.Advice 1 413 = 0
--Annotation: assign is_code 413
def advice_2_413: Prop := c.Advice 2 413 = 0
--Annotation: assign value 413
def advice_3_413: Prop := c.Advice 3 413 = 0
--Annotation: assign push_data_left 413
def advice_13_413: Prop := c.Advice 13 413 = 0
--Annotation: assign length 413
def advice_15_413: Prop := c.Advice 15 413 = 0
--Annotation: assign push_data_size 413
def advice_16_413: Prop := c.Advice 16 413 = 0
--Annotation: assign value_rlc 413
def advice_14_413: Prop := c.Advice 14 413 = 0
--Annotation: assign code_hash 413
def advice_4_413: Prop := c.Advice 4 413 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 413
def advice_5_413: Prop := c.Advice 5 413 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_413: Prop := c.Advice 17 413 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_413: Prop := c.Advice 18 413 = 1^(-1)
--Annotation: assign q_enable 414
def fixed_1754: Prop := c.Fixed 0 414 = 1
--Annotation: assign q_first 414
def fixed_1755: Prop := c.Fixed 1 414 = 0
--Annotation: assign q_last 414
def fixed_1756: Prop := c.Fixed 2 414 = 0
--Annotation: assign tag 414
def advice_0_414: Prop := c.Advice 0 414 = 0
--Annotation: assign index 414
def advice_1_414: Prop := c.Advice 1 414 = 0
--Annotation: assign is_code 414
def advice_2_414: Prop := c.Advice 2 414 = 0
--Annotation: assign value 414
def advice_3_414: Prop := c.Advice 3 414 = 0
--Annotation: assign push_data_left 414
def advice_13_414: Prop := c.Advice 13 414 = 0
--Annotation: assign length 414
def advice_15_414: Prop := c.Advice 15 414 = 0
--Annotation: assign push_data_size 414
def advice_16_414: Prop := c.Advice 16 414 = 0
--Annotation: assign value_rlc 414
def advice_14_414: Prop := c.Advice 14 414 = 0
--Annotation: assign code_hash 414
def advice_4_414: Prop := c.Advice 4 414 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 414
def advice_5_414: Prop := c.Advice 5 414 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_414: Prop := c.Advice 17 414 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_414: Prop := c.Advice 18 414 = 1^(-1)
--Annotation: assign q_enable 415
def fixed_1757: Prop := c.Fixed 0 415 = 1
--Annotation: assign q_first 415
def fixed_1758: Prop := c.Fixed 1 415 = 0
--Annotation: assign q_last 415
def fixed_1759: Prop := c.Fixed 2 415 = 0
--Annotation: assign tag 415
def advice_0_415: Prop := c.Advice 0 415 = 0
--Annotation: assign index 415
def advice_1_415: Prop := c.Advice 1 415 = 0
--Annotation: assign is_code 415
def advice_2_415: Prop := c.Advice 2 415 = 0
--Annotation: assign value 415
def advice_3_415: Prop := c.Advice 3 415 = 0
--Annotation: assign push_data_left 415
def advice_13_415: Prop := c.Advice 13 415 = 0
--Annotation: assign length 415
def advice_15_415: Prop := c.Advice 15 415 = 0
--Annotation: assign push_data_size 415
def advice_16_415: Prop := c.Advice 16 415 = 0
--Annotation: assign value_rlc 415
def advice_14_415: Prop := c.Advice 14 415 = 0
--Annotation: assign code_hash 415
def advice_4_415: Prop := c.Advice 4 415 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 415
def advice_5_415: Prop := c.Advice 5 415 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_415: Prop := c.Advice 17 415 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_415: Prop := c.Advice 18 415 = 1^(-1)
--Annotation: assign q_enable 416
def fixed_1760: Prop := c.Fixed 0 416 = 1
--Annotation: assign q_first 416
def fixed_1761: Prop := c.Fixed 1 416 = 0
--Annotation: assign q_last 416
def fixed_1762: Prop := c.Fixed 2 416 = 0
--Annotation: assign tag 416
def advice_0_416: Prop := c.Advice 0 416 = 0
--Annotation: assign index 416
def advice_1_416: Prop := c.Advice 1 416 = 0
--Annotation: assign is_code 416
def advice_2_416: Prop := c.Advice 2 416 = 0
--Annotation: assign value 416
def advice_3_416: Prop := c.Advice 3 416 = 0
--Annotation: assign push_data_left 416
def advice_13_416: Prop := c.Advice 13 416 = 0
--Annotation: assign length 416
def advice_15_416: Prop := c.Advice 15 416 = 0
--Annotation: assign push_data_size 416
def advice_16_416: Prop := c.Advice 16 416 = 0
--Annotation: assign value_rlc 416
def advice_14_416: Prop := c.Advice 14 416 = 0
--Annotation: assign code_hash 416
def advice_4_416: Prop := c.Advice 4 416 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 416
def advice_5_416: Prop := c.Advice 5 416 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_416: Prop := c.Advice 17 416 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_416: Prop := c.Advice 18 416 = 1^(-1)
--Annotation: assign q_enable 417
def fixed_1763: Prop := c.Fixed 0 417 = 1
--Annotation: assign q_first 417
def fixed_1764: Prop := c.Fixed 1 417 = 0
--Annotation: assign q_last 417
def fixed_1765: Prop := c.Fixed 2 417 = 0
--Annotation: assign tag 417
def advice_0_417: Prop := c.Advice 0 417 = 0
--Annotation: assign index 417
def advice_1_417: Prop := c.Advice 1 417 = 0
--Annotation: assign is_code 417
def advice_2_417: Prop := c.Advice 2 417 = 0
--Annotation: assign value 417
def advice_3_417: Prop := c.Advice 3 417 = 0
--Annotation: assign push_data_left 417
def advice_13_417: Prop := c.Advice 13 417 = 0
--Annotation: assign length 417
def advice_15_417: Prop := c.Advice 15 417 = 0
--Annotation: assign push_data_size 417
def advice_16_417: Prop := c.Advice 16 417 = 0
--Annotation: assign value_rlc 417
def advice_14_417: Prop := c.Advice 14 417 = 0
--Annotation: assign code_hash 417
def advice_4_417: Prop := c.Advice 4 417 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 417
def advice_5_417: Prop := c.Advice 5 417 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_417: Prop := c.Advice 17 417 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_417: Prop := c.Advice 18 417 = 1^(-1)
--Annotation: assign q_enable 418
def fixed_1766: Prop := c.Fixed 0 418 = 1
--Annotation: assign q_first 418
def fixed_1767: Prop := c.Fixed 1 418 = 0
--Annotation: assign q_last 418
def fixed_1768: Prop := c.Fixed 2 418 = 0
--Annotation: assign tag 418
def advice_0_418: Prop := c.Advice 0 418 = 0
--Annotation: assign index 418
def advice_1_418: Prop := c.Advice 1 418 = 0
--Annotation: assign is_code 418
def advice_2_418: Prop := c.Advice 2 418 = 0
--Annotation: assign value 418
def advice_3_418: Prop := c.Advice 3 418 = 0
--Annotation: assign push_data_left 418
def advice_13_418: Prop := c.Advice 13 418 = 0
--Annotation: assign length 418
def advice_15_418: Prop := c.Advice 15 418 = 0
--Annotation: assign push_data_size 418
def advice_16_418: Prop := c.Advice 16 418 = 0
--Annotation: assign value_rlc 418
def advice_14_418: Prop := c.Advice 14 418 = 0
--Annotation: assign code_hash 418
def advice_4_418: Prop := c.Advice 4 418 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 418
def advice_5_418: Prop := c.Advice 5 418 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_418: Prop := c.Advice 17 418 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_418: Prop := c.Advice 18 418 = 1^(-1)
--Annotation: assign q_enable 419
def fixed_1769: Prop := c.Fixed 0 419 = 1
--Annotation: assign q_first 419
def fixed_1770: Prop := c.Fixed 1 419 = 0
--Annotation: assign q_last 419
def fixed_1771: Prop := c.Fixed 2 419 = 0
--Annotation: assign tag 419
def advice_0_419: Prop := c.Advice 0 419 = 0
--Annotation: assign index 419
def advice_1_419: Prop := c.Advice 1 419 = 0
--Annotation: assign is_code 419
def advice_2_419: Prop := c.Advice 2 419 = 0
--Annotation: assign value 419
def advice_3_419: Prop := c.Advice 3 419 = 0
--Annotation: assign push_data_left 419
def advice_13_419: Prop := c.Advice 13 419 = 0
--Annotation: assign length 419
def advice_15_419: Prop := c.Advice 15 419 = 0
--Annotation: assign push_data_size 419
def advice_16_419: Prop := c.Advice 16 419 = 0
--Annotation: assign value_rlc 419
def advice_14_419: Prop := c.Advice 14 419 = 0
--Annotation: assign code_hash 419
def advice_4_419: Prop := c.Advice 4 419 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 419
def advice_5_419: Prop := c.Advice 5 419 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_419: Prop := c.Advice 17 419 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_419: Prop := c.Advice 18 419 = 1^(-1)
--Annotation: assign q_enable 420
def fixed_1772: Prop := c.Fixed 0 420 = 1
--Annotation: assign q_first 420
def fixed_1773: Prop := c.Fixed 1 420 = 0
--Annotation: assign q_last 420
def fixed_1774: Prop := c.Fixed 2 420 = 0
--Annotation: assign tag 420
def advice_0_420: Prop := c.Advice 0 420 = 0
--Annotation: assign index 420
def advice_1_420: Prop := c.Advice 1 420 = 0
--Annotation: assign is_code 420
def advice_2_420: Prop := c.Advice 2 420 = 0
--Annotation: assign value 420
def advice_3_420: Prop := c.Advice 3 420 = 0
--Annotation: assign push_data_left 420
def advice_13_420: Prop := c.Advice 13 420 = 0
--Annotation: assign length 420
def advice_15_420: Prop := c.Advice 15 420 = 0
--Annotation: assign push_data_size 420
def advice_16_420: Prop := c.Advice 16 420 = 0
--Annotation: assign value_rlc 420
def advice_14_420: Prop := c.Advice 14 420 = 0
--Annotation: assign code_hash 420
def advice_4_420: Prop := c.Advice 4 420 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 420
def advice_5_420: Prop := c.Advice 5 420 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_420: Prop := c.Advice 17 420 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_420: Prop := c.Advice 18 420 = 1^(-1)
--Annotation: assign q_enable 421
def fixed_1775: Prop := c.Fixed 0 421 = 1
--Annotation: assign q_first 421
def fixed_1776: Prop := c.Fixed 1 421 = 0
--Annotation: assign q_last 421
def fixed_1777: Prop := c.Fixed 2 421 = 0
--Annotation: assign tag 421
def advice_0_421: Prop := c.Advice 0 421 = 0
--Annotation: assign index 421
def advice_1_421: Prop := c.Advice 1 421 = 0
--Annotation: assign is_code 421
def advice_2_421: Prop := c.Advice 2 421 = 0
--Annotation: assign value 421
def advice_3_421: Prop := c.Advice 3 421 = 0
--Annotation: assign push_data_left 421
def advice_13_421: Prop := c.Advice 13 421 = 0
--Annotation: assign length 421
def advice_15_421: Prop := c.Advice 15 421 = 0
--Annotation: assign push_data_size 421
def advice_16_421: Prop := c.Advice 16 421 = 0
--Annotation: assign value_rlc 421
def advice_14_421: Prop := c.Advice 14 421 = 0
--Annotation: assign code_hash 421
def advice_4_421: Prop := c.Advice 4 421 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 421
def advice_5_421: Prop := c.Advice 5 421 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_421: Prop := c.Advice 17 421 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_421: Prop := c.Advice 18 421 = 1^(-1)
--Annotation: assign q_enable 422
def fixed_1778: Prop := c.Fixed 0 422 = 1
--Annotation: assign q_first 422
def fixed_1779: Prop := c.Fixed 1 422 = 0
--Annotation: assign q_last 422
def fixed_1780: Prop := c.Fixed 2 422 = 0
--Annotation: assign tag 422
def advice_0_422: Prop := c.Advice 0 422 = 0
--Annotation: assign index 422
def advice_1_422: Prop := c.Advice 1 422 = 0
--Annotation: assign is_code 422
def advice_2_422: Prop := c.Advice 2 422 = 0
--Annotation: assign value 422
def advice_3_422: Prop := c.Advice 3 422 = 0
--Annotation: assign push_data_left 422
def advice_13_422: Prop := c.Advice 13 422 = 0
--Annotation: assign length 422
def advice_15_422: Prop := c.Advice 15 422 = 0
--Annotation: assign push_data_size 422
def advice_16_422: Prop := c.Advice 16 422 = 0
--Annotation: assign value_rlc 422
def advice_14_422: Prop := c.Advice 14 422 = 0
--Annotation: assign code_hash 422
def advice_4_422: Prop := c.Advice 4 422 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 422
def advice_5_422: Prop := c.Advice 5 422 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_422: Prop := c.Advice 17 422 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_422: Prop := c.Advice 18 422 = 1^(-1)
--Annotation: assign q_enable 423
def fixed_1781: Prop := c.Fixed 0 423 = 1
--Annotation: assign q_first 423
def fixed_1782: Prop := c.Fixed 1 423 = 0
--Annotation: assign q_last 423
def fixed_1783: Prop := c.Fixed 2 423 = 0
--Annotation: assign tag 423
def advice_0_423: Prop := c.Advice 0 423 = 0
--Annotation: assign index 423
def advice_1_423: Prop := c.Advice 1 423 = 0
--Annotation: assign is_code 423
def advice_2_423: Prop := c.Advice 2 423 = 0
--Annotation: assign value 423
def advice_3_423: Prop := c.Advice 3 423 = 0
--Annotation: assign push_data_left 423
def advice_13_423: Prop := c.Advice 13 423 = 0
--Annotation: assign length 423
def advice_15_423: Prop := c.Advice 15 423 = 0
--Annotation: assign push_data_size 423
def advice_16_423: Prop := c.Advice 16 423 = 0
--Annotation: assign value_rlc 423
def advice_14_423: Prop := c.Advice 14 423 = 0
--Annotation: assign code_hash 423
def advice_4_423: Prop := c.Advice 4 423 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 423
def advice_5_423: Prop := c.Advice 5 423 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_423: Prop := c.Advice 17 423 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_423: Prop := c.Advice 18 423 = 1^(-1)
--Annotation: assign q_enable 424
def fixed_1784: Prop := c.Fixed 0 424 = 1
--Annotation: assign q_first 424
def fixed_1785: Prop := c.Fixed 1 424 = 0
--Annotation: assign q_last 424
def fixed_1786: Prop := c.Fixed 2 424 = 0
--Annotation: assign tag 424
def advice_0_424: Prop := c.Advice 0 424 = 0
--Annotation: assign index 424
def advice_1_424: Prop := c.Advice 1 424 = 0
--Annotation: assign is_code 424
def advice_2_424: Prop := c.Advice 2 424 = 0
--Annotation: assign value 424
def advice_3_424: Prop := c.Advice 3 424 = 0
--Annotation: assign push_data_left 424
def advice_13_424: Prop := c.Advice 13 424 = 0
--Annotation: assign length 424
def advice_15_424: Prop := c.Advice 15 424 = 0
--Annotation: assign push_data_size 424
def advice_16_424: Prop := c.Advice 16 424 = 0
--Annotation: assign value_rlc 424
def advice_14_424: Prop := c.Advice 14 424 = 0
--Annotation: assign code_hash 424
def advice_4_424: Prop := c.Advice 4 424 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 424
def advice_5_424: Prop := c.Advice 5 424 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_424: Prop := c.Advice 17 424 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_424: Prop := c.Advice 18 424 = 1^(-1)
--Annotation: assign q_enable 425
def fixed_1787: Prop := c.Fixed 0 425 = 1
--Annotation: assign q_first 425
def fixed_1788: Prop := c.Fixed 1 425 = 0
--Annotation: assign q_last 425
def fixed_1789: Prop := c.Fixed 2 425 = 0
--Annotation: assign tag 425
def advice_0_425: Prop := c.Advice 0 425 = 0
--Annotation: assign index 425
def advice_1_425: Prop := c.Advice 1 425 = 0
--Annotation: assign is_code 425
def advice_2_425: Prop := c.Advice 2 425 = 0
--Annotation: assign value 425
def advice_3_425: Prop := c.Advice 3 425 = 0
--Annotation: assign push_data_left 425
def advice_13_425: Prop := c.Advice 13 425 = 0
--Annotation: assign length 425
def advice_15_425: Prop := c.Advice 15 425 = 0
--Annotation: assign push_data_size 425
def advice_16_425: Prop := c.Advice 16 425 = 0
--Annotation: assign value_rlc 425
def advice_14_425: Prop := c.Advice 14 425 = 0
--Annotation: assign code_hash 425
def advice_4_425: Prop := c.Advice 4 425 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 425
def advice_5_425: Prop := c.Advice 5 425 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_425: Prop := c.Advice 17 425 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_425: Prop := c.Advice 18 425 = 1^(-1)
--Annotation: assign q_enable 426
def fixed_1790: Prop := c.Fixed 0 426 = 1
--Annotation: assign q_first 426
def fixed_1791: Prop := c.Fixed 1 426 = 0
--Annotation: assign q_last 426
def fixed_1792: Prop := c.Fixed 2 426 = 0
--Annotation: assign tag 426
def advice_0_426: Prop := c.Advice 0 426 = 0
--Annotation: assign index 426
def advice_1_426: Prop := c.Advice 1 426 = 0
--Annotation: assign is_code 426
def advice_2_426: Prop := c.Advice 2 426 = 0
--Annotation: assign value 426
def advice_3_426: Prop := c.Advice 3 426 = 0
--Annotation: assign push_data_left 426
def advice_13_426: Prop := c.Advice 13 426 = 0
--Annotation: assign length 426
def advice_15_426: Prop := c.Advice 15 426 = 0
--Annotation: assign push_data_size 426
def advice_16_426: Prop := c.Advice 16 426 = 0
--Annotation: assign value_rlc 426
def advice_14_426: Prop := c.Advice 14 426 = 0
--Annotation: assign code_hash 426
def advice_4_426: Prop := c.Advice 4 426 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 426
def advice_5_426: Prop := c.Advice 5 426 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_426: Prop := c.Advice 17 426 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_426: Prop := c.Advice 18 426 = 1^(-1)
--Annotation: assign q_enable 427
def fixed_1793: Prop := c.Fixed 0 427 = 1
--Annotation: assign q_first 427
def fixed_1794: Prop := c.Fixed 1 427 = 0
--Annotation: assign q_last 427
def fixed_1795: Prop := c.Fixed 2 427 = 0
--Annotation: assign tag 427
def advice_0_427: Prop := c.Advice 0 427 = 0
--Annotation: assign index 427
def advice_1_427: Prop := c.Advice 1 427 = 0
--Annotation: assign is_code 427
def advice_2_427: Prop := c.Advice 2 427 = 0
--Annotation: assign value 427
def advice_3_427: Prop := c.Advice 3 427 = 0
--Annotation: assign push_data_left 427
def advice_13_427: Prop := c.Advice 13 427 = 0
--Annotation: assign length 427
def advice_15_427: Prop := c.Advice 15 427 = 0
--Annotation: assign push_data_size 427
def advice_16_427: Prop := c.Advice 16 427 = 0
--Annotation: assign value_rlc 427
def advice_14_427: Prop := c.Advice 14 427 = 0
--Annotation: assign code_hash 427
def advice_4_427: Prop := c.Advice 4 427 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 427
def advice_5_427: Prop := c.Advice 5 427 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_427: Prop := c.Advice 17 427 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_427: Prop := c.Advice 18 427 = 1^(-1)
--Annotation: assign q_enable 428
def fixed_1796: Prop := c.Fixed 0 428 = 1
--Annotation: assign q_first 428
def fixed_1797: Prop := c.Fixed 1 428 = 0
--Annotation: assign q_last 428
def fixed_1798: Prop := c.Fixed 2 428 = 0
--Annotation: assign tag 428
def advice_0_428: Prop := c.Advice 0 428 = 0
--Annotation: assign index 428
def advice_1_428: Prop := c.Advice 1 428 = 0
--Annotation: assign is_code 428
def advice_2_428: Prop := c.Advice 2 428 = 0
--Annotation: assign value 428
def advice_3_428: Prop := c.Advice 3 428 = 0
--Annotation: assign push_data_left 428
def advice_13_428: Prop := c.Advice 13 428 = 0
--Annotation: assign length 428
def advice_15_428: Prop := c.Advice 15 428 = 0
--Annotation: assign push_data_size 428
def advice_16_428: Prop := c.Advice 16 428 = 0
--Annotation: assign value_rlc 428
def advice_14_428: Prop := c.Advice 14 428 = 0
--Annotation: assign code_hash 428
def advice_4_428: Prop := c.Advice 4 428 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 428
def advice_5_428: Prop := c.Advice 5 428 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_428: Prop := c.Advice 17 428 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_428: Prop := c.Advice 18 428 = 1^(-1)
--Annotation: assign q_enable 429
def fixed_1799: Prop := c.Fixed 0 429 = 1
--Annotation: assign q_first 429
def fixed_1800: Prop := c.Fixed 1 429 = 0
--Annotation: assign q_last 429
def fixed_1801: Prop := c.Fixed 2 429 = 0
--Annotation: assign tag 429
def advice_0_429: Prop := c.Advice 0 429 = 0
--Annotation: assign index 429
def advice_1_429: Prop := c.Advice 1 429 = 0
--Annotation: assign is_code 429
def advice_2_429: Prop := c.Advice 2 429 = 0
--Annotation: assign value 429
def advice_3_429: Prop := c.Advice 3 429 = 0
--Annotation: assign push_data_left 429
def advice_13_429: Prop := c.Advice 13 429 = 0
--Annotation: assign length 429
def advice_15_429: Prop := c.Advice 15 429 = 0
--Annotation: assign push_data_size 429
def advice_16_429: Prop := c.Advice 16 429 = 0
--Annotation: assign value_rlc 429
def advice_14_429: Prop := c.Advice 14 429 = 0
--Annotation: assign code_hash 429
def advice_4_429: Prop := c.Advice 4 429 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 429
def advice_5_429: Prop := c.Advice 5 429 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_429: Prop := c.Advice 17 429 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_429: Prop := c.Advice 18 429 = 1^(-1)
--Annotation: assign q_enable 430
def fixed_1802: Prop := c.Fixed 0 430 = 1
--Annotation: assign q_first 430
def fixed_1803: Prop := c.Fixed 1 430 = 0
--Annotation: assign q_last 430
def fixed_1804: Prop := c.Fixed 2 430 = 0
--Annotation: assign tag 430
def advice_0_430: Prop := c.Advice 0 430 = 0
--Annotation: assign index 430
def advice_1_430: Prop := c.Advice 1 430 = 0
--Annotation: assign is_code 430
def advice_2_430: Prop := c.Advice 2 430 = 0
--Annotation: assign value 430
def advice_3_430: Prop := c.Advice 3 430 = 0
--Annotation: assign push_data_left 430
def advice_13_430: Prop := c.Advice 13 430 = 0
--Annotation: assign length 430
def advice_15_430: Prop := c.Advice 15 430 = 0
--Annotation: assign push_data_size 430
def advice_16_430: Prop := c.Advice 16 430 = 0
--Annotation: assign value_rlc 430
def advice_14_430: Prop := c.Advice 14 430 = 0
--Annotation: assign code_hash 430
def advice_4_430: Prop := c.Advice 4 430 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 430
def advice_5_430: Prop := c.Advice 5 430 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_430: Prop := c.Advice 17 430 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_430: Prop := c.Advice 18 430 = 1^(-1)
--Annotation: assign q_enable 431
def fixed_1805: Prop := c.Fixed 0 431 = 1
--Annotation: assign q_first 431
def fixed_1806: Prop := c.Fixed 1 431 = 0
--Annotation: assign q_last 431
def fixed_1807: Prop := c.Fixed 2 431 = 0
--Annotation: assign tag 431
def advice_0_431: Prop := c.Advice 0 431 = 0
--Annotation: assign index 431
def advice_1_431: Prop := c.Advice 1 431 = 0
--Annotation: assign is_code 431
def advice_2_431: Prop := c.Advice 2 431 = 0
--Annotation: assign value 431
def advice_3_431: Prop := c.Advice 3 431 = 0
--Annotation: assign push_data_left 431
def advice_13_431: Prop := c.Advice 13 431 = 0
--Annotation: assign length 431
def advice_15_431: Prop := c.Advice 15 431 = 0
--Annotation: assign push_data_size 431
def advice_16_431: Prop := c.Advice 16 431 = 0
--Annotation: assign value_rlc 431
def advice_14_431: Prop := c.Advice 14 431 = 0
--Annotation: assign code_hash 431
def advice_4_431: Prop := c.Advice 4 431 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 431
def advice_5_431: Prop := c.Advice 5 431 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_431: Prop := c.Advice 17 431 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_431: Prop := c.Advice 18 431 = 1^(-1)
--Annotation: assign q_enable 432
def fixed_1808: Prop := c.Fixed 0 432 = 1
--Annotation: assign q_first 432
def fixed_1809: Prop := c.Fixed 1 432 = 0
--Annotation: assign q_last 432
def fixed_1810: Prop := c.Fixed 2 432 = 0
--Annotation: assign tag 432
def advice_0_432: Prop := c.Advice 0 432 = 0
--Annotation: assign index 432
def advice_1_432: Prop := c.Advice 1 432 = 0
--Annotation: assign is_code 432
def advice_2_432: Prop := c.Advice 2 432 = 0
--Annotation: assign value 432
def advice_3_432: Prop := c.Advice 3 432 = 0
--Annotation: assign push_data_left 432
def advice_13_432: Prop := c.Advice 13 432 = 0
--Annotation: assign length 432
def advice_15_432: Prop := c.Advice 15 432 = 0
--Annotation: assign push_data_size 432
def advice_16_432: Prop := c.Advice 16 432 = 0
--Annotation: assign value_rlc 432
def advice_14_432: Prop := c.Advice 14 432 = 0
--Annotation: assign code_hash 432
def advice_4_432: Prop := c.Advice 4 432 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 432
def advice_5_432: Prop := c.Advice 5 432 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_432: Prop := c.Advice 17 432 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_432: Prop := c.Advice 18 432 = 1^(-1)
--Annotation: assign q_enable 433
def fixed_1811: Prop := c.Fixed 0 433 = 1
--Annotation: assign q_first 433
def fixed_1812: Prop := c.Fixed 1 433 = 0
--Annotation: assign q_last 433
def fixed_1813: Prop := c.Fixed 2 433 = 0
--Annotation: assign tag 433
def advice_0_433: Prop := c.Advice 0 433 = 0
--Annotation: assign index 433
def advice_1_433: Prop := c.Advice 1 433 = 0
--Annotation: assign is_code 433
def advice_2_433: Prop := c.Advice 2 433 = 0
--Annotation: assign value 433
def advice_3_433: Prop := c.Advice 3 433 = 0
--Annotation: assign push_data_left 433
def advice_13_433: Prop := c.Advice 13 433 = 0
--Annotation: assign length 433
def advice_15_433: Prop := c.Advice 15 433 = 0
--Annotation: assign push_data_size 433
def advice_16_433: Prop := c.Advice 16 433 = 0
--Annotation: assign value_rlc 433
def advice_14_433: Prop := c.Advice 14 433 = 0
--Annotation: assign code_hash 433
def advice_4_433: Prop := c.Advice 4 433 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 433
def advice_5_433: Prop := c.Advice 5 433 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_433: Prop := c.Advice 17 433 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_433: Prop := c.Advice 18 433 = 1^(-1)
--Annotation: assign q_enable 434
def fixed_1814: Prop := c.Fixed 0 434 = 1
--Annotation: assign q_first 434
def fixed_1815: Prop := c.Fixed 1 434 = 0
--Annotation: assign q_last 434
def fixed_1816: Prop := c.Fixed 2 434 = 0
--Annotation: assign tag 434
def advice_0_434: Prop := c.Advice 0 434 = 0
--Annotation: assign index 434
def advice_1_434: Prop := c.Advice 1 434 = 0
--Annotation: assign is_code 434
def advice_2_434: Prop := c.Advice 2 434 = 0
--Annotation: assign value 434
def advice_3_434: Prop := c.Advice 3 434 = 0
--Annotation: assign push_data_left 434
def advice_13_434: Prop := c.Advice 13 434 = 0
--Annotation: assign length 434
def advice_15_434: Prop := c.Advice 15 434 = 0
--Annotation: assign push_data_size 434
def advice_16_434: Prop := c.Advice 16 434 = 0
--Annotation: assign value_rlc 434
def advice_14_434: Prop := c.Advice 14 434 = 0
--Annotation: assign code_hash 434
def advice_4_434: Prop := c.Advice 4 434 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 434
def advice_5_434: Prop := c.Advice 5 434 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_434: Prop := c.Advice 17 434 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_434: Prop := c.Advice 18 434 = 1^(-1)
--Annotation: assign q_enable 435
def fixed_1817: Prop := c.Fixed 0 435 = 1
--Annotation: assign q_first 435
def fixed_1818: Prop := c.Fixed 1 435 = 0
--Annotation: assign q_last 435
def fixed_1819: Prop := c.Fixed 2 435 = 0
--Annotation: assign tag 435
def advice_0_435: Prop := c.Advice 0 435 = 0
--Annotation: assign index 435
def advice_1_435: Prop := c.Advice 1 435 = 0
--Annotation: assign is_code 435
def advice_2_435: Prop := c.Advice 2 435 = 0
--Annotation: assign value 435
def advice_3_435: Prop := c.Advice 3 435 = 0
--Annotation: assign push_data_left 435
def advice_13_435: Prop := c.Advice 13 435 = 0
--Annotation: assign length 435
def advice_15_435: Prop := c.Advice 15 435 = 0
--Annotation: assign push_data_size 435
def advice_16_435: Prop := c.Advice 16 435 = 0
--Annotation: assign value_rlc 435
def advice_14_435: Prop := c.Advice 14 435 = 0
--Annotation: assign code_hash 435
def advice_4_435: Prop := c.Advice 4 435 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 435
def advice_5_435: Prop := c.Advice 5 435 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_435: Prop := c.Advice 17 435 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_435: Prop := c.Advice 18 435 = 1^(-1)
--Annotation: assign q_enable 436
def fixed_1820: Prop := c.Fixed 0 436 = 1
--Annotation: assign q_first 436
def fixed_1821: Prop := c.Fixed 1 436 = 0
--Annotation: assign q_last 436
def fixed_1822: Prop := c.Fixed 2 436 = 0
--Annotation: assign tag 436
def advice_0_436: Prop := c.Advice 0 436 = 0
--Annotation: assign index 436
def advice_1_436: Prop := c.Advice 1 436 = 0
--Annotation: assign is_code 436
def advice_2_436: Prop := c.Advice 2 436 = 0
--Annotation: assign value 436
def advice_3_436: Prop := c.Advice 3 436 = 0
--Annotation: assign push_data_left 436
def advice_13_436: Prop := c.Advice 13 436 = 0
--Annotation: assign length 436
def advice_15_436: Prop := c.Advice 15 436 = 0
--Annotation: assign push_data_size 436
def advice_16_436: Prop := c.Advice 16 436 = 0
--Annotation: assign value_rlc 436
def advice_14_436: Prop := c.Advice 14 436 = 0
--Annotation: assign code_hash 436
def advice_4_436: Prop := c.Advice 4 436 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 436
def advice_5_436: Prop := c.Advice 5 436 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_436: Prop := c.Advice 17 436 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_436: Prop := c.Advice 18 436 = 1^(-1)
--Annotation: assign q_enable 437
def fixed_1823: Prop := c.Fixed 0 437 = 1
--Annotation: assign q_first 437
def fixed_1824: Prop := c.Fixed 1 437 = 0
--Annotation: assign q_last 437
def fixed_1825: Prop := c.Fixed 2 437 = 0
--Annotation: assign tag 437
def advice_0_437: Prop := c.Advice 0 437 = 0
--Annotation: assign index 437
def advice_1_437: Prop := c.Advice 1 437 = 0
--Annotation: assign is_code 437
def advice_2_437: Prop := c.Advice 2 437 = 0
--Annotation: assign value 437
def advice_3_437: Prop := c.Advice 3 437 = 0
--Annotation: assign push_data_left 437
def advice_13_437: Prop := c.Advice 13 437 = 0
--Annotation: assign length 437
def advice_15_437: Prop := c.Advice 15 437 = 0
--Annotation: assign push_data_size 437
def advice_16_437: Prop := c.Advice 16 437 = 0
--Annotation: assign value_rlc 437
def advice_14_437: Prop := c.Advice 14 437 = 0
--Annotation: assign code_hash 437
def advice_4_437: Prop := c.Advice 4 437 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 437
def advice_5_437: Prop := c.Advice 5 437 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_437: Prop := c.Advice 17 437 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_437: Prop := c.Advice 18 437 = 1^(-1)
--Annotation: assign q_enable 438
def fixed_1826: Prop := c.Fixed 0 438 = 1
--Annotation: assign q_first 438
def fixed_1827: Prop := c.Fixed 1 438 = 0
--Annotation: assign q_last 438
def fixed_1828: Prop := c.Fixed 2 438 = 0
--Annotation: assign tag 438
def advice_0_438: Prop := c.Advice 0 438 = 0
--Annotation: assign index 438
def advice_1_438: Prop := c.Advice 1 438 = 0
--Annotation: assign is_code 438
def advice_2_438: Prop := c.Advice 2 438 = 0
--Annotation: assign value 438
def advice_3_438: Prop := c.Advice 3 438 = 0
--Annotation: assign push_data_left 438
def advice_13_438: Prop := c.Advice 13 438 = 0
--Annotation: assign length 438
def advice_15_438: Prop := c.Advice 15 438 = 0
--Annotation: assign push_data_size 438
def advice_16_438: Prop := c.Advice 16 438 = 0
--Annotation: assign value_rlc 438
def advice_14_438: Prop := c.Advice 14 438 = 0
--Annotation: assign code_hash 438
def advice_4_438: Prop := c.Advice 4 438 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 438
def advice_5_438: Prop := c.Advice 5 438 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_438: Prop := c.Advice 17 438 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_438: Prop := c.Advice 18 438 = 1^(-1)
--Annotation: assign q_enable 439
def fixed_1829: Prop := c.Fixed 0 439 = 1
--Annotation: assign q_first 439
def fixed_1830: Prop := c.Fixed 1 439 = 0
--Annotation: assign q_last 439
def fixed_1831: Prop := c.Fixed 2 439 = 0
--Annotation: assign tag 439
def advice_0_439: Prop := c.Advice 0 439 = 0
--Annotation: assign index 439
def advice_1_439: Prop := c.Advice 1 439 = 0
--Annotation: assign is_code 439
def advice_2_439: Prop := c.Advice 2 439 = 0
--Annotation: assign value 439
def advice_3_439: Prop := c.Advice 3 439 = 0
--Annotation: assign push_data_left 439
def advice_13_439: Prop := c.Advice 13 439 = 0
--Annotation: assign length 439
def advice_15_439: Prop := c.Advice 15 439 = 0
--Annotation: assign push_data_size 439
def advice_16_439: Prop := c.Advice 16 439 = 0
--Annotation: assign value_rlc 439
def advice_14_439: Prop := c.Advice 14 439 = 0
--Annotation: assign code_hash 439
def advice_4_439: Prop := c.Advice 4 439 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 439
def advice_5_439: Prop := c.Advice 5 439 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_439: Prop := c.Advice 17 439 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_439: Prop := c.Advice 18 439 = 1^(-1)
--Annotation: assign q_enable 440
def fixed_1832: Prop := c.Fixed 0 440 = 1
--Annotation: assign q_first 440
def fixed_1833: Prop := c.Fixed 1 440 = 0
--Annotation: assign q_last 440
def fixed_1834: Prop := c.Fixed 2 440 = 0
--Annotation: assign tag 440
def advice_0_440: Prop := c.Advice 0 440 = 0
--Annotation: assign index 440
def advice_1_440: Prop := c.Advice 1 440 = 0
--Annotation: assign is_code 440
def advice_2_440: Prop := c.Advice 2 440 = 0
--Annotation: assign value 440
def advice_3_440: Prop := c.Advice 3 440 = 0
--Annotation: assign push_data_left 440
def advice_13_440: Prop := c.Advice 13 440 = 0
--Annotation: assign length 440
def advice_15_440: Prop := c.Advice 15 440 = 0
--Annotation: assign push_data_size 440
def advice_16_440: Prop := c.Advice 16 440 = 0
--Annotation: assign value_rlc 440
def advice_14_440: Prop := c.Advice 14 440 = 0
--Annotation: assign code_hash 440
def advice_4_440: Prop := c.Advice 4 440 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 440
def advice_5_440: Prop := c.Advice 5 440 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_440: Prop := c.Advice 17 440 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_440: Prop := c.Advice 18 440 = 1^(-1)
--Annotation: assign q_enable 441
def fixed_1835: Prop := c.Fixed 0 441 = 1
--Annotation: assign q_first 441
def fixed_1836: Prop := c.Fixed 1 441 = 0
--Annotation: assign q_last 441
def fixed_1837: Prop := c.Fixed 2 441 = 0
--Annotation: assign tag 441
def advice_0_441: Prop := c.Advice 0 441 = 0
--Annotation: assign index 441
def advice_1_441: Prop := c.Advice 1 441 = 0
--Annotation: assign is_code 441
def advice_2_441: Prop := c.Advice 2 441 = 0
--Annotation: assign value 441
def advice_3_441: Prop := c.Advice 3 441 = 0
--Annotation: assign push_data_left 441
def advice_13_441: Prop := c.Advice 13 441 = 0
--Annotation: assign length 441
def advice_15_441: Prop := c.Advice 15 441 = 0
--Annotation: assign push_data_size 441
def advice_16_441: Prop := c.Advice 16 441 = 0
--Annotation: assign value_rlc 441
def advice_14_441: Prop := c.Advice 14 441 = 0
--Annotation: assign code_hash 441
def advice_4_441: Prop := c.Advice 4 441 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 441
def advice_5_441: Prop := c.Advice 5 441 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_441: Prop := c.Advice 17 441 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_441: Prop := c.Advice 18 441 = 1^(-1)
--Annotation: assign q_enable 442
def fixed_1838: Prop := c.Fixed 0 442 = 1
--Annotation: assign q_first 442
def fixed_1839: Prop := c.Fixed 1 442 = 0
--Annotation: assign q_last 442
def fixed_1840: Prop := c.Fixed 2 442 = 0
--Annotation: assign tag 442
def advice_0_442: Prop := c.Advice 0 442 = 0
--Annotation: assign index 442
def advice_1_442: Prop := c.Advice 1 442 = 0
--Annotation: assign is_code 442
def advice_2_442: Prop := c.Advice 2 442 = 0
--Annotation: assign value 442
def advice_3_442: Prop := c.Advice 3 442 = 0
--Annotation: assign push_data_left 442
def advice_13_442: Prop := c.Advice 13 442 = 0
--Annotation: assign length 442
def advice_15_442: Prop := c.Advice 15 442 = 0
--Annotation: assign push_data_size 442
def advice_16_442: Prop := c.Advice 16 442 = 0
--Annotation: assign value_rlc 442
def advice_14_442: Prop := c.Advice 14 442 = 0
--Annotation: assign code_hash 442
def advice_4_442: Prop := c.Advice 4 442 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 442
def advice_5_442: Prop := c.Advice 5 442 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_442: Prop := c.Advice 17 442 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_442: Prop := c.Advice 18 442 = 1^(-1)
--Annotation: assign q_enable 443
def fixed_1841: Prop := c.Fixed 0 443 = 1
--Annotation: assign q_first 443
def fixed_1842: Prop := c.Fixed 1 443 = 0
--Annotation: assign q_last 443
def fixed_1843: Prop := c.Fixed 2 443 = 0
--Annotation: assign tag 443
def advice_0_443: Prop := c.Advice 0 443 = 0
--Annotation: assign index 443
def advice_1_443: Prop := c.Advice 1 443 = 0
--Annotation: assign is_code 443
def advice_2_443: Prop := c.Advice 2 443 = 0
--Annotation: assign value 443
def advice_3_443: Prop := c.Advice 3 443 = 0
--Annotation: assign push_data_left 443
def advice_13_443: Prop := c.Advice 13 443 = 0
--Annotation: assign length 443
def advice_15_443: Prop := c.Advice 15 443 = 0
--Annotation: assign push_data_size 443
def advice_16_443: Prop := c.Advice 16 443 = 0
--Annotation: assign value_rlc 443
def advice_14_443: Prop := c.Advice 14 443 = 0
--Annotation: assign code_hash 443
def advice_4_443: Prop := c.Advice 4 443 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 443
def advice_5_443: Prop := c.Advice 5 443 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_443: Prop := c.Advice 17 443 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_443: Prop := c.Advice 18 443 = 1^(-1)
--Annotation: assign q_enable 444
def fixed_1844: Prop := c.Fixed 0 444 = 1
--Annotation: assign q_first 444
def fixed_1845: Prop := c.Fixed 1 444 = 0
--Annotation: assign q_last 444
def fixed_1846: Prop := c.Fixed 2 444 = 0
--Annotation: assign tag 444
def advice_0_444: Prop := c.Advice 0 444 = 0
--Annotation: assign index 444
def advice_1_444: Prop := c.Advice 1 444 = 0
--Annotation: assign is_code 444
def advice_2_444: Prop := c.Advice 2 444 = 0
--Annotation: assign value 444
def advice_3_444: Prop := c.Advice 3 444 = 0
--Annotation: assign push_data_left 444
def advice_13_444: Prop := c.Advice 13 444 = 0
--Annotation: assign length 444
def advice_15_444: Prop := c.Advice 15 444 = 0
--Annotation: assign push_data_size 444
def advice_16_444: Prop := c.Advice 16 444 = 0
--Annotation: assign value_rlc 444
def advice_14_444: Prop := c.Advice 14 444 = 0
--Annotation: assign code_hash 444
def advice_4_444: Prop := c.Advice 4 444 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 444
def advice_5_444: Prop := c.Advice 5 444 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_444: Prop := c.Advice 17 444 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_444: Prop := c.Advice 18 444 = 1^(-1)
--Annotation: assign q_enable 445
def fixed_1847: Prop := c.Fixed 0 445 = 1
--Annotation: assign q_first 445
def fixed_1848: Prop := c.Fixed 1 445 = 0
--Annotation: assign q_last 445
def fixed_1849: Prop := c.Fixed 2 445 = 0
--Annotation: assign tag 445
def advice_0_445: Prop := c.Advice 0 445 = 0
--Annotation: assign index 445
def advice_1_445: Prop := c.Advice 1 445 = 0
--Annotation: assign is_code 445
def advice_2_445: Prop := c.Advice 2 445 = 0
--Annotation: assign value 445
def advice_3_445: Prop := c.Advice 3 445 = 0
--Annotation: assign push_data_left 445
def advice_13_445: Prop := c.Advice 13 445 = 0
--Annotation: assign length 445
def advice_15_445: Prop := c.Advice 15 445 = 0
--Annotation: assign push_data_size 445
def advice_16_445: Prop := c.Advice 16 445 = 0
--Annotation: assign value_rlc 445
def advice_14_445: Prop := c.Advice 14 445 = 0
--Annotation: assign code_hash 445
def advice_4_445: Prop := c.Advice 4 445 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 445
def advice_5_445: Prop := c.Advice 5 445 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_445: Prop := c.Advice 17 445 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_445: Prop := c.Advice 18 445 = 1^(-1)
--Annotation: assign q_enable 446
def fixed_1850: Prop := c.Fixed 0 446 = 1
--Annotation: assign q_first 446
def fixed_1851: Prop := c.Fixed 1 446 = 0
--Annotation: assign q_last 446
def fixed_1852: Prop := c.Fixed 2 446 = 0
--Annotation: assign tag 446
def advice_0_446: Prop := c.Advice 0 446 = 0
--Annotation: assign index 446
def advice_1_446: Prop := c.Advice 1 446 = 0
--Annotation: assign is_code 446
def advice_2_446: Prop := c.Advice 2 446 = 0
--Annotation: assign value 446
def advice_3_446: Prop := c.Advice 3 446 = 0
--Annotation: assign push_data_left 446
def advice_13_446: Prop := c.Advice 13 446 = 0
--Annotation: assign length 446
def advice_15_446: Prop := c.Advice 15 446 = 0
--Annotation: assign push_data_size 446
def advice_16_446: Prop := c.Advice 16 446 = 0
--Annotation: assign value_rlc 446
def advice_14_446: Prop := c.Advice 14 446 = 0
--Annotation: assign code_hash 446
def advice_4_446: Prop := c.Advice 4 446 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 446
def advice_5_446: Prop := c.Advice 5 446 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_446: Prop := c.Advice 17 446 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_446: Prop := c.Advice 18 446 = 1^(-1)
--Annotation: assign q_enable 447
def fixed_1853: Prop := c.Fixed 0 447 = 1
--Annotation: assign q_first 447
def fixed_1854: Prop := c.Fixed 1 447 = 0
--Annotation: assign q_last 447
def fixed_1855: Prop := c.Fixed 2 447 = 0
--Annotation: assign tag 447
def advice_0_447: Prop := c.Advice 0 447 = 0
--Annotation: assign index 447
def advice_1_447: Prop := c.Advice 1 447 = 0
--Annotation: assign is_code 447
def advice_2_447: Prop := c.Advice 2 447 = 0
--Annotation: assign value 447
def advice_3_447: Prop := c.Advice 3 447 = 0
--Annotation: assign push_data_left 447
def advice_13_447: Prop := c.Advice 13 447 = 0
--Annotation: assign length 447
def advice_15_447: Prop := c.Advice 15 447 = 0
--Annotation: assign push_data_size 447
def advice_16_447: Prop := c.Advice 16 447 = 0
--Annotation: assign value_rlc 447
def advice_14_447: Prop := c.Advice 14 447 = 0
--Annotation: assign code_hash 447
def advice_4_447: Prop := c.Advice 4 447 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 447
def advice_5_447: Prop := c.Advice 5 447 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_447: Prop := c.Advice 17 447 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_447: Prop := c.Advice 18 447 = 1^(-1)
--Annotation: assign q_enable 448
def fixed_1856: Prop := c.Fixed 0 448 = 1
--Annotation: assign q_first 448
def fixed_1857: Prop := c.Fixed 1 448 = 0
--Annotation: assign q_last 448
def fixed_1858: Prop := c.Fixed 2 448 = 0
--Annotation: assign tag 448
def advice_0_448: Prop := c.Advice 0 448 = 0
--Annotation: assign index 448
def advice_1_448: Prop := c.Advice 1 448 = 0
--Annotation: assign is_code 448
def advice_2_448: Prop := c.Advice 2 448 = 0
--Annotation: assign value 448
def advice_3_448: Prop := c.Advice 3 448 = 0
--Annotation: assign push_data_left 448
def advice_13_448: Prop := c.Advice 13 448 = 0
--Annotation: assign length 448
def advice_15_448: Prop := c.Advice 15 448 = 0
--Annotation: assign push_data_size 448
def advice_16_448: Prop := c.Advice 16 448 = 0
--Annotation: assign value_rlc 448
def advice_14_448: Prop := c.Advice 14 448 = 0
--Annotation: assign code_hash 448
def advice_4_448: Prop := c.Advice 4 448 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 448
def advice_5_448: Prop := c.Advice 5 448 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_448: Prop := c.Advice 17 448 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_448: Prop := c.Advice 18 448 = 1^(-1)
--Annotation: assign q_enable 449
def fixed_1859: Prop := c.Fixed 0 449 = 1
--Annotation: assign q_first 449
def fixed_1860: Prop := c.Fixed 1 449 = 0
--Annotation: assign q_last 449
def fixed_1861: Prop := c.Fixed 2 449 = 0
--Annotation: assign tag 449
def advice_0_449: Prop := c.Advice 0 449 = 0
--Annotation: assign index 449
def advice_1_449: Prop := c.Advice 1 449 = 0
--Annotation: assign is_code 449
def advice_2_449: Prop := c.Advice 2 449 = 0
--Annotation: assign value 449
def advice_3_449: Prop := c.Advice 3 449 = 0
--Annotation: assign push_data_left 449
def advice_13_449: Prop := c.Advice 13 449 = 0
--Annotation: assign length 449
def advice_15_449: Prop := c.Advice 15 449 = 0
--Annotation: assign push_data_size 449
def advice_16_449: Prop := c.Advice 16 449 = 0
--Annotation: assign value_rlc 449
def advice_14_449: Prop := c.Advice 14 449 = 0
--Annotation: assign code_hash 449
def advice_4_449: Prop := c.Advice 4 449 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 449
def advice_5_449: Prop := c.Advice 5 449 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_449: Prop := c.Advice 17 449 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_449: Prop := c.Advice 18 449 = 1^(-1)
--Annotation: assign q_enable 450
def fixed_1862: Prop := c.Fixed 0 450 = 1
--Annotation: assign q_first 450
def fixed_1863: Prop := c.Fixed 1 450 = 0
--Annotation: assign q_last 450
def fixed_1864: Prop := c.Fixed 2 450 = 0
--Annotation: assign tag 450
def advice_0_450: Prop := c.Advice 0 450 = 0
--Annotation: assign index 450
def advice_1_450: Prop := c.Advice 1 450 = 0
--Annotation: assign is_code 450
def advice_2_450: Prop := c.Advice 2 450 = 0
--Annotation: assign value 450
def advice_3_450: Prop := c.Advice 3 450 = 0
--Annotation: assign push_data_left 450
def advice_13_450: Prop := c.Advice 13 450 = 0
--Annotation: assign length 450
def advice_15_450: Prop := c.Advice 15 450 = 0
--Annotation: assign push_data_size 450
def advice_16_450: Prop := c.Advice 16 450 = 0
--Annotation: assign value_rlc 450
def advice_14_450: Prop := c.Advice 14 450 = 0
--Annotation: assign code_hash 450
def advice_4_450: Prop := c.Advice 4 450 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 450
def advice_5_450: Prop := c.Advice 5 450 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_450: Prop := c.Advice 17 450 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_450: Prop := c.Advice 18 450 = 1^(-1)
--Annotation: assign q_enable 451
def fixed_1865: Prop := c.Fixed 0 451 = 1
--Annotation: assign q_first 451
def fixed_1866: Prop := c.Fixed 1 451 = 0
--Annotation: assign q_last 451
def fixed_1867: Prop := c.Fixed 2 451 = 0
--Annotation: assign tag 451
def advice_0_451: Prop := c.Advice 0 451 = 0
--Annotation: assign index 451
def advice_1_451: Prop := c.Advice 1 451 = 0
--Annotation: assign is_code 451
def advice_2_451: Prop := c.Advice 2 451 = 0
--Annotation: assign value 451
def advice_3_451: Prop := c.Advice 3 451 = 0
--Annotation: assign push_data_left 451
def advice_13_451: Prop := c.Advice 13 451 = 0
--Annotation: assign length 451
def advice_15_451: Prop := c.Advice 15 451 = 0
--Annotation: assign push_data_size 451
def advice_16_451: Prop := c.Advice 16 451 = 0
--Annotation: assign value_rlc 451
def advice_14_451: Prop := c.Advice 14 451 = 0
--Annotation: assign code_hash 451
def advice_4_451: Prop := c.Advice 4 451 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 451
def advice_5_451: Prop := c.Advice 5 451 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_451: Prop := c.Advice 17 451 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_451: Prop := c.Advice 18 451 = 1^(-1)
--Annotation: assign q_enable 452
def fixed_1868: Prop := c.Fixed 0 452 = 1
--Annotation: assign q_first 452
def fixed_1869: Prop := c.Fixed 1 452 = 0
--Annotation: assign q_last 452
def fixed_1870: Prop := c.Fixed 2 452 = 0
--Annotation: assign tag 452
def advice_0_452: Prop := c.Advice 0 452 = 0
--Annotation: assign index 452
def advice_1_452: Prop := c.Advice 1 452 = 0
--Annotation: assign is_code 452
def advice_2_452: Prop := c.Advice 2 452 = 0
--Annotation: assign value 452
def advice_3_452: Prop := c.Advice 3 452 = 0
--Annotation: assign push_data_left 452
def advice_13_452: Prop := c.Advice 13 452 = 0
--Annotation: assign length 452
def advice_15_452: Prop := c.Advice 15 452 = 0
--Annotation: assign push_data_size 452
def advice_16_452: Prop := c.Advice 16 452 = 0
--Annotation: assign value_rlc 452
def advice_14_452: Prop := c.Advice 14 452 = 0
--Annotation: assign code_hash 452
def advice_4_452: Prop := c.Advice 4 452 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 452
def advice_5_452: Prop := c.Advice 5 452 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_452: Prop := c.Advice 17 452 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_452: Prop := c.Advice 18 452 = 1^(-1)
--Annotation: assign q_enable 453
def fixed_1871: Prop := c.Fixed 0 453 = 1
--Annotation: assign q_first 453
def fixed_1872: Prop := c.Fixed 1 453 = 0
--Annotation: assign q_last 453
def fixed_1873: Prop := c.Fixed 2 453 = 0
--Annotation: assign tag 453
def advice_0_453: Prop := c.Advice 0 453 = 0
--Annotation: assign index 453
def advice_1_453: Prop := c.Advice 1 453 = 0
--Annotation: assign is_code 453
def advice_2_453: Prop := c.Advice 2 453 = 0
--Annotation: assign value 453
def advice_3_453: Prop := c.Advice 3 453 = 0
--Annotation: assign push_data_left 453
def advice_13_453: Prop := c.Advice 13 453 = 0
--Annotation: assign length 453
def advice_15_453: Prop := c.Advice 15 453 = 0
--Annotation: assign push_data_size 453
def advice_16_453: Prop := c.Advice 16 453 = 0
--Annotation: assign value_rlc 453
def advice_14_453: Prop := c.Advice 14 453 = 0
--Annotation: assign code_hash 453
def advice_4_453: Prop := c.Advice 4 453 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 453
def advice_5_453: Prop := c.Advice 5 453 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_453: Prop := c.Advice 17 453 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_453: Prop := c.Advice 18 453 = 1^(-1)
--Annotation: assign q_enable 454
def fixed_1874: Prop := c.Fixed 0 454 = 1
--Annotation: assign q_first 454
def fixed_1875: Prop := c.Fixed 1 454 = 0
--Annotation: assign q_last 454
def fixed_1876: Prop := c.Fixed 2 454 = 0
--Annotation: assign tag 454
def advice_0_454: Prop := c.Advice 0 454 = 0
--Annotation: assign index 454
def advice_1_454: Prop := c.Advice 1 454 = 0
--Annotation: assign is_code 454
def advice_2_454: Prop := c.Advice 2 454 = 0
--Annotation: assign value 454
def advice_3_454: Prop := c.Advice 3 454 = 0
--Annotation: assign push_data_left 454
def advice_13_454: Prop := c.Advice 13 454 = 0
--Annotation: assign length 454
def advice_15_454: Prop := c.Advice 15 454 = 0
--Annotation: assign push_data_size 454
def advice_16_454: Prop := c.Advice 16 454 = 0
--Annotation: assign value_rlc 454
def advice_14_454: Prop := c.Advice 14 454 = 0
--Annotation: assign code_hash 454
def advice_4_454: Prop := c.Advice 4 454 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 454
def advice_5_454: Prop := c.Advice 5 454 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_454: Prop := c.Advice 17 454 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_454: Prop := c.Advice 18 454 = 1^(-1)
--Annotation: assign q_enable 455
def fixed_1877: Prop := c.Fixed 0 455 = 1
--Annotation: assign q_first 455
def fixed_1878: Prop := c.Fixed 1 455 = 0
--Annotation: assign q_last 455
def fixed_1879: Prop := c.Fixed 2 455 = 0
--Annotation: assign tag 455
def advice_0_455: Prop := c.Advice 0 455 = 0
--Annotation: assign index 455
def advice_1_455: Prop := c.Advice 1 455 = 0
--Annotation: assign is_code 455
def advice_2_455: Prop := c.Advice 2 455 = 0
--Annotation: assign value 455
def advice_3_455: Prop := c.Advice 3 455 = 0
--Annotation: assign push_data_left 455
def advice_13_455: Prop := c.Advice 13 455 = 0
--Annotation: assign length 455
def advice_15_455: Prop := c.Advice 15 455 = 0
--Annotation: assign push_data_size 455
def advice_16_455: Prop := c.Advice 16 455 = 0
--Annotation: assign value_rlc 455
def advice_14_455: Prop := c.Advice 14 455 = 0
--Annotation: assign code_hash 455
def advice_4_455: Prop := c.Advice 4 455 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 455
def advice_5_455: Prop := c.Advice 5 455 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_455: Prop := c.Advice 17 455 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_455: Prop := c.Advice 18 455 = 1^(-1)
--Annotation: assign q_enable 456
def fixed_1880: Prop := c.Fixed 0 456 = 1
--Annotation: assign q_first 456
def fixed_1881: Prop := c.Fixed 1 456 = 0
--Annotation: assign q_last 456
def fixed_1882: Prop := c.Fixed 2 456 = 0
--Annotation: assign tag 456
def advice_0_456: Prop := c.Advice 0 456 = 0
--Annotation: assign index 456
def advice_1_456: Prop := c.Advice 1 456 = 0
--Annotation: assign is_code 456
def advice_2_456: Prop := c.Advice 2 456 = 0
--Annotation: assign value 456
def advice_3_456: Prop := c.Advice 3 456 = 0
--Annotation: assign push_data_left 456
def advice_13_456: Prop := c.Advice 13 456 = 0
--Annotation: assign length 456
def advice_15_456: Prop := c.Advice 15 456 = 0
--Annotation: assign push_data_size 456
def advice_16_456: Prop := c.Advice 16 456 = 0
--Annotation: assign value_rlc 456
def advice_14_456: Prop := c.Advice 14 456 = 0
--Annotation: assign code_hash 456
def advice_4_456: Prop := c.Advice 4 456 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 456
def advice_5_456: Prop := c.Advice 5 456 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_456: Prop := c.Advice 17 456 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_456: Prop := c.Advice 18 456 = 1^(-1)
--Annotation: assign q_enable 457
def fixed_1883: Prop := c.Fixed 0 457 = 1
--Annotation: assign q_first 457
def fixed_1884: Prop := c.Fixed 1 457 = 0
--Annotation: assign q_last 457
def fixed_1885: Prop := c.Fixed 2 457 = 0
--Annotation: assign tag 457
def advice_0_457: Prop := c.Advice 0 457 = 0
--Annotation: assign index 457
def advice_1_457: Prop := c.Advice 1 457 = 0
--Annotation: assign is_code 457
def advice_2_457: Prop := c.Advice 2 457 = 0
--Annotation: assign value 457
def advice_3_457: Prop := c.Advice 3 457 = 0
--Annotation: assign push_data_left 457
def advice_13_457: Prop := c.Advice 13 457 = 0
--Annotation: assign length 457
def advice_15_457: Prop := c.Advice 15 457 = 0
--Annotation: assign push_data_size 457
def advice_16_457: Prop := c.Advice 16 457 = 0
--Annotation: assign value_rlc 457
def advice_14_457: Prop := c.Advice 14 457 = 0
--Annotation: assign code_hash 457
def advice_4_457: Prop := c.Advice 4 457 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 457
def advice_5_457: Prop := c.Advice 5 457 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_457: Prop := c.Advice 17 457 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_457: Prop := c.Advice 18 457 = 1^(-1)
--Annotation: assign q_enable 458
def fixed_1886: Prop := c.Fixed 0 458 = 1
--Annotation: assign q_first 458
def fixed_1887: Prop := c.Fixed 1 458 = 0
--Annotation: assign q_last 458
def fixed_1888: Prop := c.Fixed 2 458 = 0
--Annotation: assign tag 458
def advice_0_458: Prop := c.Advice 0 458 = 0
--Annotation: assign index 458
def advice_1_458: Prop := c.Advice 1 458 = 0
--Annotation: assign is_code 458
def advice_2_458: Prop := c.Advice 2 458 = 0
--Annotation: assign value 458
def advice_3_458: Prop := c.Advice 3 458 = 0
--Annotation: assign push_data_left 458
def advice_13_458: Prop := c.Advice 13 458 = 0
--Annotation: assign length 458
def advice_15_458: Prop := c.Advice 15 458 = 0
--Annotation: assign push_data_size 458
def advice_16_458: Prop := c.Advice 16 458 = 0
--Annotation: assign value_rlc 458
def advice_14_458: Prop := c.Advice 14 458 = 0
--Annotation: assign code_hash 458
def advice_4_458: Prop := c.Advice 4 458 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 458
def advice_5_458: Prop := c.Advice 5 458 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_458: Prop := c.Advice 17 458 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_458: Prop := c.Advice 18 458 = 1^(-1)
--Annotation: assign q_enable 459
def fixed_1889: Prop := c.Fixed 0 459 = 1
--Annotation: assign q_first 459
def fixed_1890: Prop := c.Fixed 1 459 = 0
--Annotation: assign q_last 459
def fixed_1891: Prop := c.Fixed 2 459 = 0
--Annotation: assign tag 459
def advice_0_459: Prop := c.Advice 0 459 = 0
--Annotation: assign index 459
def advice_1_459: Prop := c.Advice 1 459 = 0
--Annotation: assign is_code 459
def advice_2_459: Prop := c.Advice 2 459 = 0
--Annotation: assign value 459
def advice_3_459: Prop := c.Advice 3 459 = 0
--Annotation: assign push_data_left 459
def advice_13_459: Prop := c.Advice 13 459 = 0
--Annotation: assign length 459
def advice_15_459: Prop := c.Advice 15 459 = 0
--Annotation: assign push_data_size 459
def advice_16_459: Prop := c.Advice 16 459 = 0
--Annotation: assign value_rlc 459
def advice_14_459: Prop := c.Advice 14 459 = 0
--Annotation: assign code_hash 459
def advice_4_459: Prop := c.Advice 4 459 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 459
def advice_5_459: Prop := c.Advice 5 459 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_459: Prop := c.Advice 17 459 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_459: Prop := c.Advice 18 459 = 1^(-1)
--Annotation: assign q_enable 460
def fixed_1892: Prop := c.Fixed 0 460 = 1
--Annotation: assign q_first 460
def fixed_1893: Prop := c.Fixed 1 460 = 0
--Annotation: assign q_last 460
def fixed_1894: Prop := c.Fixed 2 460 = 0
--Annotation: assign tag 460
def advice_0_460: Prop := c.Advice 0 460 = 0
--Annotation: assign index 460
def advice_1_460: Prop := c.Advice 1 460 = 0
--Annotation: assign is_code 460
def advice_2_460: Prop := c.Advice 2 460 = 0
--Annotation: assign value 460
def advice_3_460: Prop := c.Advice 3 460 = 0
--Annotation: assign push_data_left 460
def advice_13_460: Prop := c.Advice 13 460 = 0
--Annotation: assign length 460
def advice_15_460: Prop := c.Advice 15 460 = 0
--Annotation: assign push_data_size 460
def advice_16_460: Prop := c.Advice 16 460 = 0
--Annotation: assign value_rlc 460
def advice_14_460: Prop := c.Advice 14 460 = 0
--Annotation: assign code_hash 460
def advice_4_460: Prop := c.Advice 4 460 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 460
def advice_5_460: Prop := c.Advice 5 460 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_460: Prop := c.Advice 17 460 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_460: Prop := c.Advice 18 460 = 1^(-1)
--Annotation: assign q_enable 461
def fixed_1895: Prop := c.Fixed 0 461 = 1
--Annotation: assign q_first 461
def fixed_1896: Prop := c.Fixed 1 461 = 0
--Annotation: assign q_last 461
def fixed_1897: Prop := c.Fixed 2 461 = 0
--Annotation: assign tag 461
def advice_0_461: Prop := c.Advice 0 461 = 0
--Annotation: assign index 461
def advice_1_461: Prop := c.Advice 1 461 = 0
--Annotation: assign is_code 461
def advice_2_461: Prop := c.Advice 2 461 = 0
--Annotation: assign value 461
def advice_3_461: Prop := c.Advice 3 461 = 0
--Annotation: assign push_data_left 461
def advice_13_461: Prop := c.Advice 13 461 = 0
--Annotation: assign length 461
def advice_15_461: Prop := c.Advice 15 461 = 0
--Annotation: assign push_data_size 461
def advice_16_461: Prop := c.Advice 16 461 = 0
--Annotation: assign value_rlc 461
def advice_14_461: Prop := c.Advice 14 461 = 0
--Annotation: assign code_hash 461
def advice_4_461: Prop := c.Advice 4 461 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 461
def advice_5_461: Prop := c.Advice 5 461 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_461: Prop := c.Advice 17 461 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_461: Prop := c.Advice 18 461 = 1^(-1)
--Annotation: assign q_enable 462
def fixed_1898: Prop := c.Fixed 0 462 = 1
--Annotation: assign q_first 462
def fixed_1899: Prop := c.Fixed 1 462 = 0
--Annotation: assign q_last 462
def fixed_1900: Prop := c.Fixed 2 462 = 0
--Annotation: assign tag 462
def advice_0_462: Prop := c.Advice 0 462 = 0
--Annotation: assign index 462
def advice_1_462: Prop := c.Advice 1 462 = 0
--Annotation: assign is_code 462
def advice_2_462: Prop := c.Advice 2 462 = 0
--Annotation: assign value 462
def advice_3_462: Prop := c.Advice 3 462 = 0
--Annotation: assign push_data_left 462
def advice_13_462: Prop := c.Advice 13 462 = 0
--Annotation: assign length 462
def advice_15_462: Prop := c.Advice 15 462 = 0
--Annotation: assign push_data_size 462
def advice_16_462: Prop := c.Advice 16 462 = 0
--Annotation: assign value_rlc 462
def advice_14_462: Prop := c.Advice 14 462 = 0
--Annotation: assign code_hash 462
def advice_4_462: Prop := c.Advice 4 462 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 462
def advice_5_462: Prop := c.Advice 5 462 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_462: Prop := c.Advice 17 462 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_462: Prop := c.Advice 18 462 = 1^(-1)
--Annotation: assign q_enable 463
def fixed_1901: Prop := c.Fixed 0 463 = 1
--Annotation: assign q_first 463
def fixed_1902: Prop := c.Fixed 1 463 = 0
--Annotation: assign q_last 463
def fixed_1903: Prop := c.Fixed 2 463 = 0
--Annotation: assign tag 463
def advice_0_463: Prop := c.Advice 0 463 = 0
--Annotation: assign index 463
def advice_1_463: Prop := c.Advice 1 463 = 0
--Annotation: assign is_code 463
def advice_2_463: Prop := c.Advice 2 463 = 0
--Annotation: assign value 463
def advice_3_463: Prop := c.Advice 3 463 = 0
--Annotation: assign push_data_left 463
def advice_13_463: Prop := c.Advice 13 463 = 0
--Annotation: assign length 463
def advice_15_463: Prop := c.Advice 15 463 = 0
--Annotation: assign push_data_size 463
def advice_16_463: Prop := c.Advice 16 463 = 0
--Annotation: assign value_rlc 463
def advice_14_463: Prop := c.Advice 14 463 = 0
--Annotation: assign code_hash 463
def advice_4_463: Prop := c.Advice 4 463 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 463
def advice_5_463: Prop := c.Advice 5 463 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_463: Prop := c.Advice 17 463 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_463: Prop := c.Advice 18 463 = 1^(-1)
--Annotation: assign q_enable 464
def fixed_1904: Prop := c.Fixed 0 464 = 1
--Annotation: assign q_first 464
def fixed_1905: Prop := c.Fixed 1 464 = 0
--Annotation: assign q_last 464
def fixed_1906: Prop := c.Fixed 2 464 = 0
--Annotation: assign tag 464
def advice_0_464: Prop := c.Advice 0 464 = 0
--Annotation: assign index 464
def advice_1_464: Prop := c.Advice 1 464 = 0
--Annotation: assign is_code 464
def advice_2_464: Prop := c.Advice 2 464 = 0
--Annotation: assign value 464
def advice_3_464: Prop := c.Advice 3 464 = 0
--Annotation: assign push_data_left 464
def advice_13_464: Prop := c.Advice 13 464 = 0
--Annotation: assign length 464
def advice_15_464: Prop := c.Advice 15 464 = 0
--Annotation: assign push_data_size 464
def advice_16_464: Prop := c.Advice 16 464 = 0
--Annotation: assign value_rlc 464
def advice_14_464: Prop := c.Advice 14 464 = 0
--Annotation: assign code_hash 464
def advice_4_464: Prop := c.Advice 4 464 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 464
def advice_5_464: Prop := c.Advice 5 464 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_464: Prop := c.Advice 17 464 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_464: Prop := c.Advice 18 464 = 1^(-1)
--Annotation: assign q_enable 465
def fixed_1907: Prop := c.Fixed 0 465 = 1
--Annotation: assign q_first 465
def fixed_1908: Prop := c.Fixed 1 465 = 0
--Annotation: assign q_last 465
def fixed_1909: Prop := c.Fixed 2 465 = 0
--Annotation: assign tag 465
def advice_0_465: Prop := c.Advice 0 465 = 0
--Annotation: assign index 465
def advice_1_465: Prop := c.Advice 1 465 = 0
--Annotation: assign is_code 465
def advice_2_465: Prop := c.Advice 2 465 = 0
--Annotation: assign value 465
def advice_3_465: Prop := c.Advice 3 465 = 0
--Annotation: assign push_data_left 465
def advice_13_465: Prop := c.Advice 13 465 = 0
--Annotation: assign length 465
def advice_15_465: Prop := c.Advice 15 465 = 0
--Annotation: assign push_data_size 465
def advice_16_465: Prop := c.Advice 16 465 = 0
--Annotation: assign value_rlc 465
def advice_14_465: Prop := c.Advice 14 465 = 0
--Annotation: assign code_hash 465
def advice_4_465: Prop := c.Advice 4 465 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 465
def advice_5_465: Prop := c.Advice 5 465 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_465: Prop := c.Advice 17 465 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_465: Prop := c.Advice 18 465 = 1^(-1)
--Annotation: assign q_enable 466
def fixed_1910: Prop := c.Fixed 0 466 = 1
--Annotation: assign q_first 466
def fixed_1911: Prop := c.Fixed 1 466 = 0
--Annotation: assign q_last 466
def fixed_1912: Prop := c.Fixed 2 466 = 0
--Annotation: assign tag 466
def advice_0_466: Prop := c.Advice 0 466 = 0
--Annotation: assign index 466
def advice_1_466: Prop := c.Advice 1 466 = 0
--Annotation: assign is_code 466
def advice_2_466: Prop := c.Advice 2 466 = 0
--Annotation: assign value 466
def advice_3_466: Prop := c.Advice 3 466 = 0
--Annotation: assign push_data_left 466
def advice_13_466: Prop := c.Advice 13 466 = 0
--Annotation: assign length 466
def advice_15_466: Prop := c.Advice 15 466 = 0
--Annotation: assign push_data_size 466
def advice_16_466: Prop := c.Advice 16 466 = 0
--Annotation: assign value_rlc 466
def advice_14_466: Prop := c.Advice 14 466 = 0
--Annotation: assign code_hash 466
def advice_4_466: Prop := c.Advice 4 466 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 466
def advice_5_466: Prop := c.Advice 5 466 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_466: Prop := c.Advice 17 466 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_466: Prop := c.Advice 18 466 = 1^(-1)
--Annotation: assign q_enable 467
def fixed_1913: Prop := c.Fixed 0 467 = 1
--Annotation: assign q_first 467
def fixed_1914: Prop := c.Fixed 1 467 = 0
--Annotation: assign q_last 467
def fixed_1915: Prop := c.Fixed 2 467 = 0
--Annotation: assign tag 467
def advice_0_467: Prop := c.Advice 0 467 = 0
--Annotation: assign index 467
def advice_1_467: Prop := c.Advice 1 467 = 0
--Annotation: assign is_code 467
def advice_2_467: Prop := c.Advice 2 467 = 0
--Annotation: assign value 467
def advice_3_467: Prop := c.Advice 3 467 = 0
--Annotation: assign push_data_left 467
def advice_13_467: Prop := c.Advice 13 467 = 0
--Annotation: assign length 467
def advice_15_467: Prop := c.Advice 15 467 = 0
--Annotation: assign push_data_size 467
def advice_16_467: Prop := c.Advice 16 467 = 0
--Annotation: assign value_rlc 467
def advice_14_467: Prop := c.Advice 14 467 = 0
--Annotation: assign code_hash 467
def advice_4_467: Prop := c.Advice 4 467 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 467
def advice_5_467: Prop := c.Advice 5 467 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_467: Prop := c.Advice 17 467 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_467: Prop := c.Advice 18 467 = 1^(-1)
--Annotation: assign q_enable 468
def fixed_1916: Prop := c.Fixed 0 468 = 1
--Annotation: assign q_first 468
def fixed_1917: Prop := c.Fixed 1 468 = 0
--Annotation: assign q_last 468
def fixed_1918: Prop := c.Fixed 2 468 = 0
--Annotation: assign tag 468
def advice_0_468: Prop := c.Advice 0 468 = 0
--Annotation: assign index 468
def advice_1_468: Prop := c.Advice 1 468 = 0
--Annotation: assign is_code 468
def advice_2_468: Prop := c.Advice 2 468 = 0
--Annotation: assign value 468
def advice_3_468: Prop := c.Advice 3 468 = 0
--Annotation: assign push_data_left 468
def advice_13_468: Prop := c.Advice 13 468 = 0
--Annotation: assign length 468
def advice_15_468: Prop := c.Advice 15 468 = 0
--Annotation: assign push_data_size 468
def advice_16_468: Prop := c.Advice 16 468 = 0
--Annotation: assign value_rlc 468
def advice_14_468: Prop := c.Advice 14 468 = 0
--Annotation: assign code_hash 468
def advice_4_468: Prop := c.Advice 4 468 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 468
def advice_5_468: Prop := c.Advice 5 468 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_468: Prop := c.Advice 17 468 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_468: Prop := c.Advice 18 468 = 1^(-1)
--Annotation: assign q_enable 469
def fixed_1919: Prop := c.Fixed 0 469 = 1
--Annotation: assign q_first 469
def fixed_1920: Prop := c.Fixed 1 469 = 0
--Annotation: assign q_last 469
def fixed_1921: Prop := c.Fixed 2 469 = 0
--Annotation: assign tag 469
def advice_0_469: Prop := c.Advice 0 469 = 0
--Annotation: assign index 469
def advice_1_469: Prop := c.Advice 1 469 = 0
--Annotation: assign is_code 469
def advice_2_469: Prop := c.Advice 2 469 = 0
--Annotation: assign value 469
def advice_3_469: Prop := c.Advice 3 469 = 0
--Annotation: assign push_data_left 469
def advice_13_469: Prop := c.Advice 13 469 = 0
--Annotation: assign length 469
def advice_15_469: Prop := c.Advice 15 469 = 0
--Annotation: assign push_data_size 469
def advice_16_469: Prop := c.Advice 16 469 = 0
--Annotation: assign value_rlc 469
def advice_14_469: Prop := c.Advice 14 469 = 0
--Annotation: assign code_hash 469
def advice_4_469: Prop := c.Advice 4 469 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 469
def advice_5_469: Prop := c.Advice 5 469 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_469: Prop := c.Advice 17 469 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_469: Prop := c.Advice 18 469 = 1^(-1)
--Annotation: assign q_enable 470
def fixed_1922: Prop := c.Fixed 0 470 = 1
--Annotation: assign q_first 470
def fixed_1923: Prop := c.Fixed 1 470 = 0
--Annotation: assign q_last 470
def fixed_1924: Prop := c.Fixed 2 470 = 0
--Annotation: assign tag 470
def advice_0_470: Prop := c.Advice 0 470 = 0
--Annotation: assign index 470
def advice_1_470: Prop := c.Advice 1 470 = 0
--Annotation: assign is_code 470
def advice_2_470: Prop := c.Advice 2 470 = 0
--Annotation: assign value 470
def advice_3_470: Prop := c.Advice 3 470 = 0
--Annotation: assign push_data_left 470
def advice_13_470: Prop := c.Advice 13 470 = 0
--Annotation: assign length 470
def advice_15_470: Prop := c.Advice 15 470 = 0
--Annotation: assign push_data_size 470
def advice_16_470: Prop := c.Advice 16 470 = 0
--Annotation: assign value_rlc 470
def advice_14_470: Prop := c.Advice 14 470 = 0
--Annotation: assign code_hash 470
def advice_4_470: Prop := c.Advice 4 470 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 470
def advice_5_470: Prop := c.Advice 5 470 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_470: Prop := c.Advice 17 470 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_470: Prop := c.Advice 18 470 = 1^(-1)
--Annotation: assign q_enable 471
def fixed_1925: Prop := c.Fixed 0 471 = 1
--Annotation: assign q_first 471
def fixed_1926: Prop := c.Fixed 1 471 = 0
--Annotation: assign q_last 471
def fixed_1927: Prop := c.Fixed 2 471 = 0
--Annotation: assign tag 471
def advice_0_471: Prop := c.Advice 0 471 = 0
--Annotation: assign index 471
def advice_1_471: Prop := c.Advice 1 471 = 0
--Annotation: assign is_code 471
def advice_2_471: Prop := c.Advice 2 471 = 0
--Annotation: assign value 471
def advice_3_471: Prop := c.Advice 3 471 = 0
--Annotation: assign push_data_left 471
def advice_13_471: Prop := c.Advice 13 471 = 0
--Annotation: assign length 471
def advice_15_471: Prop := c.Advice 15 471 = 0
--Annotation: assign push_data_size 471
def advice_16_471: Prop := c.Advice 16 471 = 0
--Annotation: assign value_rlc 471
def advice_14_471: Prop := c.Advice 14 471 = 0
--Annotation: assign code_hash 471
def advice_4_471: Prop := c.Advice 4 471 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 471
def advice_5_471: Prop := c.Advice 5 471 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_471: Prop := c.Advice 17 471 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_471: Prop := c.Advice 18 471 = 1^(-1)
--Annotation: assign q_enable 472
def fixed_1928: Prop := c.Fixed 0 472 = 1
--Annotation: assign q_first 472
def fixed_1929: Prop := c.Fixed 1 472 = 0
--Annotation: assign q_last 472
def fixed_1930: Prop := c.Fixed 2 472 = 0
--Annotation: assign tag 472
def advice_0_472: Prop := c.Advice 0 472 = 0
--Annotation: assign index 472
def advice_1_472: Prop := c.Advice 1 472 = 0
--Annotation: assign is_code 472
def advice_2_472: Prop := c.Advice 2 472 = 0
--Annotation: assign value 472
def advice_3_472: Prop := c.Advice 3 472 = 0
--Annotation: assign push_data_left 472
def advice_13_472: Prop := c.Advice 13 472 = 0
--Annotation: assign length 472
def advice_15_472: Prop := c.Advice 15 472 = 0
--Annotation: assign push_data_size 472
def advice_16_472: Prop := c.Advice 16 472 = 0
--Annotation: assign value_rlc 472
def advice_14_472: Prop := c.Advice 14 472 = 0
--Annotation: assign code_hash 472
def advice_4_472: Prop := c.Advice 4 472 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 472
def advice_5_472: Prop := c.Advice 5 472 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_472: Prop := c.Advice 17 472 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_472: Prop := c.Advice 18 472 = 1^(-1)
--Annotation: assign q_enable 473
def fixed_1931: Prop := c.Fixed 0 473 = 1
--Annotation: assign q_first 473
def fixed_1932: Prop := c.Fixed 1 473 = 0
--Annotation: assign q_last 473
def fixed_1933: Prop := c.Fixed 2 473 = 0
--Annotation: assign tag 473
def advice_0_473: Prop := c.Advice 0 473 = 0
--Annotation: assign index 473
def advice_1_473: Prop := c.Advice 1 473 = 0
--Annotation: assign is_code 473
def advice_2_473: Prop := c.Advice 2 473 = 0
--Annotation: assign value 473
def advice_3_473: Prop := c.Advice 3 473 = 0
--Annotation: assign push_data_left 473
def advice_13_473: Prop := c.Advice 13 473 = 0
--Annotation: assign length 473
def advice_15_473: Prop := c.Advice 15 473 = 0
--Annotation: assign push_data_size 473
def advice_16_473: Prop := c.Advice 16 473 = 0
--Annotation: assign value_rlc 473
def advice_14_473: Prop := c.Advice 14 473 = 0
--Annotation: assign code_hash 473
def advice_4_473: Prop := c.Advice 4 473 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 473
def advice_5_473: Prop := c.Advice 5 473 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_473: Prop := c.Advice 17 473 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_473: Prop := c.Advice 18 473 = 1^(-1)
--Annotation: assign q_enable 474
def fixed_1934: Prop := c.Fixed 0 474 = 1
--Annotation: assign q_first 474
def fixed_1935: Prop := c.Fixed 1 474 = 0
--Annotation: assign q_last 474
def fixed_1936: Prop := c.Fixed 2 474 = 0
--Annotation: assign tag 474
def advice_0_474: Prop := c.Advice 0 474 = 0
--Annotation: assign index 474
def advice_1_474: Prop := c.Advice 1 474 = 0
--Annotation: assign is_code 474
def advice_2_474: Prop := c.Advice 2 474 = 0
--Annotation: assign value 474
def advice_3_474: Prop := c.Advice 3 474 = 0
--Annotation: assign push_data_left 474
def advice_13_474: Prop := c.Advice 13 474 = 0
--Annotation: assign length 474
def advice_15_474: Prop := c.Advice 15 474 = 0
--Annotation: assign push_data_size 474
def advice_16_474: Prop := c.Advice 16 474 = 0
--Annotation: assign value_rlc 474
def advice_14_474: Prop := c.Advice 14 474 = 0
--Annotation: assign code_hash 474
def advice_4_474: Prop := c.Advice 4 474 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 474
def advice_5_474: Prop := c.Advice 5 474 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_474: Prop := c.Advice 17 474 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_474: Prop := c.Advice 18 474 = 1^(-1)
--Annotation: assign q_enable 475
def fixed_1937: Prop := c.Fixed 0 475 = 1
--Annotation: assign q_first 475
def fixed_1938: Prop := c.Fixed 1 475 = 0
--Annotation: assign q_last 475
def fixed_1939: Prop := c.Fixed 2 475 = 0
--Annotation: assign tag 475
def advice_0_475: Prop := c.Advice 0 475 = 0
--Annotation: assign index 475
def advice_1_475: Prop := c.Advice 1 475 = 0
--Annotation: assign is_code 475
def advice_2_475: Prop := c.Advice 2 475 = 0
--Annotation: assign value 475
def advice_3_475: Prop := c.Advice 3 475 = 0
--Annotation: assign push_data_left 475
def advice_13_475: Prop := c.Advice 13 475 = 0
--Annotation: assign length 475
def advice_15_475: Prop := c.Advice 15 475 = 0
--Annotation: assign push_data_size 475
def advice_16_475: Prop := c.Advice 16 475 = 0
--Annotation: assign value_rlc 475
def advice_14_475: Prop := c.Advice 14 475 = 0
--Annotation: assign code_hash 475
def advice_4_475: Prop := c.Advice 4 475 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 475
def advice_5_475: Prop := c.Advice 5 475 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_475: Prop := c.Advice 17 475 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_475: Prop := c.Advice 18 475 = 1^(-1)
--Annotation: assign q_enable 476
def fixed_1940: Prop := c.Fixed 0 476 = 1
--Annotation: assign q_first 476
def fixed_1941: Prop := c.Fixed 1 476 = 0
--Annotation: assign q_last 476
def fixed_1942: Prop := c.Fixed 2 476 = 0
--Annotation: assign tag 476
def advice_0_476: Prop := c.Advice 0 476 = 0
--Annotation: assign index 476
def advice_1_476: Prop := c.Advice 1 476 = 0
--Annotation: assign is_code 476
def advice_2_476: Prop := c.Advice 2 476 = 0
--Annotation: assign value 476
def advice_3_476: Prop := c.Advice 3 476 = 0
--Annotation: assign push_data_left 476
def advice_13_476: Prop := c.Advice 13 476 = 0
--Annotation: assign length 476
def advice_15_476: Prop := c.Advice 15 476 = 0
--Annotation: assign push_data_size 476
def advice_16_476: Prop := c.Advice 16 476 = 0
--Annotation: assign value_rlc 476
def advice_14_476: Prop := c.Advice 14 476 = 0
--Annotation: assign code_hash 476
def advice_4_476: Prop := c.Advice 4 476 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 476
def advice_5_476: Prop := c.Advice 5 476 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_476: Prop := c.Advice 17 476 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_476: Prop := c.Advice 18 476 = 1^(-1)
--Annotation: assign q_enable 477
def fixed_1943: Prop := c.Fixed 0 477 = 1
--Annotation: assign q_first 477
def fixed_1944: Prop := c.Fixed 1 477 = 0
--Annotation: assign q_last 477
def fixed_1945: Prop := c.Fixed 2 477 = 0
--Annotation: assign tag 477
def advice_0_477: Prop := c.Advice 0 477 = 0
--Annotation: assign index 477
def advice_1_477: Prop := c.Advice 1 477 = 0
--Annotation: assign is_code 477
def advice_2_477: Prop := c.Advice 2 477 = 0
--Annotation: assign value 477
def advice_3_477: Prop := c.Advice 3 477 = 0
--Annotation: assign push_data_left 477
def advice_13_477: Prop := c.Advice 13 477 = 0
--Annotation: assign length 477
def advice_15_477: Prop := c.Advice 15 477 = 0
--Annotation: assign push_data_size 477
def advice_16_477: Prop := c.Advice 16 477 = 0
--Annotation: assign value_rlc 477
def advice_14_477: Prop := c.Advice 14 477 = 0
--Annotation: assign code_hash 477
def advice_4_477: Prop := c.Advice 4 477 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 477
def advice_5_477: Prop := c.Advice 5 477 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_477: Prop := c.Advice 17 477 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_477: Prop := c.Advice 18 477 = 1^(-1)
--Annotation: assign q_enable 478
def fixed_1946: Prop := c.Fixed 0 478 = 1
--Annotation: assign q_first 478
def fixed_1947: Prop := c.Fixed 1 478 = 0
--Annotation: assign q_last 478
def fixed_1948: Prop := c.Fixed 2 478 = 0
--Annotation: assign tag 478
def advice_0_478: Prop := c.Advice 0 478 = 0
--Annotation: assign index 478
def advice_1_478: Prop := c.Advice 1 478 = 0
--Annotation: assign is_code 478
def advice_2_478: Prop := c.Advice 2 478 = 0
--Annotation: assign value 478
def advice_3_478: Prop := c.Advice 3 478 = 0
--Annotation: assign push_data_left 478
def advice_13_478: Prop := c.Advice 13 478 = 0
--Annotation: assign length 478
def advice_15_478: Prop := c.Advice 15 478 = 0
--Annotation: assign push_data_size 478
def advice_16_478: Prop := c.Advice 16 478 = 0
--Annotation: assign value_rlc 478
def advice_14_478: Prop := c.Advice 14 478 = 0
--Annotation: assign code_hash 478
def advice_4_478: Prop := c.Advice 4 478 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 478
def advice_5_478: Prop := c.Advice 5 478 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_478: Prop := c.Advice 17 478 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_478: Prop := c.Advice 18 478 = 1^(-1)
--Annotation: assign q_enable 479
def fixed_1949: Prop := c.Fixed 0 479 = 1
--Annotation: assign q_first 479
def fixed_1950: Prop := c.Fixed 1 479 = 0
--Annotation: assign q_last 479
def fixed_1951: Prop := c.Fixed 2 479 = 0
--Annotation: assign tag 479
def advice_0_479: Prop := c.Advice 0 479 = 0
--Annotation: assign index 479
def advice_1_479: Prop := c.Advice 1 479 = 0
--Annotation: assign is_code 479
def advice_2_479: Prop := c.Advice 2 479 = 0
--Annotation: assign value 479
def advice_3_479: Prop := c.Advice 3 479 = 0
--Annotation: assign push_data_left 479
def advice_13_479: Prop := c.Advice 13 479 = 0
--Annotation: assign length 479
def advice_15_479: Prop := c.Advice 15 479 = 0
--Annotation: assign push_data_size 479
def advice_16_479: Prop := c.Advice 16 479 = 0
--Annotation: assign value_rlc 479
def advice_14_479: Prop := c.Advice 14 479 = 0
--Annotation: assign code_hash 479
def advice_4_479: Prop := c.Advice 4 479 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 479
def advice_5_479: Prop := c.Advice 5 479 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_479: Prop := c.Advice 17 479 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_479: Prop := c.Advice 18 479 = 1^(-1)
--Annotation: assign q_enable 480
def fixed_1952: Prop := c.Fixed 0 480 = 1
--Annotation: assign q_first 480
def fixed_1953: Prop := c.Fixed 1 480 = 0
--Annotation: assign q_last 480
def fixed_1954: Prop := c.Fixed 2 480 = 0
--Annotation: assign tag 480
def advice_0_480: Prop := c.Advice 0 480 = 0
--Annotation: assign index 480
def advice_1_480: Prop := c.Advice 1 480 = 0
--Annotation: assign is_code 480
def advice_2_480: Prop := c.Advice 2 480 = 0
--Annotation: assign value 480
def advice_3_480: Prop := c.Advice 3 480 = 0
--Annotation: assign push_data_left 480
def advice_13_480: Prop := c.Advice 13 480 = 0
--Annotation: assign length 480
def advice_15_480: Prop := c.Advice 15 480 = 0
--Annotation: assign push_data_size 480
def advice_16_480: Prop := c.Advice 16 480 = 0
--Annotation: assign value_rlc 480
def advice_14_480: Prop := c.Advice 14 480 = 0
--Annotation: assign code_hash 480
def advice_4_480: Prop := c.Advice 4 480 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 480
def advice_5_480: Prop := c.Advice 5 480 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_480: Prop := c.Advice 17 480 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_480: Prop := c.Advice 18 480 = 1^(-1)
--Annotation: assign q_enable 481
def fixed_1955: Prop := c.Fixed 0 481 = 1
--Annotation: assign q_first 481
def fixed_1956: Prop := c.Fixed 1 481 = 0
--Annotation: assign q_last 481
def fixed_1957: Prop := c.Fixed 2 481 = 0
--Annotation: assign tag 481
def advice_0_481: Prop := c.Advice 0 481 = 0
--Annotation: assign index 481
def advice_1_481: Prop := c.Advice 1 481 = 0
--Annotation: assign is_code 481
def advice_2_481: Prop := c.Advice 2 481 = 0
--Annotation: assign value 481
def advice_3_481: Prop := c.Advice 3 481 = 0
--Annotation: assign push_data_left 481
def advice_13_481: Prop := c.Advice 13 481 = 0
--Annotation: assign length 481
def advice_15_481: Prop := c.Advice 15 481 = 0
--Annotation: assign push_data_size 481
def advice_16_481: Prop := c.Advice 16 481 = 0
--Annotation: assign value_rlc 481
def advice_14_481: Prop := c.Advice 14 481 = 0
--Annotation: assign code_hash 481
def advice_4_481: Prop := c.Advice 4 481 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 481
def advice_5_481: Prop := c.Advice 5 481 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_481: Prop := c.Advice 17 481 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_481: Prop := c.Advice 18 481 = 1^(-1)
--Annotation: assign q_enable 482
def fixed_1958: Prop := c.Fixed 0 482 = 1
--Annotation: assign q_first 482
def fixed_1959: Prop := c.Fixed 1 482 = 0
--Annotation: assign q_last 482
def fixed_1960: Prop := c.Fixed 2 482 = 0
--Annotation: assign tag 482
def advice_0_482: Prop := c.Advice 0 482 = 0
--Annotation: assign index 482
def advice_1_482: Prop := c.Advice 1 482 = 0
--Annotation: assign is_code 482
def advice_2_482: Prop := c.Advice 2 482 = 0
--Annotation: assign value 482
def advice_3_482: Prop := c.Advice 3 482 = 0
--Annotation: assign push_data_left 482
def advice_13_482: Prop := c.Advice 13 482 = 0
--Annotation: assign length 482
def advice_15_482: Prop := c.Advice 15 482 = 0
--Annotation: assign push_data_size 482
def advice_16_482: Prop := c.Advice 16 482 = 0
--Annotation: assign value_rlc 482
def advice_14_482: Prop := c.Advice 14 482 = 0
--Annotation: assign code_hash 482
def advice_4_482: Prop := c.Advice 4 482 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 482
def advice_5_482: Prop := c.Advice 5 482 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_482: Prop := c.Advice 17 482 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_482: Prop := c.Advice 18 482 = 1^(-1)
--Annotation: assign q_enable 483
def fixed_1961: Prop := c.Fixed 0 483 = 1
--Annotation: assign q_first 483
def fixed_1962: Prop := c.Fixed 1 483 = 0
--Annotation: assign q_last 483
def fixed_1963: Prop := c.Fixed 2 483 = 0
--Annotation: assign tag 483
def advice_0_483: Prop := c.Advice 0 483 = 0
--Annotation: assign index 483
def advice_1_483: Prop := c.Advice 1 483 = 0
--Annotation: assign is_code 483
def advice_2_483: Prop := c.Advice 2 483 = 0
--Annotation: assign value 483
def advice_3_483: Prop := c.Advice 3 483 = 0
--Annotation: assign push_data_left 483
def advice_13_483: Prop := c.Advice 13 483 = 0
--Annotation: assign length 483
def advice_15_483: Prop := c.Advice 15 483 = 0
--Annotation: assign push_data_size 483
def advice_16_483: Prop := c.Advice 16 483 = 0
--Annotation: assign value_rlc 483
def advice_14_483: Prop := c.Advice 14 483 = 0
--Annotation: assign code_hash 483
def advice_4_483: Prop := c.Advice 4 483 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 483
def advice_5_483: Prop := c.Advice 5 483 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_483: Prop := c.Advice 17 483 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_483: Prop := c.Advice 18 483 = 1^(-1)
--Annotation: assign q_enable 484
def fixed_1964: Prop := c.Fixed 0 484 = 1
--Annotation: assign q_first 484
def fixed_1965: Prop := c.Fixed 1 484 = 0
--Annotation: assign q_last 484
def fixed_1966: Prop := c.Fixed 2 484 = 0
--Annotation: assign tag 484
def advice_0_484: Prop := c.Advice 0 484 = 0
--Annotation: assign index 484
def advice_1_484: Prop := c.Advice 1 484 = 0
--Annotation: assign is_code 484
def advice_2_484: Prop := c.Advice 2 484 = 0
--Annotation: assign value 484
def advice_3_484: Prop := c.Advice 3 484 = 0
--Annotation: assign push_data_left 484
def advice_13_484: Prop := c.Advice 13 484 = 0
--Annotation: assign length 484
def advice_15_484: Prop := c.Advice 15 484 = 0
--Annotation: assign push_data_size 484
def advice_16_484: Prop := c.Advice 16 484 = 0
--Annotation: assign value_rlc 484
def advice_14_484: Prop := c.Advice 14 484 = 0
--Annotation: assign code_hash 484
def advice_4_484: Prop := c.Advice 4 484 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 484
def advice_5_484: Prop := c.Advice 5 484 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_484: Prop := c.Advice 17 484 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_484: Prop := c.Advice 18 484 = 1^(-1)
--Annotation: assign q_enable 485
def fixed_1967: Prop := c.Fixed 0 485 = 1
--Annotation: assign q_first 485
def fixed_1968: Prop := c.Fixed 1 485 = 0
--Annotation: assign q_last 485
def fixed_1969: Prop := c.Fixed 2 485 = 0
--Annotation: assign tag 485
def advice_0_485: Prop := c.Advice 0 485 = 0
--Annotation: assign index 485
def advice_1_485: Prop := c.Advice 1 485 = 0
--Annotation: assign is_code 485
def advice_2_485: Prop := c.Advice 2 485 = 0
--Annotation: assign value 485
def advice_3_485: Prop := c.Advice 3 485 = 0
--Annotation: assign push_data_left 485
def advice_13_485: Prop := c.Advice 13 485 = 0
--Annotation: assign length 485
def advice_15_485: Prop := c.Advice 15 485 = 0
--Annotation: assign push_data_size 485
def advice_16_485: Prop := c.Advice 16 485 = 0
--Annotation: assign value_rlc 485
def advice_14_485: Prop := c.Advice 14 485 = 0
--Annotation: assign code_hash 485
def advice_4_485: Prop := c.Advice 4 485 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 485
def advice_5_485: Prop := c.Advice 5 485 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_485: Prop := c.Advice 17 485 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_485: Prop := c.Advice 18 485 = 1^(-1)
--Annotation: assign q_enable 486
def fixed_1970: Prop := c.Fixed 0 486 = 1
--Annotation: assign q_first 486
def fixed_1971: Prop := c.Fixed 1 486 = 0
--Annotation: assign q_last 486
def fixed_1972: Prop := c.Fixed 2 486 = 0
--Annotation: assign tag 486
def advice_0_486: Prop := c.Advice 0 486 = 0
--Annotation: assign index 486
def advice_1_486: Prop := c.Advice 1 486 = 0
--Annotation: assign is_code 486
def advice_2_486: Prop := c.Advice 2 486 = 0
--Annotation: assign value 486
def advice_3_486: Prop := c.Advice 3 486 = 0
--Annotation: assign push_data_left 486
def advice_13_486: Prop := c.Advice 13 486 = 0
--Annotation: assign length 486
def advice_15_486: Prop := c.Advice 15 486 = 0
--Annotation: assign push_data_size 486
def advice_16_486: Prop := c.Advice 16 486 = 0
--Annotation: assign value_rlc 486
def advice_14_486: Prop := c.Advice 14 486 = 0
--Annotation: assign code_hash 486
def advice_4_486: Prop := c.Advice 4 486 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 486
def advice_5_486: Prop := c.Advice 5 486 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_486: Prop := c.Advice 17 486 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_486: Prop := c.Advice 18 486 = 1^(-1)
--Annotation: assign q_enable 487
def fixed_1973: Prop := c.Fixed 0 487 = 1
--Annotation: assign q_first 487
def fixed_1974: Prop := c.Fixed 1 487 = 0
--Annotation: assign q_last 487
def fixed_1975: Prop := c.Fixed 2 487 = 0
--Annotation: assign tag 487
def advice_0_487: Prop := c.Advice 0 487 = 0
--Annotation: assign index 487
def advice_1_487: Prop := c.Advice 1 487 = 0
--Annotation: assign is_code 487
def advice_2_487: Prop := c.Advice 2 487 = 0
--Annotation: assign value 487
def advice_3_487: Prop := c.Advice 3 487 = 0
--Annotation: assign push_data_left 487
def advice_13_487: Prop := c.Advice 13 487 = 0
--Annotation: assign length 487
def advice_15_487: Prop := c.Advice 15 487 = 0
--Annotation: assign push_data_size 487
def advice_16_487: Prop := c.Advice 16 487 = 0
--Annotation: assign value_rlc 487
def advice_14_487: Prop := c.Advice 14 487 = 0
--Annotation: assign code_hash 487
def advice_4_487: Prop := c.Advice 4 487 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 487
def advice_5_487: Prop := c.Advice 5 487 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_487: Prop := c.Advice 17 487 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_487: Prop := c.Advice 18 487 = 1^(-1)
--Annotation: assign q_enable 488
def fixed_1976: Prop := c.Fixed 0 488 = 1
--Annotation: assign q_first 488
def fixed_1977: Prop := c.Fixed 1 488 = 0
--Annotation: assign q_last 488
def fixed_1978: Prop := c.Fixed 2 488 = 0
--Annotation: assign tag 488
def advice_0_488: Prop := c.Advice 0 488 = 0
--Annotation: assign index 488
def advice_1_488: Prop := c.Advice 1 488 = 0
--Annotation: assign is_code 488
def advice_2_488: Prop := c.Advice 2 488 = 0
--Annotation: assign value 488
def advice_3_488: Prop := c.Advice 3 488 = 0
--Annotation: assign push_data_left 488
def advice_13_488: Prop := c.Advice 13 488 = 0
--Annotation: assign length 488
def advice_15_488: Prop := c.Advice 15 488 = 0
--Annotation: assign push_data_size 488
def advice_16_488: Prop := c.Advice 16 488 = 0
--Annotation: assign value_rlc 488
def advice_14_488: Prop := c.Advice 14 488 = 0
--Annotation: assign code_hash 488
def advice_4_488: Prop := c.Advice 4 488 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 488
def advice_5_488: Prop := c.Advice 5 488 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_488: Prop := c.Advice 17 488 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_488: Prop := c.Advice 18 488 = 1^(-1)
--Annotation: assign q_enable 489
def fixed_1979: Prop := c.Fixed 0 489 = 1
--Annotation: assign q_first 489
def fixed_1980: Prop := c.Fixed 1 489 = 0
--Annotation: assign q_last 489
def fixed_1981: Prop := c.Fixed 2 489 = 0
--Annotation: assign tag 489
def advice_0_489: Prop := c.Advice 0 489 = 0
--Annotation: assign index 489
def advice_1_489: Prop := c.Advice 1 489 = 0
--Annotation: assign is_code 489
def advice_2_489: Prop := c.Advice 2 489 = 0
--Annotation: assign value 489
def advice_3_489: Prop := c.Advice 3 489 = 0
--Annotation: assign push_data_left 489
def advice_13_489: Prop := c.Advice 13 489 = 0
--Annotation: assign length 489
def advice_15_489: Prop := c.Advice 15 489 = 0
--Annotation: assign push_data_size 489
def advice_16_489: Prop := c.Advice 16 489 = 0
--Annotation: assign value_rlc 489
def advice_14_489: Prop := c.Advice 14 489 = 0
--Annotation: assign code_hash 489
def advice_4_489: Prop := c.Advice 4 489 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 489
def advice_5_489: Prop := c.Advice 5 489 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_489: Prop := c.Advice 17 489 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_489: Prop := c.Advice 18 489 = 1^(-1)
--Annotation: assign q_enable 490
def fixed_1982: Prop := c.Fixed 0 490 = 1
--Annotation: assign q_first 490
def fixed_1983: Prop := c.Fixed 1 490 = 0
--Annotation: assign q_last 490
def fixed_1984: Prop := c.Fixed 2 490 = 0
--Annotation: assign tag 490
def advice_0_490: Prop := c.Advice 0 490 = 0
--Annotation: assign index 490
def advice_1_490: Prop := c.Advice 1 490 = 0
--Annotation: assign is_code 490
def advice_2_490: Prop := c.Advice 2 490 = 0
--Annotation: assign value 490
def advice_3_490: Prop := c.Advice 3 490 = 0
--Annotation: assign push_data_left 490
def advice_13_490: Prop := c.Advice 13 490 = 0
--Annotation: assign length 490
def advice_15_490: Prop := c.Advice 15 490 = 0
--Annotation: assign push_data_size 490
def advice_16_490: Prop := c.Advice 16 490 = 0
--Annotation: assign value_rlc 490
def advice_14_490: Prop := c.Advice 14 490 = 0
--Annotation: assign code_hash 490
def advice_4_490: Prop := c.Advice 4 490 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 490
def advice_5_490: Prop := c.Advice 5 490 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_490: Prop := c.Advice 17 490 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_490: Prop := c.Advice 18 490 = 1^(-1)
--Annotation: assign q_enable 491
def fixed_1985: Prop := c.Fixed 0 491 = 1
--Annotation: assign q_first 491
def fixed_1986: Prop := c.Fixed 1 491 = 0
--Annotation: assign q_last 491
def fixed_1987: Prop := c.Fixed 2 491 = 0
--Annotation: assign tag 491
def advice_0_491: Prop := c.Advice 0 491 = 0
--Annotation: assign index 491
def advice_1_491: Prop := c.Advice 1 491 = 0
--Annotation: assign is_code 491
def advice_2_491: Prop := c.Advice 2 491 = 0
--Annotation: assign value 491
def advice_3_491: Prop := c.Advice 3 491 = 0
--Annotation: assign push_data_left 491
def advice_13_491: Prop := c.Advice 13 491 = 0
--Annotation: assign length 491
def advice_15_491: Prop := c.Advice 15 491 = 0
--Annotation: assign push_data_size 491
def advice_16_491: Prop := c.Advice 16 491 = 0
--Annotation: assign value_rlc 491
def advice_14_491: Prop := c.Advice 14 491 = 0
--Annotation: assign code_hash 491
def advice_4_491: Prop := c.Advice 4 491 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 491
def advice_5_491: Prop := c.Advice 5 491 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_491: Prop := c.Advice 17 491 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_491: Prop := c.Advice 18 491 = 1^(-1)
--Annotation: assign q_enable 492
def fixed_1988: Prop := c.Fixed 0 492 = 1
--Annotation: assign q_first 492
def fixed_1989: Prop := c.Fixed 1 492 = 0
--Annotation: assign q_last 492
def fixed_1990: Prop := c.Fixed 2 492 = 0
--Annotation: assign tag 492
def advice_0_492: Prop := c.Advice 0 492 = 0
--Annotation: assign index 492
def advice_1_492: Prop := c.Advice 1 492 = 0
--Annotation: assign is_code 492
def advice_2_492: Prop := c.Advice 2 492 = 0
--Annotation: assign value 492
def advice_3_492: Prop := c.Advice 3 492 = 0
--Annotation: assign push_data_left 492
def advice_13_492: Prop := c.Advice 13 492 = 0
--Annotation: assign length 492
def advice_15_492: Prop := c.Advice 15 492 = 0
--Annotation: assign push_data_size 492
def advice_16_492: Prop := c.Advice 16 492 = 0
--Annotation: assign value_rlc 492
def advice_14_492: Prop := c.Advice 14 492 = 0
--Annotation: assign code_hash 492
def advice_4_492: Prop := c.Advice 4 492 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 492
def advice_5_492: Prop := c.Advice 5 492 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_492: Prop := c.Advice 17 492 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_492: Prop := c.Advice 18 492 = 1^(-1)
--Annotation: assign q_enable 493
def fixed_1991: Prop := c.Fixed 0 493 = 1
--Annotation: assign q_first 493
def fixed_1992: Prop := c.Fixed 1 493 = 0
--Annotation: assign q_last 493
def fixed_1993: Prop := c.Fixed 2 493 = 0
--Annotation: assign tag 493
def advice_0_493: Prop := c.Advice 0 493 = 0
--Annotation: assign index 493
def advice_1_493: Prop := c.Advice 1 493 = 0
--Annotation: assign is_code 493
def advice_2_493: Prop := c.Advice 2 493 = 0
--Annotation: assign value 493
def advice_3_493: Prop := c.Advice 3 493 = 0
--Annotation: assign push_data_left 493
def advice_13_493: Prop := c.Advice 13 493 = 0
--Annotation: assign length 493
def advice_15_493: Prop := c.Advice 15 493 = 0
--Annotation: assign push_data_size 493
def advice_16_493: Prop := c.Advice 16 493 = 0
--Annotation: assign value_rlc 493
def advice_14_493: Prop := c.Advice 14 493 = 0
--Annotation: assign code_hash 493
def advice_4_493: Prop := c.Advice 4 493 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 493
def advice_5_493: Prop := c.Advice 5 493 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_493: Prop := c.Advice 17 493 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_493: Prop := c.Advice 18 493 = 1^(-1)
--Annotation: assign q_enable 494
def fixed_1994: Prop := c.Fixed 0 494 = 1
--Annotation: assign q_first 494
def fixed_1995: Prop := c.Fixed 1 494 = 0
--Annotation: assign q_last 494
def fixed_1996: Prop := c.Fixed 2 494 = 0
--Annotation: assign tag 494
def advice_0_494: Prop := c.Advice 0 494 = 0
--Annotation: assign index 494
def advice_1_494: Prop := c.Advice 1 494 = 0
--Annotation: assign is_code 494
def advice_2_494: Prop := c.Advice 2 494 = 0
--Annotation: assign value 494
def advice_3_494: Prop := c.Advice 3 494 = 0
--Annotation: assign push_data_left 494
def advice_13_494: Prop := c.Advice 13 494 = 0
--Annotation: assign length 494
def advice_15_494: Prop := c.Advice 15 494 = 0
--Annotation: assign push_data_size 494
def advice_16_494: Prop := c.Advice 16 494 = 0
--Annotation: assign value_rlc 494
def advice_14_494: Prop := c.Advice 14 494 = 0
--Annotation: assign code_hash 494
def advice_4_494: Prop := c.Advice 4 494 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 494
def advice_5_494: Prop := c.Advice 5 494 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_494: Prop := c.Advice 17 494 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_494: Prop := c.Advice 18 494 = 1^(-1)
--Annotation: assign q_enable 495
def fixed_1997: Prop := c.Fixed 0 495 = 1
--Annotation: assign q_first 495
def fixed_1998: Prop := c.Fixed 1 495 = 0
--Annotation: assign q_last 495
def fixed_1999: Prop := c.Fixed 2 495 = 0
--Annotation: assign tag 495
def advice_0_495: Prop := c.Advice 0 495 = 0
--Annotation: assign index 495
def advice_1_495: Prop := c.Advice 1 495 = 0
--Annotation: assign is_code 495
def advice_2_495: Prop := c.Advice 2 495 = 0
--Annotation: assign value 495
def advice_3_495: Prop := c.Advice 3 495 = 0
--Annotation: assign push_data_left 495
def advice_13_495: Prop := c.Advice 13 495 = 0
--Annotation: assign length 495
def advice_15_495: Prop := c.Advice 15 495 = 0
--Annotation: assign push_data_size 495
def advice_16_495: Prop := c.Advice 16 495 = 0
--Annotation: assign value_rlc 495
def advice_14_495: Prop := c.Advice 14 495 = 0
--Annotation: assign code_hash 495
def advice_4_495: Prop := c.Advice 4 495 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 495
def advice_5_495: Prop := c.Advice 5 495 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_495: Prop := c.Advice 17 495 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_495: Prop := c.Advice 18 495 = 1^(-1)
--Annotation: assign q_enable 496
def fixed_2000: Prop := c.Fixed 0 496 = 1
--Annotation: assign q_first 496
def fixed_2001: Prop := c.Fixed 1 496 = 0
--Annotation: assign q_last 496
def fixed_2002: Prop := c.Fixed 2 496 = 0
--Annotation: assign tag 496
def advice_0_496: Prop := c.Advice 0 496 = 0
--Annotation: assign index 496
def advice_1_496: Prop := c.Advice 1 496 = 0
--Annotation: assign is_code 496
def advice_2_496: Prop := c.Advice 2 496 = 0
--Annotation: assign value 496
def advice_3_496: Prop := c.Advice 3 496 = 0
--Annotation: assign push_data_left 496
def advice_13_496: Prop := c.Advice 13 496 = 0
--Annotation: assign length 496
def advice_15_496: Prop := c.Advice 15 496 = 0
--Annotation: assign push_data_size 496
def advice_16_496: Prop := c.Advice 16 496 = 0
--Annotation: assign value_rlc 496
def advice_14_496: Prop := c.Advice 14 496 = 0
--Annotation: assign code_hash 496
def advice_4_496: Prop := c.Advice 4 496 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 496
def advice_5_496: Prop := c.Advice 5 496 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_496: Prop := c.Advice 17 496 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_496: Prop := c.Advice 18 496 = 1^(-1)
--Annotation: assign q_enable 497
def fixed_2003: Prop := c.Fixed 0 497 = 1
--Annotation: assign q_first 497
def fixed_2004: Prop := c.Fixed 1 497 = 0
--Annotation: assign q_last 497
def fixed_2005: Prop := c.Fixed 2 497 = 0
--Annotation: assign tag 497
def advice_0_497: Prop := c.Advice 0 497 = 0
--Annotation: assign index 497
def advice_1_497: Prop := c.Advice 1 497 = 0
--Annotation: assign is_code 497
def advice_2_497: Prop := c.Advice 2 497 = 0
--Annotation: assign value 497
def advice_3_497: Prop := c.Advice 3 497 = 0
--Annotation: assign push_data_left 497
def advice_13_497: Prop := c.Advice 13 497 = 0
--Annotation: assign length 497
def advice_15_497: Prop := c.Advice 15 497 = 0
--Annotation: assign push_data_size 497
def advice_16_497: Prop := c.Advice 16 497 = 0
--Annotation: assign value_rlc 497
def advice_14_497: Prop := c.Advice 14 497 = 0
--Annotation: assign code_hash 497
def advice_4_497: Prop := c.Advice 4 497 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 497
def advice_5_497: Prop := c.Advice 5 497 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_497: Prop := c.Advice 17 497 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_497: Prop := c.Advice 18 497 = 1^(-1)
--Annotation: assign q_enable 498
def fixed_2006: Prop := c.Fixed 0 498 = 1
--Annotation: assign q_first 498
def fixed_2007: Prop := c.Fixed 1 498 = 0
--Annotation: assign q_last 498
def fixed_2008: Prop := c.Fixed 2 498 = 0
--Annotation: assign tag 498
def advice_0_498: Prop := c.Advice 0 498 = 0
--Annotation: assign index 498
def advice_1_498: Prop := c.Advice 1 498 = 0
--Annotation: assign is_code 498
def advice_2_498: Prop := c.Advice 2 498 = 0
--Annotation: assign value 498
def advice_3_498: Prop := c.Advice 3 498 = 0
--Annotation: assign push_data_left 498
def advice_13_498: Prop := c.Advice 13 498 = 0
--Annotation: assign length 498
def advice_15_498: Prop := c.Advice 15 498 = 0
--Annotation: assign push_data_size 498
def advice_16_498: Prop := c.Advice 16 498 = 0
--Annotation: assign value_rlc 498
def advice_14_498: Prop := c.Advice 14 498 = 0
--Annotation: assign code_hash 498
def advice_4_498: Prop := c.Advice 4 498 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 498
def advice_5_498: Prop := c.Advice 5 498 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_498: Prop := c.Advice 17 498 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_498: Prop := c.Advice 18 498 = 1^(-1)
--Annotation: assign q_enable 499
def fixed_2009: Prop := c.Fixed 0 499 = 1
--Annotation: assign q_first 499
def fixed_2010: Prop := c.Fixed 1 499 = 0
--Annotation: assign q_last 499
def fixed_2011: Prop := c.Fixed 2 499 = 0
--Annotation: assign tag 499
def advice_0_499: Prop := c.Advice 0 499 = 0
--Annotation: assign index 499
def advice_1_499: Prop := c.Advice 1 499 = 0
--Annotation: assign is_code 499
def advice_2_499: Prop := c.Advice 2 499 = 0
--Annotation: assign value 499
def advice_3_499: Prop := c.Advice 3 499 = 0
--Annotation: assign push_data_left 499
def advice_13_499: Prop := c.Advice 13 499 = 0
--Annotation: assign length 499
def advice_15_499: Prop := c.Advice 15 499 = 0
--Annotation: assign push_data_size 499
def advice_16_499: Prop := c.Advice 16 499 = 0
--Annotation: assign value_rlc 499
def advice_14_499: Prop := c.Advice 14 499 = 0
--Annotation: assign code_hash 499
def advice_4_499: Prop := c.Advice 4 499 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 499
def advice_5_499: Prop := c.Advice 5 499 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_499: Prop := c.Advice 17 499 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_499: Prop := c.Advice 18 499 = 1^(-1)
--Annotation: assign q_enable 500
def fixed_2012: Prop := c.Fixed 0 500 = 1
--Annotation: assign q_first 500
def fixed_2013: Prop := c.Fixed 1 500 = 0
--Annotation: assign q_last 500
def fixed_2014: Prop := c.Fixed 2 500 = 0
--Annotation: assign tag 500
def advice_0_500: Prop := c.Advice 0 500 = 0
--Annotation: assign index 500
def advice_1_500: Prop := c.Advice 1 500 = 0
--Annotation: assign is_code 500
def advice_2_500: Prop := c.Advice 2 500 = 0
--Annotation: assign value 500
def advice_3_500: Prop := c.Advice 3 500 = 0
--Annotation: assign push_data_left 500
def advice_13_500: Prop := c.Advice 13 500 = 0
--Annotation: assign length 500
def advice_15_500: Prop := c.Advice 15 500 = 0
--Annotation: assign push_data_size 500
def advice_16_500: Prop := c.Advice 16 500 = 0
--Annotation: assign value_rlc 500
def advice_14_500: Prop := c.Advice 14 500 = 0
--Annotation: assign code_hash 500
def advice_4_500: Prop := c.Advice 4 500 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 500
def advice_5_500: Prop := c.Advice 5 500 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_500: Prop := c.Advice 17 500 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_500: Prop := c.Advice 18 500 = 1^(-1)
--Annotation: assign q_enable 501
def fixed_2015: Prop := c.Fixed 0 501 = 1
--Annotation: assign q_first 501
def fixed_2016: Prop := c.Fixed 1 501 = 0
--Annotation: assign q_last 501
def fixed_2017: Prop := c.Fixed 2 501 = 0
--Annotation: assign tag 501
def advice_0_501: Prop := c.Advice 0 501 = 0
--Annotation: assign index 501
def advice_1_501: Prop := c.Advice 1 501 = 0
--Annotation: assign is_code 501
def advice_2_501: Prop := c.Advice 2 501 = 0
--Annotation: assign value 501
def advice_3_501: Prop := c.Advice 3 501 = 0
--Annotation: assign push_data_left 501
def advice_13_501: Prop := c.Advice 13 501 = 0
--Annotation: assign length 501
def advice_15_501: Prop := c.Advice 15 501 = 0
--Annotation: assign push_data_size 501
def advice_16_501: Prop := c.Advice 16 501 = 0
--Annotation: assign value_rlc 501
def advice_14_501: Prop := c.Advice 14 501 = 0
--Annotation: assign code_hash 501
def advice_4_501: Prop := c.Advice 4 501 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 501
def advice_5_501: Prop := c.Advice 5 501 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_501: Prop := c.Advice 17 501 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_501: Prop := c.Advice 18 501 = 1^(-1)
--Annotation: assign q_enable 502
def fixed_2018: Prop := c.Fixed 0 502 = 1
--Annotation: assign q_first 502
def fixed_2019: Prop := c.Fixed 1 502 = 0
--Annotation: assign q_last 502
def fixed_2020: Prop := c.Fixed 2 502 = 0
--Annotation: assign tag 502
def advice_0_502: Prop := c.Advice 0 502 = 0
--Annotation: assign index 502
def advice_1_502: Prop := c.Advice 1 502 = 0
--Annotation: assign is_code 502
def advice_2_502: Prop := c.Advice 2 502 = 0
--Annotation: assign value 502
def advice_3_502: Prop := c.Advice 3 502 = 0
--Annotation: assign push_data_left 502
def advice_13_502: Prop := c.Advice 13 502 = 0
--Annotation: assign length 502
def advice_15_502: Prop := c.Advice 15 502 = 0
--Annotation: assign push_data_size 502
def advice_16_502: Prop := c.Advice 16 502 = 0
--Annotation: assign value_rlc 502
def advice_14_502: Prop := c.Advice 14 502 = 0
--Annotation: assign code_hash 502
def advice_4_502: Prop := c.Advice 4 502 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 502
def advice_5_502: Prop := c.Advice 5 502 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_502: Prop := c.Advice 17 502 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_502: Prop := c.Advice 18 502 = 1^(-1)
--Annotation: assign q_enable 503
def fixed_2021: Prop := c.Fixed 0 503 = 1
--Annotation: assign q_first 503
def fixed_2022: Prop := c.Fixed 1 503 = 0
--Annotation: assign q_last 503
def fixed_2023: Prop := c.Fixed 2 503 = 0
--Annotation: assign tag 503
def advice_0_503: Prop := c.Advice 0 503 = 0
--Annotation: assign index 503
def advice_1_503: Prop := c.Advice 1 503 = 0
--Annotation: assign is_code 503
def advice_2_503: Prop := c.Advice 2 503 = 0
--Annotation: assign value 503
def advice_3_503: Prop := c.Advice 3 503 = 0
--Annotation: assign push_data_left 503
def advice_13_503: Prop := c.Advice 13 503 = 0
--Annotation: assign length 503
def advice_15_503: Prop := c.Advice 15 503 = 0
--Annotation: assign push_data_size 503
def advice_16_503: Prop := c.Advice 16 503 = 0
--Annotation: assign value_rlc 503
def advice_14_503: Prop := c.Advice 14 503 = 0
--Annotation: assign code_hash 503
def advice_4_503: Prop := c.Advice 4 503 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 503
def advice_5_503: Prop := c.Advice 5 503 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_503: Prop := c.Advice 17 503 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_503: Prop := c.Advice 18 503 = 1^(-1)
--Annotation: assign q_enable 504
def fixed_2024: Prop := c.Fixed 0 504 = 1
--Annotation: assign q_first 504
def fixed_2025: Prop := c.Fixed 1 504 = 0
--Annotation: assign q_last 504
def fixed_2026: Prop := c.Fixed 2 504 = 0
--Annotation: assign tag 504
def advice_0_504: Prop := c.Advice 0 504 = 0
--Annotation: assign index 504
def advice_1_504: Prop := c.Advice 1 504 = 0
--Annotation: assign is_code 504
def advice_2_504: Prop := c.Advice 2 504 = 0
--Annotation: assign value 504
def advice_3_504: Prop := c.Advice 3 504 = 0
--Annotation: assign push_data_left 504
def advice_13_504: Prop := c.Advice 13 504 = 0
--Annotation: assign length 504
def advice_15_504: Prop := c.Advice 15 504 = 0
--Annotation: assign push_data_size 504
def advice_16_504: Prop := c.Advice 16 504 = 0
--Annotation: assign value_rlc 504
def advice_14_504: Prop := c.Advice 14 504 = 0
--Annotation: assign code_hash 504
def advice_4_504: Prop := c.Advice 4 504 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 504
def advice_5_504: Prop := c.Advice 5 504 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_504: Prop := c.Advice 17 504 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_504: Prop := c.Advice 18 504 = 1^(-1)
--Annotation: assign q_enable 505
def fixed_2027: Prop := c.Fixed 0 505 = 1
--Annotation: assign q_first 505
def fixed_2028: Prop := c.Fixed 1 505 = 0
--Annotation: assign q_last 505
def fixed_2029: Prop := c.Fixed 2 505 = 1
--Annotation: assign tag 505
def advice_0_505: Prop := c.Advice 0 505 = 0
--Annotation: assign index 505
def advice_1_505: Prop := c.Advice 1 505 = 0
--Annotation: assign is_code 505
def advice_2_505: Prop := c.Advice 2 505 = 0
--Annotation: assign value 505
def advice_3_505: Prop := c.Advice 3 505 = 0
--Annotation: assign push_data_left 505
def advice_13_505: Prop := c.Advice 13 505 = 0
--Annotation: assign length 505
def advice_15_505: Prop := c.Advice 15 505 = 0
--Annotation: assign push_data_size 505
def advice_16_505: Prop := c.Advice 16 505 = 0
--Annotation: assign value_rlc 505
def advice_14_505: Prop := c.Advice 14 505 = 0
--Annotation: assign code_hash 505
def advice_4_505: Prop := c.Advice 4 505 = (((((((((((((((112) + ((164) * (256))) + ((133) * ((256) * (256)))) + ((93) * (((256) * (256)) * (256)))) + ((4) * ((((256) * (256)) * (256)) * (256)))) + ((216) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((250) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((123) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((59) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((39) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((130) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((202) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((83) * ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((182) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((0) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((229) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: assign code_hash 505
def advice_5_505: Prop := c.Advice 5 505 = (((((((((((((((192) + ((3) * (256))) + ((199) * ((256) * (256)))) + ((220) * (((256) * (256)) * (256)))) + ((178) * ((((256) * (256)) * (256)) * (256)))) + ((125) * (((((256) * (256)) * (256)) * (256)) * (256)))) + ((126) * ((((((256) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((146) * (((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((60) * ((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((35) * (((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((247) * ((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((134) * (((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256))) + ((70) * (((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((210) * ((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))) + ((197) * (((((((((((((((256) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)) * (256)))
--Annotation: witness inverse of value
def advice_17_505: Prop := c.Advice 17 505 = 0^(-1)
--Annotation: witness inverse of value
def advice_18_505: Prop := c.Advice 18 505 = 1^(-1)
--EXITED REGION: assign bytecode
------GATES-------
def gate_0: Prop := ∀ row : ℕ,  0 = 0
def gate_1: Prop := ∀ row : ℕ,  (c.Fixed 0 (row) * c.Advice 13 (row)) * (1 - (c.Advice 13 (row) * c.Advice 17 (row))) = 0
def gate_2: Prop := ∀ row : ℕ,  (c.Fixed 0 (row) * (c.Advice 1 (row) + 1 - c.Advice 15 (row))) * (1 - ((c.Advice 1 (row) + 1 - c.Advice 15 (row)) * c.Advice 18 (row))) = 0
def gate_3: Prop := ∀ row : ℕ,   ((1 * c.Fixed 0 (row)) * (1 - ((1 * (1 - c.Fixed 1 (row))) * (1 - c.Fixed 2 (row))))) * c.Advice 0 (row) = 0
def gate_4: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * (1 - c.Advice 0 (row))) * c.Advice 1 (row) = 0
def gate_5: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * (1 - c.Advice 0 (row))) * (c.Advice 3 (row) - c.Advice 15 (row)) = 0
def gate_6: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * c.Advice 0 (row)) * (c.Advice 2 (row) - (1 - (c.Advice 13 (row) * c.Advice 17 (row)))) = 0
def gate_7: Prop := ∀ row : ℕ,   ((1 * c.Fixed 0 (row)) * (1 - ((1 * (1 - ((1 * (1 - c.Advice 0 (row))) * (1 - c.Advice 0 (row + 1))))) * (1 - c.Fixed 2 (row))))) * c.Advice 15 (row) = 0
def gate_8: Prop := ∀ row : ℕ,   ((1 * c.Fixed 0 (row)) * (1 - ((1 * (1 - ((1 * (1 - c.Advice 0 (row))) * (1 - c.Advice 0 (row + 1))))) * (1 - c.Fixed 2 (row))))) * (0 + c.Advice 4 (row) * 1 - (0x70 * 1xa4 * 0x100x85 * 0x10000x5d * 0x1000000x4 * 0x100000000xd8 * 0x10000000000xfa * 0x1000000000000x7b * 0x100000000000000x3b * 0x10000000000000000x27 * 0x1000000000000000000x82 * 0x100000000000000000000xca * 0x10000000000000000000000x53 * 0x1000000000000000000000000xb6 * 0x100000000000000000000000000 * 0x10000000000000000000000000000xe5 * 0x1000000000000000000000000000000)) = 0
def gate_9: Prop := ∀ row : ℕ,   ((1 * c.Fixed 0 (row)) * (1 - ((1 * (1 - ((1 * (1 - c.Advice 0 (row))) * (1 - c.Advice 0 (row + 1))))) * (1 - c.Fixed 2 (row))))) * (0 + c.Advice 5 (row) * 1 - (0xc0 * 1x3 * 0x100xc7 * 0x10000xdc * 0x1000000xb2 * 0x100000000x7d * 0x10000000000x7e * 0x1000000000000x92 * 0x100000000000000x3c * 0x10000000000000000x23 * 0x1000000000000000000xf7 * 0x100000000000000000000x86 * 0x10000000000000000000000 + 1 * 0x1000000000000000000000000x46 * 0x100000000000000000000000000xd2 * 0x10000000000000000000000000000xc5 * 0x1000000000000000000000000000000)) = 0
def gate_10: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * (c.Advice 15 (row + 1) - c.Advice 15 (row)) = 0
def gate_11: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * c.Advice 1 (row + 1) = 0
def gate_12: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * (c.Advice 2 (row + 1) - 1) = 0
def gate_13: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * (0 + c.Advice 4 (row + 1) * 1 - (0 + c.Advice 4 (row) * 1)) = 0
def gate_14: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * (0 + c.Advice 5 (row + 1) * 1 - (0 + c.Advice 5 (row) * 1)) = 0
def gate_15: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * (1 - c.Advice 0 (row))) * c.Advice 0 (row + 1))) * (c.Advice14(1)@1 - c.Advice 3 (row + 1)) = 0
def gate_16: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (c.Advice 15 (row + 1) - c.Advice 15 (row)) = 0
def gate_17: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (c.Advice 1 (row + 1) - (c.Advice 1 (row) + 1)) = 0
def gate_18: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (0 + c.Advice 4 (row + 1) * 1 - (0 + c.Advice 4 (row) * 1)) = 0
def gate_19: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (0 + c.Advice 5 (row + 1) * 1 - (0 + c.Advice 5 (row) * 1)) = 0
def gate_20: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (c.Advice14(1)@1 - (c.Advice14(1)@0 * C0(0) + c.Advice 3 (row + 1))) = 0
def gate_21: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * c.Advice 0 (row + 1))) * (c.Advice 13 (row + 1) - (c.Advice 2 (row) * c.Advice 16 (row) + (1 - c.Advice 2 (row)) * (c.Advice 13 (row) - 1))) = 0
def gate_22: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * c.Advice 0 (row)) * (1 - ((c.Advice 1 (row) + 1 - c.Advice 15 (row)) * c.Advice 18 (row)))) * c.Advice 0 (row + 1) = 0
def gate_23: Prop := ∀ row : ℕ,   (((1 * c.Fixed 0 (row)) * (1 - c.Fixed 2 (row))) * ((1 * c.Advice 0 (row)) * (1 - c.Advice 0 (row + 1)))) * (c.Advice 1 (row) + 1 - c.Advice 15 (row)) = 0
